name: Test
permissions:
  contents: read

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [main]

jobs:
  test:
    name: Test
    if: github.event_name == 'push' || github.event.action != 'closed'
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.3.1

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        id: bun-cache
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Cache ESLint results
        uses: actions/cache@v4
        with:
          path: .eslintcache
          key: ${{ runner.os }}-eslint-${{ hashFiles('**/bun.lockb') }}-${{ hashFiles('eslint.config.ts', '.eslintrc*', '.eslintignore') }}-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-eslint-${{ hashFiles('**/bun.lockb') }}-${{ hashFiles('eslint.config.ts', '.eslintrc*', '.eslintignore') }}-
            ${{ runner.os }}-eslint-${{ hashFiles('**/bun.lockb') }}-

      - name: Lint code
        run: bun run lint

      - name: Type check
        run: bun run typecheck

      - name: Run unit tests
        run: bun test:unit

      - name: Get Playwright version
        id: playwright-version
        run: echo "version=$(bun pm ls @playwright/test | grep '@playwright/test' | awk '{print $2}' | head -n 1)" >> $GITHUB_OUTPUT

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.version }}

      - name: Install Playwright browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: bunx playwright install --with-deps chromium

      - name: Run E2E tests
        run: bun test:e2e:regression

      - name: Upload Playwright report
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results/
          retention-days: 30

  close-tdd-issue:
    name: Close TDD Issue on PR Merge
    if: |
      github.event_name == 'pull_request' &&
      github.event.action == 'closed' &&
      github.event.pull_request.merged == true &&
      contains(github.event.pull_request.labels.*.name, 'tdd-automation')
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Extract issue number from PR body
        id: issue
        env:
          PR_BODY: ${{ github.event.pull_request.body }}
        run: |
          ISSUE_NUMBER=$(echo "$PR_BODY" | grep -o 'Closes #[0-9]*' | head -1 | grep -o '[0-9]*' || echo "")

          if [ -z "$ISSUE_NUMBER" ]; then
            echo "⚠️ No issue number found in PR body"
            echo "has_issue=false" >> $GITHUB_OUTPUT
          else
            echo "✅ Found issue #$ISSUE_NUMBER"
            echo "has_issue=true" >> $GITHUB_OUTPUT
            echo "issue_number=$ISSUE_NUMBER" >> $GITHUB_OUTPUT
          fi

      - name: Close issue
        if: steps.issue.outputs.has_issue == 'true'
        run: |
          ISSUE_NUMBER="${{ steps.issue.outputs.issue_number }}"

          gh issue close "$ISSUE_NUMBER" --reason completed
          gh issue edit "$ISSUE_NUMBER" --add-label "tdd-spec:completed"
          gh issue edit "$ISSUE_NUMBER" --remove-label "tdd-spec:in-progress"

          echo "✅ Closed issue #$ISSUE_NUMBER"
        env:
          GH_TOKEN: ${{ github.token }}
