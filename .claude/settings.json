{
  "permissions": {
    "allow": [
      "Bash(CLAUDECODE=1 bun test src/domain/models/table/field-types/single-line-text-field.test.ts src/domain/models/table/field-types/long-text-field.test.ts src/domain/models/table/field-types/email-field.test.ts src/domain/models/table/field-types/url-field.test.ts src/domain/models/table/field-types/phone-number-field.test.ts)",
      "Bash(for file in src/domain/models/table/field-types/{single-line-text,long-text,phone-number,email,url,integer,decimal,currency,percentage}-field.test.ts)",
      "Bash(do)",
      "Bash(CLAUDECODE=1 bun test src/domain/models/table/field-types/integer-field.test.ts src/domain/models/table/field-types/decimal-field.test.ts src/domain/models/table/field-types/currency-field.test.ts src/domain/models/table/field-types/percentage-field.test.ts)",
      "Bash(bun run scripts/add-license-headers.ts)",
      "Bash(CLAUDECODE=1 bun test src/domain/models/table/field-types/{decimal,currency,percentage}-field.test.ts)",
      "Bash(CLAUDECODE=1 bun test src/domain/models/table/field-types/decimal-field.test.ts src/domain/models/table/field-types/currency-field.test.ts src/domain/models/table/field-types/percentage-field.test.ts)",
      "Bash(bun run typecheck)",
      "Bash(find src/domain/models/table/field-types -name \"*.test.ts\" -exec sed -i '' \"s/type: ''\\([^'']*\\)''/type: ''\\1'' as const/g\" {} ;)",
      "Bash(bun run lint)",
      "Bash(bun run license)",
      "Bash(CLAUDECODE=1 bun test src/domain/models/table/field-types/single-line-text-field.test.ts src/domain/models/table/field-types/long-text-field.test.ts src/domain/models/table/field-types/phone-number-field.test.ts src/domain/models/table/field-types/email-field.test.ts src/domain/models/table/field-types/url-field.test.ts src/domain/models/table/field-types/integer-field.test.ts src/domain/models/table/field-types/decimal-field.test.ts src/domain/models/table/field-types/currency-field.test.ts src/domain/models/table/field-types/percentage-field.test.ts)",
      "Read(//Users/thomasjeanneau/.config/**)",
      "Bash(bun run lint tests/fixtures.ts)",
      "Bash(git add docs/specifications/schemas/tables/tables.schema.json ROADMAP.md src/domain/models/table/field-types/ src/domain/models/table/fields.ts)",
      "Bash(git reset)",
      "Bash(git add )",
      "Bash(docs/specifications/schemas/tables/tables.schema.json )",
      "Bash(ROADMAP.md )",
      "Bash(src/domain/models/table/field-types/single-line-text-field.ts )",
      "Bash(src/domain/models/table/field-types/single-line-text-field.test.ts )",
      "Bash(src/domain/models/table/field-types/long-text-field.ts )",
      "Bash(src/domain/models/table/field-types/long-text-field.test.ts )",
      "Bash(src/domain/models/table/field-types/phone-number-field.ts )",
      "Bash(src/domain/models/table/field-types/phone-number-field.test.ts )",
      "Bash(src/domain/models/table/field-types/email-field.ts )",
      "Bash(src/domain/models/table/field-types/email-field.test.ts )",
      "Bash(src/domain/models/table/field-types/url-field.ts )",
      "Bash(src/domain/models/table/field-types/url-field.test.ts )",
      "Bash(src/domain/models/table/field-types/integer-field.ts )",
      "Bash(src/domain/models/table/field-types/integer-field.test.ts )",
      "Bash(src/domain/models/table/field-types/decimal-field.ts )",
      "Bash(src/domain/models/table/field-types/decimal-field.test.ts )",
      "Bash(src/domain/models/table/field-types/currency-field.ts )",
      "Bash(src/domain/models/table/field-types/currency-field.test.ts )",
      "Bash(src/domain/models/table/field-types/percentage-field.ts )",
      "Bash(src/domain/models/table/field-types/percentage-field.test.ts )",
      "Bash(src/domain/models/table/field-types/index.ts )",
      "Bash(src/domain/models/table/fields.ts)",
      "Bash(for file in src/domain/models/table/field-types/*.ts)",
      "Bash(if [ -f \"$file\" ])",
      "Bash(! [[ \"$file\" =~ .test.ts$ ]])",
      "Bash(then)",
      "Bash(if ! grep -q \"unique:\" \"$file\")",
      "Bash(basename \"$file\")",
      "Bash(fi)",
      "Bash(done)",
      "Bash(bun run typecheck 2)",
      "Bash(1)"
    ],
    "deny": [],
    "ask": []
  },
  "hooks": {
    "Notification": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "terminal-notifier -message 'Task completed' -title 'Claude Code' -sound Ping"
          },
          {
            "type": "command",
            "command": "bun run format"
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "Write",
        "hooks": [
          {
            "type": "command",
            "command": "if echo \"${CLAUDE_FILE_PATH}\" | grep -E '(src|scripts|tests)/.*\\.tsx?$' > /dev/null 2>&1; then cd ${CLAUDE_PROJECT_DIR} && bun run license 2>&1 | grep -E '(Added header|processed)' || true; fi",
            "timeout": 30
          }
        ]
      },
      {
        "matcher": "Edit|Write",
        "hooks": [
          {
            "type": "command",
            "command": "bun ${CLAUDE_PROJECT_DIR}/.claude/hooks/quality-check.ts",
            "timeout": 90
          }
        ]
      }
    ]
  },
  "outputStyle": "Learning",
  "defaultMode": "plan"
}
