{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Application Configuration",
  "description": "Complete configuration for your application including metadata, data models, automations, and integrations",
  "version": "0.81.0",
  "type": "object",
  "definitions": {
    "id": {
      "description": "Unique positive integer identifier for entities. IDs are system-generated, auto-incrementing, and immutable. Must be unique within the parent collection (e.g., field IDs unique within a table, table IDs unique within the application). IDs are read-only and assigned automatically when entities are created. Range: 1 to 9,007,199,254,740,991 (JavaScript MAX_SAFE_INTEGER).",
      "title": "ID",
      "readOnly": true,
      "type": "integer",
      "minimum": 1,
      "maximum": 9007199254740991,
      "examples": [1, 2, 3, 100, 1000],
      "x-business-rules": [
        "IDs are auto-generated by the system using auto-increment sequences and cannot be manually set by users",
        "IDs must be unique within their parent collection scope (e.g., field IDs unique per table, not globally)",
        "IDs are immutable once assigned - they cannot be changed or reused even after entity deletion",
        "Maximum value enforced to ensure JavaScript number safety and prevent integer overflow in client applications"
      ]
    },
    "name": {
      "description": "Internal identifier name used for database tables, columns, and programmatic references. Must follow database naming conventions: start with a letter, contain only lowercase letters, numbers, and underscores, maximum 63 characters (PostgreSQL limit). This name is used in SQL queries, API endpoints, and code generation. Choose descriptive names that clearly indicate the purpose (e.g., \"email_address\" not \"ea\").",
      "title": "Name",
      "type": "string",
      "minLength": 1,
      "maxLength": 63,
      "pattern": "^[a-z][a-z0-9_]*$",
      "examples": [
        "user",
        "product",
        "order_item",
        "customer_email",
        "shipping_address",
        "created_at"
      ],
      "x-business-rules": [
        "Names must follow PostgreSQL identifier naming rules to ensure database compatibility and prevent SQL syntax errors",
        "63-character limit enforced by PostgreSQL system catalog - exceeding this causes database errors",
        "Snake_case convention (lowercase with underscores) ensures consistency across database, API, and code generation",
        "Names should be descriptive and self-documenting to improve code readability and maintainability"
      ]
    },
    "path": {
      "description": "URL path for routing and navigation. Must start with forward slash (/), contain only lowercase letters, numbers, hyphens, and forward slashes. Used for page routing, API endpoints, and navigation links. Paths should be hierarchical and descriptive (e.g., /customers/orders, /admin/settings). Nested paths are supported.",
      "title": "Path",
      "type": "string",
      "pattern": "^/[a-z0-9-/]*$",
      "minLength": 1,
      "examples": [
        "/home",
        "/customers",
        "/products/inventory",
        "/admin/settings",
        "/reports/sales"
      ],
      "x-business-rules": [
        "Paths must start with forward slash to ensure proper URL routing and prevent relative path ambiguity",
        "Lowercase-only convention ensures URL consistency and prevents case-sensitivity issues across different servers",
        "Hierarchical structure (e.g., /parent/child) enables intuitive navigation and clear information architecture",
        "Paths must be unique across all pages and API endpoints to prevent routing conflicts"
      ]
    },
    "automation": {
      "title": "Automation Workflow",
      "description": "A workflow that executes a series of actions when triggered by specific events or conditions",
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/id",
          "title": "Automation ID",
          "examples": [1, 2, 100],
          "x-user-stories": [
            "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
            "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
            "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
          ]
        },
        "name": {
          "description": "Name of the automation workflow",
          "title": "Automation Name",
          "placeholder": "Enter automation name",
          "examples": ["Send Welcome Email", "Process Order", "Sync Customer Data"],
          "type": "string",
          "minLength": 3,
          "x-business-rules": [
            "Minimum 3 characters required to ensure automation names are descriptive enough for identification in lists",
            "Names should clearly describe the automation's purpose for easier management and debugging",
            "Names are displayed in automation lists, logs, and error messages for user reference"
          ],
          "x-user-stories": [
            "GIVEN user provides name with at least 3 characters WHEN validating input THEN value should be accepted",
            "GIVEN user provides name shorter than 3 chars WHEN validating input THEN error should require minimum length"
          ]
        },
        "description": {
          "description": "Detailed description of what this automation does",
          "title": "Description",
          "placeholder": "Describe what this automation does",
          "examples": [
            "Sends a welcome email when a new user signs up",
            "Processes incoming orders and updates inventory"
          ],
          "type": "string",
          "x-business-rules": [
            "Optional field that provides additional context about the automation's behavior and purpose",
            "Descriptions help team members understand complex workflows without examining the implementation details",
            "Should explain the business logic and expected outcomes rather than technical implementation"
          ],
          "x-user-stories": [
            "GIVEN user provides description WHEN validating input THEN string value should be accepted",
            "GIVEN description is empty string WHEN validating input THEN behavior should follow optional/required rules"
          ]
        },
        "editUrl": {
          "description": "URL to edit this automation in an external tool",
          "title": "Edit URL",
          "placeholder": "https://example.com/automations/edit/123",
          "examples": [
            "https://zapier.com/app/editor/123456",
            "https://make.com/scenario/edit/789"
          ],
          "type": "string",
          "format": "uri",
          "x-business-rules": [
            "Optional URL linking to external automation builder tools (Zapier, Make, n8n) for visual workflow editing",
            "Enables integration with third-party automation platforms while maintaining configuration in Omnera",
            "Must be valid URI format to ensure clickable links work correctly in the UI"
          ],
          "x-user-stories": [
            "GIVEN user provides URL WHEN validating input THEN valid URLs should be accepted",
            "GIVEN user provides invalid URL WHEN validating input THEN clear error message should be displayed",
            "GIVEN URL is stored WHEN user accesses it THEN link should navigate to correct destination"
          ]
        },
        "trigger": {
          "$ref": "#/definitions/automation_trigger",
          "x-user-stories": [
            "GIVEN user configures trigger WHEN validating input THEN value should meet schema requirements",
            "GIVEN trigger is set WHEN processing configuration THEN value should be used correctly"
          ]
        },
        "actions": {
          "description": "Sequence of actions to execute when triggered",
          "title": "Actions",
          "default": [],
          "type": "array",
          "items": {
            "$ref": "#/definitions/automation_action"
          },
          "x-business-rules": [
            "Actions execute sequentially in the order defined, with each action receiving the output of the previous action",
            "Empty actions array is valid but creates a no-op automation that triggers without performing any operations",
            "Action failures can be configured to halt the workflow or continue to subsequent actions based on error handling settings",
            "Actions can access trigger context data and outputs from previous actions via template variables"
          ],
          "x-user-stories": [
            "GIVEN user provides actions array WHEN validating input THEN items should be processed in order",
            "GIVEN actions array is empty WHEN validating input THEN behavior should follow optional/required rules"
          ]
        }
      },
      "required": ["id", "name", "trigger", "actions"],
      "additionalProperties": false,
      "x-user-stories": [
        "GIVEN the application is running WHEN I list automations THEN it should work correctly",
        "GIVEN the application is running WHEN I disable an automation THEN it should work correctly",
        "GIVEN the application is running WHEN I enable an automation THEN it should work correctly",
        "GIVEN the application is running WHEN I open the edit url THEN it should work correctly",
        "GIVEN the application is running WHEN I return a list of automations THEN it should work correctly",
        "GIVEN I am working with same integration actions in a queue WHEN I run parallel automations THEN it should complete successfully"
      ],
      "x-business-rules": [
        "Object structure groups related automation workflow properties for better organization and type-safe access"
      ]
    },
    "automation_trigger": {
      "title": "Trigger",
      "description": "Defines when an automation workflow should execute. Triggers can be event-based (record created, updated, deleted), scheduled (cron expressions for recurring tasks), or manual (webhook endpoints). Configure the trigger type, target table (for record triggers), and specific conditions that must be met. Triggers are evaluated in real-time for events or on schedule for time-based automation.",
      "anyOf": [
        {
          "title": "HTTP Trigger",
          "description": "Triggered by HTTP requests",
          "anyOf": [
            {
              "title": "POST Request",
              "description": "Triggered by a POST request",
              "type": "object",
              "properties": {
                "service": {
                  "type": "string",
                  "const": "http",
                  "x-business-rules": [
                    "Fixed value (http) identifies this specific root.definitions.automation_trigger.anyOf.0.anyOf.0.properties.service type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with service='http' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "event": {
                  "type": "string",
                  "const": "post",
                  "x-business-rules": [
                    "Fixed value (post) identifies this specific root.definitions.automation_trigger.anyOf.0.anyOf.0.properties.event type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with event='post' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid event value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "path": {
                      "type": "string",
                      "x-business-rules": [
                        "Webhook path creates a unique HTTP endpoint for external services to trigger the automation",
                        "Path should be descriptive and unique to prevent conflicts with other webhook endpoints",
                        "Full webhook URL is generated by combining base domain with this path (e.g., https://app.omnera.io/webhooks/{path})"
                      ],
                      "x-user-stories": [
                        "GIVEN user provides path WHEN validating input THEN string value should be accepted",
                        "GIVEN path is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "respondImmediately": {
                      "default": false,
                      "type": "boolean",
                      "x-business-rules": [
                        "When true, HTTP 200 response is sent immediately before executing actions to prevent webhook timeouts",
                        "When false (default), response is sent after all actions complete, allowing action results to be returned to caller",
                        "Immediate response is recommended for long-running workflows to avoid timeout errors from external services"
                      ],
                      "x-user-stories": [
                        "GIVEN respondImmediately is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN respondImmediately is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with respondImmediately WHEN validating settings THEN boolean value should be accepted"
                      ]
                    },
                    "requestBody": {
                      "$ref": "#/definitions/json_schema",
                      "x-user-stories": [
                        "GIVEN user configures requestBody WHEN validating input THEN value should meet schema requirements",
                        "GIVEN requestBody is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["path"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related params properties for better organization and type-safe access"
                  ],
                  "x-user-stories": [
                    "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                    "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                  ]
                }
              },
              "required": ["service", "event", "params"],
              "additionalProperties": false,
              "x-user-stories": [
                "GIVEN a airtable record is created WHEN I trigger an automation THEN it should succeed",
                "GIVEN POST request sent WHEN I process actual lead data THEN it should succeed",
                "GIVEN the application is running WHEN I handle validation for HTTP trigger path as well THEN it should work correctly",
                "GIVEN the application is running WHEN I trigger an automation THEN it should work correctly",
                "GIVEN I am working with immediate response WHEN I trigger an automation THEN it should complete successfully",
                "GIVEN I am working with a invalid body WHEN I not trigger an automation THEN it should complete successfully",
                "GIVEN I am working with a valid object body WHEN I trigger an automation THEN it should complete successfully",
                "GIVEN I am working with a valid array body WHEN I trigger an automation THEN it should complete successfully",
                "GIVEN I am working with a valid array body and respond immediately WHEN I trigger an automation THEN it should complete successfully",
                "GIVEN I am working with form data WHEN I trigger an automation THEN it should complete successfully",
                "GIVEN I am working with a post request WHEN I not found the automation THEN it should complete successfully",
                "GIVEN a calendly invite is created WHEN I trigger an automation THEN it should succeed",
                "GIVEN POST request sent WHEN I process actual lead form data THEN it should succeed"
              ],
              "x-business-rules": [
                "Object structure groups related post request properties for better organization and type-safe access"
              ]
            },
            {
              "title": "GET Request",
              "description": "Triggered by a GET request",
              "type": "object",
              "properties": {
                "service": {
                  "type": "string",
                  "const": "http",
                  "x-business-rules": [
                    "Fixed value (http) identifies this specific root.definitions.automation_trigger.anyOf.0.anyOf.1.properties.service type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with service='http' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "event": {
                  "type": "string",
                  "const": "get",
                  "x-business-rules": [
                    "Fixed value (get) identifies this specific root.definitions.automation_trigger.anyOf.0.anyOf.1.properties.event type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with event='get' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid event value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "path": {
                      "type": "string",
                      "x-business-rules": [
                        "GET webhook paths are typically used for webhook verification by external services (Facebook, LinkedIn)",
                        "Path must match the webhook URL configured in the external service's settings",
                        "GET requests often include verification parameters (challenge tokens) that must be echoed back"
                      ],
                      "x-user-stories": [
                        "GIVEN user provides path WHEN validating input THEN string value should be accepted",
                        "GIVEN path is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "respondImmediately": {
                      "default": false,
                      "type": "boolean",
                      "x-business-rules": [
                        "For GET webhooks, immediate response is often required to complete verification handshakes",
                        "Verification flows expect specific response formats (e.g., echoing challenge parameter)",
                        "After verification, subsequent GET requests may trigger actual automation workflows"
                      ],
                      "x-user-stories": [
                        "GIVEN respondImmediately is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN respondImmediately is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with respondImmediately WHEN validating settings THEN boolean value should be accepted"
                      ]
                    }
                  },
                  "required": ["path"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related params properties for better organization and type-safe access"
                  ],
                  "x-user-stories": [
                    "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                    "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                  ]
                }
              },
              "required": ["service", "event", "params"],
              "additionalProperties": false,
              "x-user-stories": [
                "GIVEN Facebook sends GET validation request WHEN I respond with hub.challenge THEN it should succeed",
                "GIVEN hub.mode is not subscribe WHEN I not respond with challenge THEN it should succeed",
                "GIVEN I am working with a get request WHEN I not found the automation THEN it should complete successfully",
                "GIVEN I am working with a wrong path WHEN I not found the automation THEN it should complete successfully",
                "GIVEN LinkedIn sends GET validation request WHEN I respond with correctly computed challengeResponse THEN it should succeed",
                "GIVEN I am working with correct HMAC computation WHEN I handle GET validation for HTTP trigger path THEN it should complete successfully"
              ],
              "x-business-rules": [
                "Object structure groups related get request properties for better organization and type-safe access"
              ]
            }
          ]
        },
        {
          "title": "Database Trigger",
          "description": "Triggered by database events",
          "anyOf": [
            {
              "title": "Record Created",
              "description": "Triggered when a record is created",
              "type": "object",
              "properties": {
                "service": {
                  "type": "string",
                  "const": "database",
                  "x-business-rules": [
                    "Fixed value (database) identifies this specific root.definitions.automation_trigger.anyOf.1.anyOf.0.properties.service type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with service='database' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "event": {
                  "type": "string",
                  "const": "record-created",
                  "x-business-rules": [
                    "Fixed value (record-created) identifies this specific root.definitions.automation_trigger.anyOf.1.anyOf.0.properties.event type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with event='record-created' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid event value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "table": {
                      "type": "string",
                      "x-business-rules": [
                        "Table name must match an existing table definition in the application configuration",
                        "Trigger fires immediately after a new record is successfully created in the specified table",
                        "Trigger receives the newly created record data as context for use in automation actions",
                        "Multiple automations can listen to the same table's record-created events"
                      ],
                      "x-user-stories": [
                        "GIVEN user provides table WHEN validating input THEN string value should be accepted",
                        "GIVEN table is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    }
                  },
                  "required": ["table"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related params properties for better organization and type-safe access"
                  ],
                  "x-user-stories": [
                    "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                    "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                  ]
                }
              },
              "required": ["service", "event", "params"],
              "additionalProperties": false,
              "x-user-stories": [
                "GIVEN a record is created WHEN I run an automation THEN it should succeed"
              ],
              "x-business-rules": [
                "Object structure groups related record created properties for better organization and type-safe access"
              ]
            },
            {
              "title": "Record Updated",
              "description": "Triggered when a record is updated",
              "type": "object",
              "properties": {
                "service": {
                  "type": "string",
                  "const": "database",
                  "x-business-rules": [
                    "Fixed value (database) identifies this specific root.definitions.automation_trigger.anyOf.1.anyOf.1.properties.service type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with service='database' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "event": {
                  "type": "string",
                  "const": "record-updated",
                  "x-business-rules": [
                    "Fixed value (record-updated) identifies this specific root.definitions.automation_trigger.anyOf.1.anyOf.1.properties.event type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with event='record-updated' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid event value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "table": {
                      "type": "string",
                      "x-business-rules": [
                        "Table name must reference an existing table in the application schema",
                        "Trigger fires after any field in the record is modified and saved",
                        "Trigger context includes both old and new record values to enable change detection",
                        "Triggers on every update - consider using filters to limit execution to specific field changes"
                      ],
                      "x-user-stories": [
                        "GIVEN user provides table WHEN validating input THEN string value should be accepted",
                        "GIVEN table is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    }
                  },
                  "required": ["table"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related params properties for better organization and type-safe access"
                  ],
                  "x-user-stories": [
                    "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                    "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                  ]
                }
              },
              "required": ["service", "event", "params"],
              "additionalProperties": false,
              "x-user-stories": [
                "GIVEN a record is updated WHEN I run an automation THEN it should succeed"
              ],
              "x-business-rules": [
                "Object structure groups related record updated properties for better organization and type-safe access"
              ]
            }
          ]
        },
        {
          "title": "Schedule Trigger",
          "description": "Triggered on a schedule",
          "anyOf": [
            {
              "title": "Cron Time",
              "description": "Triggered by a cron expression",
              "type": "object",
              "properties": {
                "service": {
                  "type": "string",
                  "const": "schedule",
                  "x-business-rules": [
                    "Fixed value (schedule) identifies this specific root.definitions.automation_trigger.anyOf.2.anyOf.0.properties.service type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with service='schedule' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "event": {
                  "type": "string",
                  "const": "cron-time",
                  "x-business-rules": [
                    "Fixed value (cron-time) identifies this specific root.definitions.automation_trigger.anyOf.2.anyOf.0.properties.event type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with event='cron-time' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid event value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "expression": {
                      "type": "string",
                      "x-business-rules": [
                        "Must be a valid cron expression (e.g., '0 9 * * 1' for every Monday at 9 AM)",
                        "Supports standard cron syntax with minute, hour, day of month, month, and day of week fields",
                        "Expression is evaluated in the specified timezone to ensure correct execution timing",
                        "Minimum interval between executions should be at least 1 minute to prevent excessive resource usage"
                      ],
                      "x-user-stories": [
                        "GIVEN template with variables WHEN action executes THEN variables should be substituted with trigger context data",
                        "GIVEN invalid template syntax WHEN validating automation THEN error should identify syntax issues",
                        "GIVEN template variables reference trigger data WHEN automation runs THEN correct values should be interpolated"
                      ]
                    },
                    "timeZone": {
                      "type": "string",
                      "x-business-rules": [
                        "Must be a valid IANA timezone identifier (e.g., 'America/New_York', 'Europe/Paris')",
                        "Timezone ensures cron expressions execute at correct local times regardless of server location",
                        "Handles daylight saving time transitions automatically based on timezone rules",
                        "Critical for business workflows that must run at specific local times (e.g., daily reports at 9 AM local time)"
                      ],
                      "x-user-stories": [
                        "GIVEN automation with timezone WHEN cron expression evaluates THEN execution should occur at correct local time",
                        "GIVEN invalid timezone identifier WHEN validating configuration THEN error should list valid IANA timezones",
                        "GIVEN timezone handles DST transitions WHEN schedule crosses DST boundary THEN execution should occur at correct wall-clock time"
                      ]
                    }
                  },
                  "required": ["expression", "timeZone"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related params properties for better organization and type-safe access"
                  ],
                  "x-user-stories": [
                    "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                    "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                  ]
                }
              },
              "required": ["service", "event", "params"],
              "additionalProperties": false,
              "x-business-rules": [
                "Object structure groups related cron time properties for better organization and type-safe access"
              ]
            }
          ],
          "x-user-stories": [
            "GIVEN I am working with a cron time WHEN I trigger the automation THEN it should complete successfully"
          ]
        },
        {
          "title": "Integration Trigger",
          "description": "Triggered by external service events",
          "anyOf": [
            {
              "title": "Calendly",
              "description": "Triggered by Calendly events",
              "anyOf": [
                {
                  "title": "Invite Created",
                  "description": "Triggered when a Calendly invite is created",
                  "type": "object",
                  "properties": {
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-business-rules": [
                        "References the Calendly connection ID configured in the connections section",
                        "Account must have valid OAuth credentials and webhook permissions",
                        "Supports both numeric IDs and string identifiers for flexibility"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "calendly",
                      "x-business-rules": [
                        "Fixed value (calendly) identifies this specific root.definitions.automation_trigger.anyOf.3.anyOf.0.anyOf.0.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='calendly' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "event": {
                      "type": "string",
                      "const": "invite-created",
                      "x-business-rules": [
                        "Fixed value (invite-created) identifies this specific root.definitions.automation_trigger.anyOf.3.anyOf.0.anyOf.0.properties.event type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with event='invite-created' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid event value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "organization": {
                          "description": "The organization of the trigger",
                          "default": "Current user organization",
                          "type": "string",
                          "x-business-rules": [
                            "Defaults to the authenticated user's organization if not specified",
                            "Filters webhook events to only invites within the specified organization",
                            "Must match a valid Calendly organization UUID accessible by the connected account"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides organization WHEN validating input THEN string value should be accepted",
                            "GIVEN organization is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "scope": {
                          "description": "The scope of the trigger",
                          "default": "user",
                          "type": "string",
                          "enum": ["user", "organization", "group"],
                          "x-business-rules": [
                            "User scope: triggers only for invites created by the authenticated user",
                            "Organization scope: triggers for all invites within the organization (requires org-level permissions)",
                            "Group scope: triggers for invites created by members of a specific group",
                            "Broader scopes require higher permission levels in the Calendly connection"
                          ],
                          "x-user-stories": [
                            "GIVEN user selects scope from valid options WHEN validating input THEN selection should be accepted",
                            "GIVEN user provides invalid scope value WHEN validating input THEN error should list valid options: user, organization, group",
                            "GIVEN scope is set to any valid enum value WHEN processing entity THEN appropriate behavior should execute"
                          ]
                        }
                      },
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["account", "service", "event"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related invite created properties for better organization and type-safe access"
                  ]
                }
              ]
            },
            {
              "title": "Airtable",
              "description": "Triggered by Airtable events",
              "anyOf": [
                {
                  "title": "Record Created",
                  "description": "Triggered when an Airtable record is created",
                  "type": "object",
                  "properties": {
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "airtable",
                      "x-business-rules": [
                        "Fixed value (airtable) identifies this specific root.definitions.automation_trigger.anyOf.3.anyOf.1.anyOf.0.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='airtable' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "event": {
                      "type": "string",
                      "const": "record-created",
                      "x-business-rules": [
                        "Fixed value (record-created) identifies this specific root.definitions.automation_trigger.anyOf.3.anyOf.1.anyOf.0.properties.event type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with event='record-created' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid event value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "baseId": {
                          "type": "string",
                          "x-business-rules": [
                            "Must be a valid Airtable base ID (format: 'appXXXXXXXXXXXXXX')",
                            "Base must be accessible by the connected Airtable account",
                            "Identifies which Airtable workspace/base to monitor for new records"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides baseId WHEN validating input THEN string value should be accepted",
                            "GIVEN baseId is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "tableId": {
                          "type": "string",
                          "x-business-rules": [
                            "Must be a valid Airtable table ID within the specified base",
                            "Table must exist and be accessible by the connected account",
                            "Triggers fire only for records created in this specific table, not other tables in the base"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides tableId WHEN validating input THEN string value should be accepted",
                            "GIVEN tableId is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        }
                      },
                      "required": ["baseId", "tableId"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["account", "service", "event", "params"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related record created properties for better organization and type-safe access"
                  ]
                }
              ]
            },
            {
              "title": "LinkedIn Ads",
              "description": "Triggered by LinkedIn lead events",
              "anyOf": [
                {
                  "title": "New Lead Gen Form Response",
                  "description": "Triggered when a new LinkedIn Lead Gen Form response is created",
                  "type": "object",
                  "properties": {
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "linkedin-ads",
                      "x-business-rules": [
                        "Fixed value (linkedin-ads) identifies this specific root.definitions.automation_trigger.anyOf.3.anyOf.2.anyOf.0.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='linkedin-ads' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "event": {
                      "type": "string",
                      "const": "new-lead-gen-form-response",
                      "x-business-rules": [
                        "Fixed value (new-lead-gen-form-response) identifies this specific root.definitions.automation_trigger.anyOf.3.anyOf.2.anyOf.0.properties.event type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with event='new-lead-gen-form-response' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid event value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "organizationId": {
                          "title": "LinkedIn Organization ID",
                          "description": "Required for non-sponsored lead forms",
                          "type": "string",
                          "x-business-rules": ["Required for non-sponsored lead forms"],
                          "x-user-stories": [
                            "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                            "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                            "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                          ]
                        },
                        "sponsoredAccountId": {
                          "title": "LinkedIn Sponsored Account ID",
                          "description": "Required for sponsored lead forms (leadType: SPONSORED)",
                          "type": "string",
                          "x-business-rules": [
                            "Required for sponsored lead forms (leadType: SPONSORED)"
                          ],
                          "x-user-stories": [
                            "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                            "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                            "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                          ]
                        },
                        "leadType": {
                          "default": "SPONSORED",
                          "description": "Type of lead form. SPONSORED requires sponsoredAccountId",
                          "type": "string",
                          "enum": ["SPONSORED"],
                          "x-business-rules": [
                            "Restricted to 1 allowed values (SPONSORED) to maintain type safety and enable clear validation error messages",
                            "Defaults to \"SPONSORED\" when not specified, providing sensible fallback behavior without requiring explicit configuration"
                          ],
                          "x-user-stories": [
                            "GIVEN user selects leadType from valid options WHEN validating input THEN selection should be accepted",
                            "GIVEN user provides invalid leadType value WHEN validating input THEN error should list valid options: SPONSORED",
                            "GIVEN leadType is set to any valid enum value WHEN processing entity THEN appropriate behavior should execute"
                          ]
                        }
                      },
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["account", "service", "event", "params"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related new lead gen form response properties for better organization and type-safe access"
                  ]
                }
              ],
              "x-user-stories": [
                "GIVEN the application is running WHEN I set up Facebook new lead trigger (subscribes page and app if needed) THEN it should work correctly"
              ]
            },
            {
              "title": "Facebook",
              "description": "Triggered by Facebook lead events",
              "anyOf": [
                {
                  "title": "New Lead",
                  "description": "Triggered when a new Facebook Lead Ad response is created",
                  "type": "object",
                  "properties": {
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "facebook-ads",
                      "x-business-rules": [
                        "Fixed value (facebook-ads) identifies this specific root.definitions.automation_trigger.anyOf.3.anyOf.3.anyOf.0.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='facebook-ads' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "event": {
                      "type": "string",
                      "const": "new-lead",
                      "x-business-rules": [
                        "Fixed value (new-lead) identifies this specific root.definitions.automation_trigger.anyOf.3.anyOf.3.anyOf.0.properties.event type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with event='new-lead' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid event value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "pageId": {
                          "title": "Facebook Page ID",
                          "description": "The ID of the Facebook page with lead forms",
                          "type": "string",
                          "x-business-rules": ["The ID of the Facebook page with lead forms"],
                          "x-user-stories": [
                            "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                            "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                            "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                          ]
                        },
                        "appId": {
                          "title": "Facebook App ID",
                          "description": "Your Facebook App ID from the developer console",
                          "type": "string",
                          "x-business-rules": ["Your Facebook App ID from the developer console"],
                          "x-user-stories": [
                            "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                            "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                            "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                          ]
                        },
                        "appSecret": {
                          "title": "Facebook App Secret",
                          "description": "Your Facebook App Secret from the developer console",
                          "type": "string",
                          "x-business-rules": [
                            "Your Facebook App Secret from the developer console"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides appSecret WHEN validating input THEN string value should be accepted",
                            "GIVEN appSecret is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "verifyToken": {
                          "title": "Webhook Verify Token",
                          "description": "Security token for webhook verification (auto-generated if not provided)",
                          "type": "string",
                          "x-business-rules": [
                            "System automatically generates webhook verify token to ensure consistency and prevent duplicate or invalid values"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides verifyToken WHEN validating input THEN string value should be accepted",
                            "GIVEN verifyToken is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        }
                      },
                      "required": ["pageId", "appId", "appSecret"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["account", "service", "event", "params"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related new lead properties for better organization and type-safe access"
                  ]
                }
              ],
              "x-user-stories": [
                "GIVEN I am working with known test vectors WHEN I compute challengeResponse correctly THEN it should complete successfully",
                "GIVEN the application is running WHEN I set up LinkedIn new lead gen response trigger (creates subscription if none) THEN it should work correctly"
              ]
            }
          ]
        }
      ]
    },
    "automation_action": {
      "title": "Action",
      "description": "Actions to perform when an automation is triggered. Actions execute sequentially in the order defined. Available action types: send-email (email notifications), create-record (insert data), update-record (modify data), delete-record (remove data), http-request (call external APIs), run-script (execute custom code). Each action type has specific configuration requirements and can reference trigger data using template variables.",
      "anyOf": [
        {
          "title": "HTTP Action",
          "description": "HTTP request action",
          "anyOf": [
            {
              "title": "GET Request",
              "description": "Make a GET HTTP request",
              "type": "object",
              "properties": {
                "name": {
                  "title": "Action Name",
                  "description": "Human-readable name for this action to identify it in automation logs",
                  "type": "string",
                  "minLength": 1,
                  "examples": ["Fetch user data", "Call external API", "Get weather info"],
                  "x-business-rules": [
                    "Human-readable name for this action to identify it in automation logs"
                  ],
                  "x-user-stories": [
                    "GIVEN user provides name with at least 1 characters WHEN validating input THEN value should be accepted",
                    "GIVEN user provides name shorter than 1 chars WHEN validating input THEN error should require minimum length"
                  ]
                },
                "service": {
                  "title": "Service Type",
                  "description": "The service this action uses",
                  "type": "string",
                  "const": "http",
                  "x-business-rules": [
                    "Fixed value (http) identifies this specific root.definitions.automation_action.anyOf.0.anyOf.0.properties.service type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with service='http' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "action": {
                  "title": "Action Type",
                  "description": "The specific HTTP action to perform",
                  "type": "string",
                  "const": "get",
                  "x-business-rules": [
                    "Fixed value (get) identifies this specific root.definitions.automation_action.anyOf.0.anyOf.0.properties.action type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with action='get' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "params": {
                  "title": "Action Parameters",
                  "description": "Configuration for the HTTP GET request",
                  "type": "object",
                  "properties": {
                    "url": {
                      "title": "URL",
                      "description": "The URL to send the GET request to (supports template variables like {{env.API_URL}})",
                      "type": "string",
                      "minLength": 1,
                      "examples": [
                        "https://api.example.com/users",
                        "{{env.API_URL}}/data",
                        "https://api.weather.com?city={{trigger.city}}"
                      ],
                      "x-business-rules": [
                        "The URL to send the GET request to (supports template variables like {{env"
                      ],
                      "x-user-stories": [
                        "GIVEN user provides url with at least 1 characters WHEN validating input THEN value should be accepted",
                        "GIVEN user provides url shorter than 1 chars WHEN validating input THEN error should require minimum length"
                      ]
                    },
                    "headers": {
                      "title": "HTTP Headers",
                      "description": "Custom HTTP headers to include in the request (supports template variables)",
                      "type": "object",
                      "propertyNames": {
                        "type": "string"
                      },
                      "additionalProperties": {
                        "type": "string"
                      },
                      "examples": [
                        {
                          "Authorization": "Bearer {{env.API_TOKEN}}",
                          "Content-Type": "application/json"
                        }
                      ],
                      "x-business-rules": [
                        "Object structure groups related http headers properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures headers WHEN validating input THEN value should meet schema requirements",
                        "GIVEN headers is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["url"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related action parameters properties for better organization and type-safe access"
                  ],
                  "x-user-stories": [
                    "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                    "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                  ]
                }
              },
              "required": ["name", "service", "action", "params"],
              "additionalProperties": false,
              "x-user-stories": [
                "GIVEN the application is running WHEN I run a get http action THEN it should work correctly",
                "GIVEN I am working with headers WHEN I run a get http action THEN it should complete successfully"
              ],
              "x-business-rules": [
                "Object structure groups related get request properties for better organization and type-safe access"
              ]
            },
            {
              "title": "POST Request",
              "description": "Make a POST HTTP request",
              "type": "object",
              "properties": {
                "name": {
                  "title": "Action Name",
                  "description": "Human-readable name for this action to identify it in automation logs",
                  "type": "string",
                  "minLength": 1,
                  "examples": ["Create user", "Send notification", "Post data to API"],
                  "x-business-rules": [
                    "Human-readable name for this action to identify it in automation logs"
                  ],
                  "x-user-stories": [
                    "GIVEN user provides name with at least 1 characters WHEN validating input THEN value should be accepted",
                    "GIVEN user provides name shorter than 1 chars WHEN validating input THEN error should require minimum length"
                  ]
                },
                "service": {
                  "title": "Service Type",
                  "description": "The service this action uses",
                  "type": "string",
                  "const": "http",
                  "x-business-rules": [
                    "Fixed value (http) identifies this specific root.definitions.automation_action.anyOf.0.anyOf.1.properties.service type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with service='http' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "action": {
                  "title": "Action Type",
                  "description": "The specific HTTP action to perform",
                  "type": "string",
                  "const": "post",
                  "x-business-rules": [
                    "Fixed value (post) identifies this specific root.definitions.automation_action.anyOf.0.anyOf.1.properties.action type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with action='post' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "params": {
                  "title": "Action Parameters",
                  "description": "Configuration for the HTTP POST request",
                  "type": "object",
                  "properties": {
                    "url": {
                      "title": "URL",
                      "description": "The URL to send the POST request to (supports template variables like {{env.API_URL}})",
                      "type": "string",
                      "minLength": 1,
                      "examples": [
                        "https://api.example.com/users",
                        "{{env.WEBHOOK_URL}}",
                        "https://api.service.com/events"
                      ],
                      "x-business-rules": [
                        "The URL to send the POST request to (supports template variables like {{env"
                      ],
                      "x-user-stories": [
                        "GIVEN user provides url with at least 1 characters WHEN validating input THEN value should be accepted",
                        "GIVEN user provides url shorter than 1 chars WHEN validating input THEN error should require minimum length"
                      ]
                    },
                    "headers": {
                      "title": "HTTP Headers",
                      "description": "Custom HTTP headers to include in the request (supports template variables)",
                      "type": "object",
                      "propertyNames": {
                        "type": "string"
                      },
                      "additionalProperties": {
                        "type": "string"
                      },
                      "examples": [
                        {
                          "Authorization": "Bearer {{env.API_TOKEN}}",
                          "Content-Type": "application/json"
                        }
                      ],
                      "x-business-rules": [
                        "Object structure groups related http headers properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures headers WHEN validating input THEN value should meet schema requirements",
                        "GIVEN headers is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "body": {
                      "title": "Request Body",
                      "description": "JSON object to send as the request body (supports template variables)",
                      "type": "object",
                      "propertyNames": {
                        "type": "string"
                      },
                      "additionalProperties": {},
                      "examples": [
                        {
                          "name": "{{trigger.name}}",
                          "email": "{{trigger.email}}",
                          "status": "active"
                        }
                      ],
                      "x-business-rules": [
                        "Object structure groups related request body properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures body WHEN validating input THEN value should meet schema requirements",
                        "GIVEN body is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["url"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related action parameters properties for better organization and type-safe access"
                  ],
                  "x-user-stories": [
                    "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                    "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                  ]
                }
              },
              "required": ["name", "service", "action", "params"],
              "additionalProperties": false,
              "x-user-stories": [
                "GIVEN the application is running WHEN I run a post http action THEN it should work correctly",
                "GIVEN I am working with headers WHEN I run a post http action THEN it should complete successfully",
                "GIVEN I am working with env headers WHEN I run a post http action THEN it should complete successfully",
                "GIVEN I am working with default env headers WHEN I run a post http action THEN it should complete successfully",
                "GIVEN I am working with body WHEN I run a post http action THEN it should complete successfully"
              ],
              "x-business-rules": [
                "Object structure groups related post request properties for better organization and type-safe access"
              ]
            },
            {
              "title": "HTTP Response",
              "description": "Send an HTTP response",
              "type": "object",
              "properties": {
                "name": {
                  "title": "Action Name",
                  "description": "Human-readable name for this action to identify it in automation logs",
                  "type": "string",
                  "minLength": 1,
                  "examples": ["Send response", "Return data", "Send webhook response"],
                  "x-business-rules": [
                    "Human-readable name for this action to identify it in automation logs"
                  ],
                  "x-user-stories": [
                    "GIVEN user provides name with at least 1 characters WHEN validating input THEN value should be accepted",
                    "GIVEN user provides name shorter than 1 chars WHEN validating input THEN error should require minimum length"
                  ]
                },
                "service": {
                  "title": "Service Type",
                  "description": "The service this action uses",
                  "type": "string",
                  "const": "http",
                  "x-business-rules": [
                    "Fixed value (http) identifies this specific root.definitions.automation_action.anyOf.0.anyOf.2.properties.service type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with service='http' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "action": {
                  "title": "Action Type",
                  "description": "The specific HTTP action to perform",
                  "type": "string",
                  "const": "response",
                  "x-business-rules": [
                    "Fixed value (response) identifies this specific root.definitions.automation_action.anyOf.0.anyOf.2.properties.action type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with action='response' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "params": {
                  "title": "Response Parameters",
                  "description": "Configuration for the HTTP response to send back to the requester",
                  "type": "object",
                  "properties": {
                    "headers": {
                      "title": "Response Headers",
                      "description": "HTTP headers to include in the response (supports template variables)",
                      "type": "object",
                      "propertyNames": {
                        "type": "string"
                      },
                      "additionalProperties": {
                        "type": "string"
                      },
                      "examples": [
                        {
                          "Content-Type": "application/json",
                          "X-Custom-Header": "{{trigger.id}}"
                        }
                      ],
                      "x-business-rules": [
                        "Object structure groups related response headers properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures headers WHEN validating input THEN value should meet schema requirements",
                        "GIVEN headers is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "body": {
                      "title": "Response Body",
                      "description": "The response body to send (can be JSON object or string, supports template variables)",
                      "anyOf": [
                        {
                          "type": "object",
                          "propertyNames": {
                            "type": "string"
                          },
                          "additionalProperties": {},
                          "x-business-rules": [
                            "Object structure groups related 0 properties for better organization and type-safe access"
                          ]
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "examples": [
                        {
                          "success": true,
                          "message": "Data received"
                        },
                        "OK",
                        "{{previous_action.result}}"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures body WHEN validating input THEN value should meet schema requirements",
                        "GIVEN body is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related response parameters properties for better organization and type-safe access"
                  ],
                  "x-user-stories": [
                    "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                    "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                  ]
                }
              },
              "required": ["name", "service", "action"],
              "additionalProperties": false,
              "x-user-stories": [
                "GIVEN the application is running WHEN I run a response http action THEN it should work correctly",
                "GIVEN I am working with body from a post request WHEN I run a response http action THEN it should complete successfully",
                "GIVEN I am working with body from a get request WHEN I run a response http action THEN it should complete successfully",
                "GIVEN I am working with previous error WHEN I run a response http action THEN it should complete successfully",
                "GIVEN I am working with previous action WHEN I run a response http action THEN it should complete successfully",
                "GIVEN I am working with headers WHEN I run a response http action THEN it should complete successfully"
              ],
              "x-business-rules": [
                "Object structure groups related http response properties for better organization and type-safe access"
              ]
            }
          ]
        },
        {
          "title": "Code Action",
          "description": "Execute custom code",
          "anyOf": [
            {
              "title": "Run TypeScript",
              "description": "Execute TypeScript code",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "x-user-stories": [
                    "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                    "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                  ]
                },
                "service": {
                  "type": "string",
                  "const": "code",
                  "x-business-rules": [
                    "Fixed value (code) identifies this specific root.definitions.automation_action.anyOf.1.anyOf.0.properties.service type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with service='code' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "action": {
                  "type": "string",
                  "const": "run-typescript",
                  "x-business-rules": [
                    "Fixed value (run-typescript) identifies this specific root.definitions.automation_action.anyOf.1.anyOf.0.properties.action type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with action='run-typescript' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "inputData": {
                      "default": {},
                      "type": "object",
                      "propertyNames": {
                        "type": "string"
                      },
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-business-rules": [
                        "Defaults to {} when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures inputData WHEN validating input THEN value should meet schema requirements",
                        "GIVEN inputData is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "code": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides code WHEN validating input THEN string value should be accepted",
                        "GIVEN code is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    }
                  },
                  "required": ["code"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related params properties for better organization and type-safe access"
                  ],
                  "x-user-stories": [
                    "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                    "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                  ]
                }
              },
              "required": ["name", "service", "action", "params"],
              "additionalProperties": false,
              "x-user-stories": [
                "GIVEN the application is running WHEN I run a TypeScript code THEN it should work correctly",
                "GIVEN I am working with input data WHEN I run a TypeScript code THEN it should complete successfully",
                "GIVEN the code throw an error WHEN I return an error THEN it should succeed",
                "GIVEN I am working with externals WHEN I run a TypeScript code THEN it should complete successfully",
                "GIVEN I am working with globals variables WHEN I run a TypeScript code THEN it should complete successfully",
                "GIVEN I am working with tables WHEN I run a TypeScript code THEN it should complete successfully",
                "GIVEN I am working with buckets WHEN I run a TypeScript code THEN it should complete successfully",
                "GIVEN the application is running WHEN I run a TypeScript code that return an array THEN it should work correctly",
                "GIVEN the application is running WHEN I filter a TypeScript code that return an empty array THEN it should work correctly",
                "GIVEN I am working with actions WHEN I run a TypeScript code THEN it should complete successfully"
              ],
              "x-business-rules": [
                "Object structure groups related run typescript properties for better organization and type-safe access"
              ]
            },
            {
              "title": "Run JavaScript",
              "description": "Execute JavaScript code",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "x-user-stories": [
                    "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                    "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                  ]
                },
                "service": {
                  "type": "string",
                  "const": "code",
                  "x-business-rules": [
                    "Fixed value (code) identifies this specific root.definitions.automation_action.anyOf.1.anyOf.1.properties.service type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with service='code' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "action": {
                  "type": "string",
                  "const": "run-javascript",
                  "x-business-rules": [
                    "Fixed value (run-javascript) identifies this specific root.definitions.automation_action.anyOf.1.anyOf.1.properties.action type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with action='run-javascript' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "inputData": {
                      "default": {},
                      "type": "object",
                      "propertyNames": {
                        "type": "string"
                      },
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-business-rules": [
                        "Defaults to {} when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures inputData WHEN validating input THEN value should meet schema requirements",
                        "GIVEN inputData is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "code": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides code WHEN validating input THEN string value should be accepted",
                        "GIVEN code is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    }
                  },
                  "required": ["code"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related params properties for better organization and type-safe access"
                  ],
                  "x-user-stories": [
                    "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                    "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                  ]
                }
              },
              "required": ["name", "service", "action", "params"],
              "additionalProperties": false,
              "x-user-stories": [
                "GIVEN the application is running WHEN I run a JavaScript code THEN it should work correctly",
                "GIVEN I am working with input data WHEN I run a JavaScript code THEN it should complete successfully",
                "GIVEN I am working with externals WHEN I run a JavaScript code THEN it should complete successfully",
                "GIVEN I am working with globals variables WHEN I run a JavaScript code THEN it should complete successfully",
                "GIVEN I am working with tables WHEN I run a JavaScript code THEN it should complete successfully",
                "GIVEN I am working with buckets WHEN I run a JavaScript code THEN it should complete successfully",
                "GIVEN the application is running WHEN I run a JavaScript code that return an array THEN it should work correctly",
                "GIVEN the application is running WHEN I filter a JavaScript code that return an empty array THEN it should work correctly",
                "GIVEN I am working with actions WHEN I run a JavaScript code THEN it should complete successfully"
              ],
              "x-business-rules": [
                "Object structure groups related run javascript properties for better organization and type-safe access"
              ]
            }
          ]
        },
        {
          "title": "Filter Action",
          "description": "Filter or branch automation flow",
          "anyOf": [
            {
              "title": "Only Continue If",
              "description": "Continue only if condition is met",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "x-user-stories": [
                    "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                    "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                  ]
                },
                "service": {
                  "type": "string",
                  "const": "filter",
                  "x-business-rules": [
                    "Fixed value (filter) identifies this specific root.definitions.automation_action.anyOf.2.anyOf.0.properties.service type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with service='filter' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "action": {
                  "type": "string",
                  "const": "only-continue-if",
                  "x-business-rules": [
                    "Fixed value (only-continue-if) identifies this specific root.definitions.automation_action.anyOf.2.anyOf.0.properties.action type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with action='only-continue-if' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "params": {
                  "$ref": "#/definitions/filter_condition",
                  "x-user-stories": [
                    "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                    "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                  ]
                }
              },
              "required": ["name", "service", "action", "params"],
              "additionalProperties": false,
              "x-user-stories": [
                "GIVEN the application is running WHEN I not run an action if the filter returns false THEN it should work correctly",
                "GIVEN the application is running WHEN I run an and filter action that returns true THEN it should work correctly",
                "GIVEN the application is running WHEN I run an and filter action that returns false THEN it should work correctly",
                "GIVEN the application is running WHEN I run an or filter action that returns true THEN it should work correctly",
                "GIVEN the application is running WHEN I run an or filter action that returns false THEN it should work correctly",
                "GIVEN the application is running WHEN I run an action if the filter returns true THEN it should work correctly",
                "GIVEN the application is running WHEN I run an exists filter action that returns true THEN it should work correctly",
                "GIVEN the application is running WHEN I run an exists filter action that returns false THEN it should work correctly",
                "GIVEN the application is running WHEN I run an does-not-exist filter action that returns true THEN it should work correctly",
                "GIVEN the application is running WHEN I run an does-not-exist filter action that returns false THEN it should work correctly",
                "GIVEN the application is running WHEN I run an is-true filter action that returns true THEN it should work correctly",
                "GIVEN the application is running WHEN I run an is-true filter action that returns false THEN it should work correctly",
                "GIVEN the application is running WHEN I run an is-false filter action that returns true THEN it should work correctly",
                "GIVEN the application is running WHEN I run an is-false filter action that returns false THEN it should work correctly",
                "GIVEN the application is running WHEN I run an contains filter action that returns true THEN it should work correctly",
                "GIVEN the application is running WHEN I run an contains filter action that returns false THEN it should work correctly",
                "GIVEN the application is running WHEN I run an does-not-contain filter action that returns true THEN it should work correctly",
                "GIVEN the application is running WHEN I run an does-not-contain filter action that returns false THEN it should work correctly"
              ],
              "x-business-rules": [
                "Object structure groups related only continue if properties for better organization and type-safe access"
              ]
            },
            {
              "title": "Split Into Paths",
              "description": "Branch automation into multiple paths",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "x-user-stories": [
                    "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                    "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                  ]
                },
                "service": {
                  "type": "string",
                  "const": "filter",
                  "x-business-rules": [
                    "Fixed value (filter) identifies this specific root.definitions.automation_action.anyOf.2.anyOf.1.properties.service type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with service='filter' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "action": {
                  "type": "string",
                  "const": "split-into-paths",
                  "x-business-rules": [
                    "Fixed value (split-into-paths) identifies this specific root.definitions.automation_action.anyOf.2.anyOf.1.properties.action type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with action='split-into-paths' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "params": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "x-user-stories": [
                          "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                          "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                        ]
                      },
                      "filter": {
                        "$ref": "#/definitions/filter_condition",
                        "x-user-stories": [
                          "GIVEN user configures filter WHEN validating input THEN value should meet schema requirements",
                          "GIVEN filter is set WHEN processing configuration THEN value should be used correctly"
                        ]
                      },
                      "actions": {
                        "type": "array",
                        "items": {
                          "$ref": "#/definitions/automation_action"
                        },
                        "x-business-rules": [
                          "Array enables multiple actions to be configured, supporting flexible workflows and batch operations"
                        ],
                        "x-user-stories": [
                          "GIVEN user provides actions array WHEN validating input THEN items should be processed in order",
                          "GIVEN actions array is empty WHEN validating input THEN behavior should follow optional/required rules"
                        ]
                      }
                    },
                    "required": ["name", "filter", "actions"],
                    "additionalProperties": false,
                    "x-business-rules": [
                      "Object structure groups related items properties for better organization and type-safe access"
                    ]
                  },
                  "x-business-rules": [
                    "Array enables multiple params to be configured, supporting flexible workflows and batch operations"
                  ],
                  "x-user-stories": [
                    "GIVEN user provides params array WHEN validating input THEN items should be processed in order",
                    "GIVEN params array is empty WHEN validating input THEN behavior should follow optional/required rules"
                  ]
                }
              },
              "required": ["name", "service", "action", "params"],
              "additionalProperties": false,
              "x-user-stories": [
                "GIVEN the application is running WHEN I run a split into paths paths action THEN it should work correctly",
                "GIVEN I am working with 2 valid paths WHEN I run a split into paths paths action THEN it should complete successfully",
                "GIVEN the application is running WHEN I run a split into paths paths action before another action THEN it should work correctly",
                "GIVEN I am working with an error WHEN I run a split into paths paths action THEN it should complete successfully"
              ],
              "x-business-rules": [
                "Object structure groups related split into paths properties for better organization and type-safe access"
              ]
            }
          ]
        },
        {
          "title": "Database Action",
          "description": "Database operations",
          "anyOf": [
            {
              "title": "Create Record",
              "description": "Create a record in a database table",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "x-user-stories": [
                    "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                    "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                  ]
                },
                "service": {
                  "type": "string",
                  "const": "database",
                  "x-business-rules": [
                    "Fixed value (database) identifies this specific root.definitions.automation_action.anyOf.3.anyOf.0.properties.service type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with service='database' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "action": {
                  "type": "string",
                  "const": "create-record",
                  "x-business-rules": [
                    "Fixed value (create-record) identifies this specific root.definitions.automation_action.anyOf.3.anyOf.0.properties.action type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with action='create-record' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "table": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures table WHEN validating input THEN value should meet schema requirements",
                        "GIVEN table is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "fields": {
                      "type": "object",
                      "propertyNames": {
                        "type": "string"
                      },
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "boolean",
                            "x-business-rules": [
                              "Boolean flag enables/disables 2 functionality through simple true/false configuration"
                            ]
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "x-business-rules": [
                        "Object structure groups related fields properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures fields WHEN validating input THEN value should meet schema requirements",
                        "GIVEN fields is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["table", "fields"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related params properties for better organization and type-safe access"
                  ],
                  "x-user-stories": [
                    "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                    "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                  ]
                }
              },
              "required": ["name", "service", "action", "params"],
              "additionalProperties": false,
              "x-business-rules": [
                "Object structure groups related create record properties for better organization and type-safe access"
              ]
            }
          ],
          "x-user-stories": [
            "GIVEN the application is running WHEN I create a record from an automation THEN it should work correctly"
          ]
        },
        {
          "title": "Integration Action",
          "description": "Actions performed via external service integrations",
          "anyOf": [
            {
              "title": "Calendly",
              "description": "Actions for Calendly API",
              "anyOf": [
                {
                  "title": "List Webhook Subscriptions",
                  "description": "Lists the webhook subscriptions for a given organization",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                        "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "calendly",
                      "x-business-rules": [
                        "Fixed value (calendly) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.0.anyOf.0.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='calendly' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "const": "list-webhook-subscriptions",
                      "x-business-rules": [
                        "Fixed value (list-webhook-subscriptions) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.0.anyOf.0.properties.action type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with action='list-webhook-subscriptions' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "organization": {
                          "default": "Current user organisation",
                          "type": "string",
                          "x-business-rules": [
                            "Defaults to \"Current user organisation\" when not specified, providing sensible fallback behavior without requiring explicit configuration"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides organization WHEN validating input THEN string value should be accepted",
                            "GIVEN organization is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "scope": {
                          "default": "user",
                          "type": "string",
                          "enum": ["user", "organization", "group"],
                          "x-business-rules": [
                            "Restricted to 3 allowed values (user, organization, group) to maintain type safety and enable clear validation error messages",
                            "Defaults to \"user\" when not specified, providing sensible fallback behavior without requiring explicit configuration"
                          ],
                          "x-user-stories": [
                            "GIVEN user selects scope from valid options WHEN validating input THEN selection should be accepted",
                            "GIVEN user provides invalid scope value WHEN validating input THEN error should list valid options: user, organization, group",
                            "GIVEN scope is set to any valid enum value WHEN processing entity THEN appropriate behavior should execute"
                          ]
                        },
                        "count": {
                          "default": 20,
                          "type": "number",
                          "minimum": 1,
                          "maximum": 100,
                          "x-business-rules": [
                            "Numeric range (1-100) prevents overflow errors and ensures values stay within valid business bounds",
                            "Defaults to 20 when not specified, providing sensible fallback behavior without requiring explicit configuration"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides count between 1 and 100 WHEN validating input THEN value should be accepted",
                            "GIVEN user provides count below 1 WHEN validating input THEN error should enforce minimum value",
                            "GIVEN user provides count above 100 WHEN validating input THEN error should enforce maximum value"
                          ]
                        }
                      },
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["name", "account", "service", "action"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related list webhook subscriptions properties for better organization and type-safe access"
                  ]
                },
                {
                  "title": "Get Event Type",
                  "description": "Gets the event type for a given uuid",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                        "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "calendly",
                      "x-business-rules": [
                        "Fixed value (calendly) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.0.anyOf.1.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='calendly' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "const": "get-event-type",
                      "x-business-rules": [
                        "Fixed value (get-event-type) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.0.anyOf.1.properties.action type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with action='get-event-type' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN user provides uuid WHEN validating input THEN string value should be accepted",
                            "GIVEN uuid is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        }
                      },
                      "required": ["uuid"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["name", "account", "service", "action", "params"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related get event type properties for better organization and type-safe access"
                  ]
                }
              ],
              "x-user-stories": [
                "GIVEN the application is running WHEN I run a google sheets append values action THEN it should work correctly"
              ]
            },
            {
              "title": "Airtable",
              "description": "Actions for Airtable API",
              "anyOf": [
                {
                  "title": "List Webhook Payloads",
                  "description": "Lists the webhook payloads for a given webhook",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                        "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "airtable",
                      "x-business-rules": [
                        "Fixed value (airtable) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.1.anyOf.0.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='airtable' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "const": "list-webhook-payloads",
                      "x-business-rules": [
                        "Fixed value (list-webhook-payloads) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.1.anyOf.0.properties.action type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with action='list-webhook-payloads' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "baseId": {
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN user provides baseId WHEN validating input THEN string value should be accepted",
                            "GIVEN baseId is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "webhookId": {
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN user provides webhookId WHEN validating input THEN string value should be accepted",
                            "GIVEN webhookId is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "cursor": {
                          "type": "number",
                          "x-user-stories": [
                            "GIVEN user provides cursor WHEN validating input THEN numeric value should be accepted",
                            "GIVEN user provides non-numeric cursor WHEN validating input THEN error should require number"
                          ]
                        },
                        "limit": {
                          "type": "number",
                          "x-user-stories": [
                            "GIVEN user provides limit WHEN validating input THEN numeric value should be accepted",
                            "GIVEN user provides non-numeric limit WHEN validating input THEN error should require number"
                          ]
                        }
                      },
                      "required": ["baseId", "webhookId"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["name", "account", "service", "action", "params"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related list webhook payloads properties for better organization and type-safe access"
                  ]
                }
              ],
              "x-user-stories": [
                "GIVEN the application is running WHEN I run a google gmail send email action THEN it should work correctly"
              ]
            },
            {
              "title": "Google Sheets",
              "description": "Actions for Google Sheets API",
              "anyOf": [
                {
                  "title": "Append Values",
                  "description": "Appends values to a Google Sheets spreadsheet",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                        "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "google-sheets",
                      "x-business-rules": [
                        "Fixed value (google-sheets) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.2.anyOf.0.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='google-sheets' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "const": "append-values",
                      "x-business-rules": [
                        "Fixed value (append-values) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.2.anyOf.0.properties.action type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with action='append-values' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "spreadsheetId": {
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN user provides spreadsheetId WHEN validating input THEN string value should be accepted",
                            "GIVEN spreadsheetId is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "range": {
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN user provides range WHEN validating input THEN string value should be accepted",
                            "GIVEN range is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "values": {
                          "type": "array",
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-business-rules": [
                              "Array enables multiple items to be configured, supporting flexible workflows and batch operations"
                            ]
                          },
                          "x-business-rules": [
                            "Array enables multiple values to be configured, supporting flexible workflows and batch operations"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides values array WHEN validating input THEN items should be processed in order",
                            "GIVEN values array is empty WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        }
                      },
                      "required": ["spreadsheetId", "range", "values"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["name", "account", "service", "action", "params"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related append values properties for better organization and type-safe access"
                  ]
                }
              ],
              "x-user-stories": [
                "GIVEN the application is running WHEN I run a airtable list webhook payloads action THEN it should work correctly"
              ]
            },
            {
              "title": "Google Gmail",
              "description": "Actions for Google Gmail API",
              "anyOf": [
                {
                  "title": "Send Email",
                  "description": "Sends an email",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                        "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "google-gmail",
                      "x-business-rules": [
                        "Fixed value (google-gmail) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.3.anyOf.0.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='google-gmail' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "const": "send-email",
                      "x-business-rules": [
                        "Fixed value (send-email) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.3.anyOf.0.properties.action type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with action='send-email' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "from": {
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN user provides from WHEN validating input THEN string value should be accepted",
                            "GIVEN from is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "name": {
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                            "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "to": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "x-business-rules": [
                                "Array enables multiple 1 to be configured, supporting flexible workflows and batch operations"
                              ]
                            }
                          ],
                          "x-user-stories": [
                            "GIVEN user configures to WHEN validating input THEN value should meet schema requirements",
                            "GIVEN to is set WHEN processing configuration THEN value should be used correctly"
                          ]
                        },
                        "cc": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "x-business-rules": [
                                "Array enables multiple 1 to be configured, supporting flexible workflows and batch operations"
                              ]
                            }
                          ],
                          "x-user-stories": [
                            "GIVEN user configures cc WHEN validating input THEN value should meet schema requirements",
                            "GIVEN cc is set WHEN processing configuration THEN value should be used correctly"
                          ]
                        },
                        "bcc": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "x-business-rules": [
                                "Array enables multiple 1 to be configured, supporting flexible workflows and batch operations"
                              ]
                            }
                          ],
                          "x-user-stories": [
                            "GIVEN user configures bcc WHEN validating input THEN value should meet schema requirements",
                            "GIVEN bcc is set WHEN processing configuration THEN value should be used correctly"
                          ]
                        },
                        "subject": {
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN user provides subject WHEN validating input THEN string value should be accepted",
                            "GIVEN subject is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "html": {
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN user provides html WHEN validating input THEN string value should be accepted",
                            "GIVEN html is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "text": {
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN user provides text WHEN validating input THEN string value should be accepted",
                            "GIVEN text is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        }
                      },
                      "required": ["to", "subject", "html"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["name", "account", "service", "action", "params"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related send email properties for better organization and type-safe access"
                  ]
                }
              ],
              "x-user-stories": [
                "GIVEN the application is running WHEN I run a facebook get leadgen action THEN it should work correctly",
                "GIVEN the application is running WHEN I run a facebook list app subscriptions action THEN it should work correctly"
              ]
            },
            {
              "title": "LinkedIn Ads",
              "description": "Actions for LinkedIn Ads API",
              "anyOf": [
                {
                  "title": "Create Lead Notification Subscription",
                  "description": "Creates a LinkedIn Lead Notification subscription at owner level",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                        "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "linkedin-ads",
                      "x-business-rules": [
                        "Fixed value (linkedin-ads) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.4.anyOf.0.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='linkedin-ads' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "const": "create-lead-notification-subscription",
                      "x-business-rules": [
                        "Fixed value (create-lead-notification-subscription) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.4.anyOf.0.properties.action type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with action='create-lead-notification-subscription' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "webhook": {
                          "title": "Webhook URL",
                          "type": "string",
                          "format": "uri",
                          "x-business-rules": [
                            "Must be a valid URI to ensure external links function correctly without broken references"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides URL WHEN validating input THEN valid URLs should be accepted",
                            "GIVEN user provides invalid URL WHEN validating input THEN clear error message should be displayed",
                            "GIVEN URL is stored WHEN user accesses it THEN link should navigate to correct destination"
                          ]
                        },
                        "organizationId": {
                          "title": "LinkedIn Organization ID",
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                            "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                            "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                          ]
                        },
                        "leadType": {
                          "default": "SPONSORED",
                          "type": "string",
                          "enum": ["SPONSORED"],
                          "x-business-rules": [
                            "Restricted to 1 allowed values (SPONSORED) to maintain type safety and enable clear validation error messages",
                            "Defaults to \"SPONSORED\" when not specified, providing sensible fallback behavior without requiring explicit configuration"
                          ],
                          "x-user-stories": [
                            "GIVEN user selects leadType from valid options WHEN validating input THEN selection should be accepted",
                            "GIVEN user provides invalid leadType value WHEN validating input THEN error should list valid options: SPONSORED",
                            "GIVEN leadType is set to any valid enum value WHEN processing entity THEN appropriate behavior should execute"
                          ]
                        }
                      },
                      "required": ["webhook", "organizationId"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["name", "account", "service", "action", "params"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related create lead notification subscription properties for better organization and type-safe access"
                  ]
                },
                {
                  "title": "List Lead Notification Subscriptions",
                  "description": "Lists LinkedIn lead notification subscriptions for an organization",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                        "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "linkedin-ads",
                      "x-business-rules": [
                        "Fixed value (linkedin-ads) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.4.anyOf.1.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='linkedin-ads' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "const": "list-lead-notification-subscriptions",
                      "x-business-rules": [
                        "Fixed value (list-lead-notification-subscriptions) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.4.anyOf.1.properties.action type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with action='list-lead-notification-subscriptions' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "organizationId": {
                          "title": "LinkedIn Organization ID",
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                            "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                            "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                          ]
                        }
                      },
                      "required": ["organizationId"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["name", "account", "service", "action", "params"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related list lead notification subscriptions properties for better organization and type-safe access"
                  ]
                },
                {
                  "title": "Get Lead Form Response",
                  "description": "Retrieves a single LinkedIn Lead Form Response by its ID",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                        "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "linkedin-ads",
                      "x-business-rules": [
                        "Fixed value (linkedin-ads) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.4.anyOf.2.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='linkedin-ads' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "const": "get-lead-form-response",
                      "x-business-rules": [
                        "Fixed value (get-lead-form-response) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.4.anyOf.2.properties.action type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with action='get-lead-form-response' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "leadResponseId": {
                          "title": "Lead Response ID",
                          "description": "The unique identifier for the lead form response",
                          "type": "string",
                          "x-business-rules": [
                            "Uniqueness constraint prevents conflicts and ensures each lead response id can be unambiguously referenced"
                          ],
                          "x-user-stories": [
                            "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                            "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                            "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                          ]
                        }
                      },
                      "required": ["leadResponseId"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["name", "account", "service", "action", "params"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related get lead form response properties for better organization and type-safe access"
                  ]
                }
              ],
              "x-user-stories": [
                "GIVEN the application is running WHEN I run a calendly list webhook subscriptions action THEN it should work correctly",
                "GIVEN the application is running WHEN I run a calendly get event type action THEN it should work correctly",
                "GIVEN the application is running WHEN I run a calendly get event type action on invite created THEN it should work correctly"
              ]
            },
            {
              "title": "Facebook Ads",
              "description": "Actions for Facebook Ads API",
              "anyOf": [
                {
                  "title": "List App Subscriptions",
                  "description": "Lists subscriptions configured on the Facebook App",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                        "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "facebook-ads",
                      "x-business-rules": [
                        "Fixed value (facebook-ads) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.5.anyOf.0.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='facebook-ads' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "const": "list-app-subscriptions",
                      "x-business-rules": [
                        "Fixed value (list-app-subscriptions) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.5.anyOf.0.properties.action type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with action='list-app-subscriptions' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "appId": {
                          "title": "Facebook App ID",
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                            "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                            "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                          ]
                        },
                        "appSecret": {
                          "title": "Facebook App Secret",
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN user provides appSecret WHEN validating input THEN string value should be accepted",
                            "GIVEN appSecret is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        }
                      },
                      "required": ["appId", "appSecret"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["name", "account", "service", "action", "params"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related list app subscriptions properties for better organization and type-safe access"
                  ]
                },
                {
                  "title": "Get LeadGen",
                  "description": "Retrieves lead generation data using the leadgen_id from webhook",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                        "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "facebook-ads",
                      "x-business-rules": [
                        "Fixed value (facebook-ads) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.5.anyOf.1.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='facebook-ads' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "const": "get-leadgen",
                      "x-business-rules": [
                        "Fixed value (get-leadgen) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.5.anyOf.1.properties.action type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with action='get-leadgen' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "leadgenId": {
                          "title": "Leadgen ID",
                          "description": "The leadgen_id from Facebook webhook data",
                          "type": "string",
                          "x-business-rules": ["The leadgen_id from Facebook webhook data"],
                          "x-user-stories": [
                            "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                            "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                            "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                          ]
                        }
                      },
                      "required": ["leadgenId"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["name", "account", "service", "action", "params"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related get leadgen properties for better organization and type-safe access"
                  ]
                }
              ],
              "x-user-stories": [
                "GIVEN the application is running WHEN I run a linkedin list lead notification subscriptions action THEN it should work correctly",
                "GIVEN the application is running WHEN I run a linkedin get lead form response action THEN it should work correctly"
              ]
            },
            {
              "title": "Notion",
              "description": "Actions for Notion API",
              "anyOf": [
                {
                  "title": "Create Page",
                  "description": "Creates a new page in Notion",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                        "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "notion",
                      "x-business-rules": [
                        "Fixed value (notion) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.0.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='notion' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "const": "create-page",
                      "x-business-rules": [
                        "Fixed value (create-page) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.0.properties.action type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with action='create-page' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "parent": {
                          "description": "Parent of the new page",
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "const": "database_id",
                                  "x-business-rules": [
                                    "Fixed value (database_id) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.0.properties.params.properties.parent.anyOf.0.properties.type type in discriminated unions and routing logic"
                                  ],
                                  "x-user-stories": [
                                    "GIVEN entity with type='database_id' WHEN processing configuration THEN correct handler should be selected",
                                    "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                                  ]
                                },
                                "database_id": {
                                  "type": "string",
                                  "x-user-stories": [
                                    "GIVEN user provides database_id WHEN validating input THEN string value should be accepted",
                                    "GIVEN database_id is empty string WHEN validating input THEN behavior should follow optional/required rules"
                                  ]
                                }
                              },
                              "required": ["type", "database_id"],
                              "additionalProperties": false,
                              "x-business-rules": [
                                "Object structure groups related 0 properties for better organization and type-safe access"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "const": "page_id",
                                  "x-business-rules": [
                                    "Fixed value (page_id) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.0.properties.params.properties.parent.anyOf.1.properties.type type in discriminated unions and routing logic"
                                  ],
                                  "x-user-stories": [
                                    "GIVEN entity with type='page_id' WHEN processing configuration THEN correct handler should be selected",
                                    "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                                  ]
                                },
                                "page_id": {
                                  "type": "string",
                                  "x-user-stories": [
                                    "GIVEN user provides page_id WHEN validating input THEN string value should be accepted",
                                    "GIVEN page_id is empty string WHEN validating input THEN behavior should follow optional/required rules"
                                  ]
                                }
                              },
                              "required": ["type", "page_id"],
                              "additionalProperties": false,
                              "x-business-rules": [
                                "Object structure groups related 1 properties for better organization and type-safe access"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "const": "workspace",
                                  "x-business-rules": [
                                    "Fixed value (workspace) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.0.properties.params.properties.parent.anyOf.2.properties.type type in discriminated unions and routing logic"
                                  ],
                                  "x-user-stories": [
                                    "GIVEN entity with type='workspace' WHEN processing configuration THEN correct handler should be selected",
                                    "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                                  ]
                                },
                                "workspace": {
                                  "type": "boolean",
                                  "const": true,
                                  "x-business-rules": [
                                    "Fixed value (true) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.0.properties.params.properties.parent.anyOf.2.properties.workspace type in discriminated unions and routing logic"
                                  ],
                                  "x-user-stories": [
                                    "GIVEN workspace is true WHEN processing entity THEN corresponding behavior should be enforced",
                                    "GIVEN workspace is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                                    "GIVEN configuration with workspace WHEN validating settings THEN boolean value should be accepted"
                                  ]
                                }
                              },
                              "required": ["type", "workspace"],
                              "additionalProperties": false,
                              "x-business-rules": [
                                "Object structure groups related 2 properties for better organization and type-safe access"
                              ]
                            }
                          ],
                          "x-user-stories": [
                            "GIVEN user configures parent WHEN validating input THEN value should meet schema requirements",
                            "GIVEN parent is set WHEN processing configuration THEN value should be used correctly"
                          ]
                        },
                        "properties": {
                          "description": "Page properties",
                          "type": "object",
                          "propertyNames": {
                            "type": "string"
                          },
                          "additionalProperties": {},
                          "x-business-rules": [
                            "Object structure groups related properties properties for better organization and type-safe access"
                          ],
                          "x-user-stories": [
                            "GIVEN user configures properties WHEN validating input THEN value should meet schema requirements",
                            "GIVEN properties is set WHEN processing configuration THEN value should be used correctly"
                          ]
                        },
                        "children": {
                          "description": "Page content blocks",
                          "type": "array",
                          "items": {},
                          "x-business-rules": [
                            "Array enables multiple children to be configured, supporting flexible workflows and batch operations"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides children array WHEN validating input THEN items should be processed in order",
                            "GIVEN children array is empty WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "icon": {
                          "description": "Page icon",
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "const": "emoji",
                                  "x-business-rules": [
                                    "Fixed value (emoji) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.0.properties.params.properties.icon.anyOf.0.properties.type type in discriminated unions and routing logic"
                                  ],
                                  "x-user-stories": [
                                    "GIVEN entity with type='emoji' WHEN processing configuration THEN correct handler should be selected",
                                    "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                                  ]
                                },
                                "emoji": {
                                  "type": "string",
                                  "x-user-stories": [
                                    "GIVEN user provides emoji WHEN validating input THEN string value should be accepted",
                                    "GIVEN emoji is empty string WHEN validating input THEN behavior should follow optional/required rules"
                                  ]
                                }
                              },
                              "required": ["type", "emoji"],
                              "additionalProperties": false,
                              "x-business-rules": [
                                "Object structure groups related 0 properties for better organization and type-safe access"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "const": "external",
                                  "x-business-rules": [
                                    "Fixed value (external) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.0.properties.params.properties.icon.anyOf.1.properties.type type in discriminated unions and routing logic"
                                  ],
                                  "x-user-stories": [
                                    "GIVEN entity with type='external' WHEN processing configuration THEN correct handler should be selected",
                                    "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                                  ]
                                },
                                "external": {
                                  "type": "object",
                                  "properties": {
                                    "url": {
                                      "type": "string",
                                      "x-user-stories": [
                                        "GIVEN user provides url WHEN validating input THEN string value should be accepted",
                                        "GIVEN url is empty string WHEN validating input THEN behavior should follow optional/required rules"
                                      ]
                                    }
                                  },
                                  "required": ["url"],
                                  "additionalProperties": false,
                                  "x-business-rules": [
                                    "Object structure groups related external properties for better organization and type-safe access"
                                  ],
                                  "x-user-stories": [
                                    "GIVEN user configures external WHEN validating input THEN value should meet schema requirements",
                                    "GIVEN external is set WHEN processing configuration THEN value should be used correctly"
                                  ]
                                }
                              },
                              "required": ["type", "external"],
                              "additionalProperties": false,
                              "x-business-rules": [
                                "Object structure groups related 1 properties for better organization and type-safe access"
                              ]
                            }
                          ],
                          "x-user-stories": [
                            "GIVEN user configures icon WHEN validating input THEN value should meet schema requirements",
                            "GIVEN icon is set WHEN processing configuration THEN value should be used correctly"
                          ]
                        },
                        "cover": {
                          "description": "Page cover image",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "external",
                              "x-business-rules": [
                                "Fixed value (external) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.0.properties.params.properties.cover.properties.type type in discriminated unions and routing logic"
                              ],
                              "x-user-stories": [
                                "GIVEN entity with type='external' WHEN processing configuration THEN correct handler should be selected",
                                "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                              ]
                            },
                            "external": {
                              "type": "object",
                              "properties": {
                                "url": {
                                  "type": "string",
                                  "x-user-stories": [
                                    "GIVEN user provides url WHEN validating input THEN string value should be accepted",
                                    "GIVEN url is empty string WHEN validating input THEN behavior should follow optional/required rules"
                                  ]
                                }
                              },
                              "required": ["url"],
                              "additionalProperties": false,
                              "x-business-rules": [
                                "Object structure groups related external properties for better organization and type-safe access"
                              ],
                              "x-user-stories": [
                                "GIVEN user configures external WHEN validating input THEN value should meet schema requirements",
                                "GIVEN external is set WHEN processing configuration THEN value should be used correctly"
                              ]
                            }
                          },
                          "required": ["type", "external"],
                          "additionalProperties": false,
                          "x-business-rules": [
                            "Object structure groups related cover properties for better organization and type-safe access"
                          ],
                          "x-user-stories": [
                            "GIVEN user configures cover WHEN validating input THEN value should meet schema requirements",
                            "GIVEN cover is set WHEN processing configuration THEN value should be used correctly"
                          ]
                        }
                      },
                      "required": ["parent", "properties"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["name", "account", "service", "action", "params"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related create page properties for better organization and type-safe access"
                  ]
                },
                {
                  "title": "Get Page",
                  "description": "Retrieves a page from Notion",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                        "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "notion",
                      "x-business-rules": [
                        "Fixed value (notion) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.1.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='notion' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "const": "get-page",
                      "x-business-rules": [
                        "Fixed value (get-page) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.1.properties.action type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with action='get-page' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "pageId": {
                          "description": "The ID of the page to retrieve",
                          "type": "string",
                          "x-business-rules": ["The ID of the page to retrieve"],
                          "x-user-stories": [
                            "GIVEN user provides pageId WHEN validating input THEN string value should be accepted",
                            "GIVEN pageId is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "filterProperties": {
                          "description": "Properties to include in response",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-business-rules": [
                            "Array enables multiple filterproperties to be configured, supporting flexible workflows and batch operations"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides filterProperties array WHEN validating input THEN items should be processed in order",
                            "GIVEN filterProperties array is empty WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        }
                      },
                      "required": ["pageId"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["name", "account", "service", "action", "params"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related get page properties for better organization and type-safe access"
                  ]
                },
                {
                  "title": "Update Page",
                  "description": "Updates properties, icon, cover, or archived status of a Notion page",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                        "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "notion",
                      "x-business-rules": [
                        "Fixed value (notion) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.2.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='notion' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "const": "update-page",
                      "x-business-rules": [
                        "Fixed value (update-page) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.2.properties.action type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with action='update-page' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "pageId": {
                          "description": "The ID of the page to update",
                          "type": "string",
                          "x-business-rules": ["The ID of the page to update"],
                          "x-user-stories": [
                            "GIVEN user provides pageId WHEN validating input THEN string value should be accepted",
                            "GIVEN pageId is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "properties": {
                          "description": "Page properties to update",
                          "type": "object",
                          "propertyNames": {
                            "type": "string"
                          },
                          "additionalProperties": {},
                          "x-business-rules": [
                            "Object structure groups related properties properties for better organization and type-safe access"
                          ],
                          "x-user-stories": [
                            "GIVEN user configures properties WHEN validating input THEN value should meet schema requirements",
                            "GIVEN properties is set WHEN processing configuration THEN value should be used correctly"
                          ]
                        },
                        "icon": {
                          "description": "Page icon to set",
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "const": "emoji",
                                  "x-business-rules": [
                                    "Fixed value (emoji) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.2.properties.params.properties.icon.anyOf.0.properties.type type in discriminated unions and routing logic"
                                  ],
                                  "x-user-stories": [
                                    "GIVEN entity with type='emoji' WHEN processing configuration THEN correct handler should be selected",
                                    "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                                  ]
                                },
                                "emoji": {
                                  "type": "string",
                                  "x-user-stories": [
                                    "GIVEN user provides emoji WHEN validating input THEN string value should be accepted",
                                    "GIVEN emoji is empty string WHEN validating input THEN behavior should follow optional/required rules"
                                  ]
                                }
                              },
                              "required": ["type", "emoji"],
                              "additionalProperties": false,
                              "x-business-rules": [
                                "Object structure groups related 0 properties for better organization and type-safe access"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "const": "external",
                                  "x-business-rules": [
                                    "Fixed value (external) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.2.properties.params.properties.icon.anyOf.1.properties.type type in discriminated unions and routing logic"
                                  ],
                                  "x-user-stories": [
                                    "GIVEN entity with type='external' WHEN processing configuration THEN correct handler should be selected",
                                    "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                                  ]
                                },
                                "external": {
                                  "type": "object",
                                  "properties": {
                                    "url": {
                                      "type": "string",
                                      "x-user-stories": [
                                        "GIVEN user provides url WHEN validating input THEN string value should be accepted",
                                        "GIVEN url is empty string WHEN validating input THEN behavior should follow optional/required rules"
                                      ]
                                    }
                                  },
                                  "required": ["url"],
                                  "additionalProperties": false,
                                  "x-business-rules": [
                                    "Object structure groups related external properties for better organization and type-safe access"
                                  ],
                                  "x-user-stories": [
                                    "GIVEN user configures external WHEN validating input THEN value should meet schema requirements",
                                    "GIVEN external is set WHEN processing configuration THEN value should be used correctly"
                                  ]
                                }
                              },
                              "required": ["type", "external"],
                              "additionalProperties": false,
                              "x-business-rules": [
                                "Object structure groups related 1 properties for better organization and type-safe access"
                              ]
                            }
                          ],
                          "x-user-stories": [
                            "GIVEN user configures icon WHEN validating input THEN value should meet schema requirements",
                            "GIVEN icon is set WHEN processing configuration THEN value should be used correctly"
                          ]
                        },
                        "cover": {
                          "description": "Page cover image to set",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "external",
                              "x-business-rules": [
                                "Fixed value (external) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.2.properties.params.properties.cover.properties.type type in discriminated unions and routing logic"
                              ],
                              "x-user-stories": [
                                "GIVEN entity with type='external' WHEN processing configuration THEN correct handler should be selected",
                                "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                              ]
                            },
                            "external": {
                              "type": "object",
                              "properties": {
                                "url": {
                                  "type": "string",
                                  "x-user-stories": [
                                    "GIVEN user provides url WHEN validating input THEN string value should be accepted",
                                    "GIVEN url is empty string WHEN validating input THEN behavior should follow optional/required rules"
                                  ]
                                }
                              },
                              "required": ["url"],
                              "additionalProperties": false,
                              "x-business-rules": [
                                "Object structure groups related external properties for better organization and type-safe access"
                              ],
                              "x-user-stories": [
                                "GIVEN user configures external WHEN validating input THEN value should meet schema requirements",
                                "GIVEN external is set WHEN processing configuration THEN value should be used correctly"
                              ]
                            }
                          },
                          "required": ["type", "external"],
                          "additionalProperties": false,
                          "x-business-rules": [
                            "Object structure groups related cover properties for better organization and type-safe access"
                          ],
                          "x-user-stories": [
                            "GIVEN user configures cover WHEN validating input THEN value should meet schema requirements",
                            "GIVEN cover is set WHEN processing configuration THEN value should be used correctly"
                          ]
                        },
                        "archived": {
                          "description": "Whether to archive/unarchive the page",
                          "type": "boolean",
                          "x-business-rules": [
                            "Boolean flag enables/disables archived functionality through simple true/false configuration"
                          ],
                          "x-user-stories": [
                            "GIVEN archived is true WHEN processing entity THEN corresponding behavior should be enforced",
                            "GIVEN archived is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                            "GIVEN configuration with archived WHEN validating settings THEN boolean value should be accepted"
                          ]
                        }
                      },
                      "required": ["pageId"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["name", "account", "service", "action", "params"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related update page properties for better organization and type-safe access"
                  ]
                },
                {
                  "title": "Delete Page",
                  "description": "Deletes (archives) a page in Notion",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                        "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "notion",
                      "x-business-rules": [
                        "Fixed value (notion) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.3.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='notion' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "const": "delete-page",
                      "x-business-rules": [
                        "Fixed value (delete-page) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.3.properties.action type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with action='delete-page' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "pageId": {
                          "description": "The ID of the page to delete",
                          "type": "string",
                          "x-business-rules": ["The ID of the page to delete"],
                          "x-user-stories": [
                            "GIVEN user provides pageId WHEN validating input THEN string value should be accepted",
                            "GIVEN pageId is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        }
                      },
                      "required": ["pageId"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["name", "account", "service", "action", "params"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related delete page properties for better organization and type-safe access"
                  ]
                },
                {
                  "title": "List Pages",
                  "description": "Lists pages from a Notion database",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                        "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "notion",
                      "x-business-rules": [
                        "Fixed value (notion) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.4.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='notion' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "const": "list-pages",
                      "x-business-rules": [
                        "Fixed value (list-pages) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.4.properties.action type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with action='list-pages' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "databaseId": {
                          "description": "The ID of the database to query",
                          "type": "string",
                          "x-business-rules": ["The ID of the database to query"],
                          "x-user-stories": [
                            "GIVEN user provides databaseId WHEN validating input THEN string value should be accepted",
                            "GIVEN databaseId is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "filter": {
                          "description": "Filter conditions for the query",
                          "x-user-stories": [
                            "GIVEN user configures filter WHEN validating input THEN value should meet schema requirements",
                            "GIVEN filter is set WHEN processing configuration THEN value should be used correctly"
                          ]
                        },
                        "sorts": {
                          "description": "Sort conditions for the query",
                          "type": "array",
                          "items": {},
                          "x-business-rules": [
                            "Array enables multiple sorts to be configured, supporting flexible workflows and batch operations"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides sorts array WHEN validating input THEN items should be processed in order",
                            "GIVEN sorts array is empty WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "startCursor": {
                          "description": "Pagination cursor",
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN user provides startCursor WHEN validating input THEN string value should be accepted",
                            "GIVEN startCursor is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "pageSize": {
                          "description": "Number of results per page",
                          "type": "number",
                          "minimum": 1,
                          "maximum": 100,
                          "x-business-rules": [
                            "Numeric range (1-100) prevents overflow errors and ensures values stay within valid business bounds"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides pageSize between 1 and 100 WHEN validating input THEN value should be accepted",
                            "GIVEN user provides pageSize below 1 WHEN validating input THEN error should enforce minimum value",
                            "GIVEN user provides pageSize above 100 WHEN validating input THEN error should enforce maximum value"
                          ]
                        }
                      },
                      "required": ["databaseId"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["name", "account", "service", "action", "params"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related list pages properties for better organization and type-safe access"
                  ]
                },
                {
                  "title": "Search Pages",
                  "description": "Searches for pages in Notion",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                        "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "notion",
                      "x-business-rules": [
                        "Fixed value (notion) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.5.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='notion' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "const": "search-pages",
                      "x-business-rules": [
                        "Fixed value (search-pages) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.5.properties.action type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with action='search-pages' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "query": {
                          "description": "Search query text",
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN user provides query WHEN validating input THEN string value should be accepted",
                            "GIVEN query is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "filter": {
                          "description": "Optional filter for search results",
                          "type": "object",
                          "properties": {
                            "property": {
                              "type": "string",
                              "x-user-stories": [
                                "GIVEN automation with filter condition WHEN condition evaluates to true THEN subsequent actions should execute",
                                "GIVEN automation with filter condition WHEN condition evaluates to false THEN subsequent actions should be skipped",
                                "GIVEN filter uses template variables WHEN evaluating condition THEN variables should resolve from trigger context"
                              ]
                            },
                            "value": {
                              "type": "string",
                              "x-user-stories": [
                                "GIVEN automation with filter condition WHEN condition evaluates to true THEN subsequent actions should execute",
                                "GIVEN automation with filter condition WHEN condition evaluates to false THEN subsequent actions should be skipped",
                                "GIVEN filter uses template variables WHEN evaluating condition THEN variables should resolve from trigger context"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "x-business-rules": [
                            "Object structure groups related filter properties for better organization and type-safe access"
                          ],
                          "x-user-stories": [
                            "GIVEN user configures filter WHEN validating input THEN value should meet schema requirements",
                            "GIVEN filter is set WHEN processing configuration THEN value should be used correctly"
                          ]
                        }
                      },
                      "required": ["query"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["name", "account", "service", "action", "params"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related search pages properties for better organization and type-safe access"
                  ]
                }
              ]
            },
            {
              "title": "Qonto",
              "description": "Actions for Qonto API",
              "anyOf": [
                {
                  "title": "Create Client",
                  "description": "Creates a new client in Qonto",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                        "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "qonto",
                      "x-business-rules": [
                        "Fixed value (qonto) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.7.anyOf.0.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='qonto' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "const": "create-client",
                      "x-business-rules": [
                        "Fixed value (create-client) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.7.anyOf.0.properties.action type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with action='create-client' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Client name",
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                            "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "email": {
                          "description": "Client email",
                          "type": "string",
                          "format": "email",
                          "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$",
                          "x-business-rules": [
                            "Pattern constraint enforces data format consistency and error prevention, rejecting invalid formats before they cause system errors",
                            "Email format validation prevents delivery failures and ensures communication channels are properly configured"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides email matching pattern WHEN validating input THEN value should be accepted",
                            "GIVEN user provides email not matching pattern WHEN validating input THEN clear error message should explain format requirement",
                            "GIVEN email is stored WHEN retrieved later THEN original format should be preserved"
                          ]
                        },
                        "phone": {
                          "description": "Client phone number",
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN user provides phone WHEN validating input THEN string value should be accepted",
                            "GIVEN phone is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "address": {
                          "description": "Client address",
                          "type": "object",
                          "properties": {
                            "street": {
                              "description": "Street address",
                              "type": "string",
                              "x-user-stories": [
                                "GIVEN user provides street WHEN validating input THEN string value should be accepted",
                                "GIVEN street is empty string WHEN validating input THEN behavior should follow optional/required rules"
                              ]
                            },
                            "city": {
                              "description": "City",
                              "type": "string",
                              "x-user-stories": [
                                "GIVEN user provides city WHEN validating input THEN string value should be accepted",
                                "GIVEN city is empty string WHEN validating input THEN behavior should follow optional/required rules"
                              ]
                            },
                            "postal_code": {
                              "description": "Postal code",
                              "type": "string",
                              "x-user-stories": [
                                "GIVEN user provides postal_code WHEN validating input THEN string value should be accepted",
                                "GIVEN postal_code is empty string WHEN validating input THEN behavior should follow optional/required rules"
                              ]
                            },
                            "country": {
                              "description": "Country",
                              "type": "string",
                              "x-user-stories": [
                                "GIVEN user provides country WHEN validating input THEN string value should be accepted",
                                "GIVEN country is empty string WHEN validating input THEN behavior should follow optional/required rules"
                              ]
                            }
                          },
                          "required": ["street", "city", "postal_code", "country"],
                          "additionalProperties": false,
                          "x-business-rules": [
                            "Object structure groups related address properties for better organization and type-safe access"
                          ],
                          "x-user-stories": [
                            "GIVEN user configures address WHEN validating input THEN value should meet schema requirements",
                            "GIVEN address is set WHEN processing configuration THEN value should be used correctly"
                          ]
                        },
                        "vat_number": {
                          "description": "VAT number",
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN user provides vat_number WHEN validating input THEN string value should be accepted",
                            "GIVEN vat_number is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        }
                      },
                      "required": ["name"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["name", "account", "service", "action", "params"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related create client properties for better organization and type-safe access"
                  ]
                },
                {
                  "title": "Create Invoice",
                  "description": "Creates a new invoice in Qonto",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                        "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "qonto",
                      "x-business-rules": [
                        "Fixed value (qonto) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.7.anyOf.1.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='qonto' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "const": "create-invoice",
                      "x-business-rules": [
                        "Fixed value (create-invoice) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.7.anyOf.1.properties.action type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with action='create-invoice' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "client_id": {
                          "description": "ID of the client for this invoice",
                          "type": "string",
                          "x-business-rules": ["ID of the client for this invoice"],
                          "x-user-stories": [
                            "GIVEN a user connects external service WHEN providing OAuth client ID THEN authentication should succeed with valid credentials",
                            "GIVEN invalid OAuth client ID WHEN attempting authentication THEN system should return clear error message",
                            "GIVEN automation needs external API access WHEN executing action THEN stored OAuth tokens should be used for authentication"
                          ]
                        },
                        "amount": {
                          "description": "Invoice total amount",
                          "type": "number",
                          "exclusiveMinimum": 0,
                          "x-user-stories": [
                            "GIVEN user provides amount WHEN validating input THEN numeric value should be accepted",
                            "GIVEN user provides non-numeric amount WHEN validating input THEN error should require number"
                          ]
                        },
                        "currency": {
                          "description": "Invoice currency",
                          "default": "EUR",
                          "type": "string",
                          "x-business-rules": [
                            "Defaults to \"EUR\" when not specified, providing sensible fallback behavior without requiring explicit configuration"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides currency WHEN validating input THEN string value should be accepted",
                            "GIVEN currency is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "due_date": {
                          "description": "Invoice due date (ISO 8601 format)",
                          "type": "string",
                          "x-business-rules": ["Invoice due date (ISO 8601 format)"],
                          "x-user-stories": [
                            "GIVEN user provides due_date WHEN validating input THEN string value should be accepted",
                            "GIVEN due_date is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "items": {
                          "description": "Invoice line items",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "description": "Item description",
                                "type": "string",
                                "x-user-stories": [
                                  "GIVEN user provides description WHEN validating input THEN string value should be accepted",
                                  "GIVEN description is empty string WHEN validating input THEN behavior should follow optional/required rules"
                                ]
                              },
                              "quantity": {
                                "description": "Quantity",
                                "type": "number",
                                "exclusiveMinimum": 0,
                                "x-user-stories": [
                                  "GIVEN user provides quantity WHEN validating input THEN numeric value should be accepted",
                                  "GIVEN user provides non-numeric quantity WHEN validating input THEN error should require number"
                                ]
                              },
                              "unit_price": {
                                "description": "Unit price",
                                "type": "number",
                                "exclusiveMinimum": 0,
                                "x-user-stories": [
                                  "GIVEN user provides unit_price WHEN validating input THEN numeric value should be accepted",
                                  "GIVEN user provides non-numeric unit_price WHEN validating input THEN error should require number"
                                ]
                              }
                            },
                            "required": ["description", "quantity", "unit_price"],
                            "additionalProperties": false,
                            "x-business-rules": [
                              "Object structure groups related items properties for better organization and type-safe access"
                            ]
                          },
                          "x-business-rules": [
                            "Array enables multiple items to be configured, supporting flexible workflows and batch operations"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides items array WHEN validating input THEN items should be processed in order",
                            "GIVEN items array is empty WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "reference": {
                          "description": "Invoice reference number",
                          "type": "string",
                          "x-business-rules": ["Invoice reference number"],
                          "x-user-stories": [
                            "GIVEN user provides reference WHEN validating input THEN string value should be accepted",
                            "GIVEN reference is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "notes": {
                          "description": "Additional notes",
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN user provides notes WHEN validating input THEN string value should be accepted",
                            "GIVEN notes is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        }
                      },
                      "required": ["client_id", "amount", "currency", "due_date", "items"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["name", "account", "service", "action", "params"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related create invoice properties for better organization and type-safe access"
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    "filter_condition": {
      "title": "Filter Condition",
      "anyOf": [
        {
          "title": "String Comparison Filter",
          "description": "Filter based on string contains/does-not-contain operations",
          "type": "object",
          "properties": {
            "target": {
              "title": "Target Field",
              "description": "The field path to filter on (e.g., 'status', 'user.email', 'trigger.data.name')",
              "type": "string",
              "minLength": 1,
              "examples": ["status", "email", "name", "trigger.data.subject"],
              "x-business-rules": ["The field path to filter on (e"],
              "x-user-stories": [
                "GIVEN automation with filter condition WHEN condition evaluates to true THEN subsequent actions should execute",
                "GIVEN automation with filter condition WHEN condition evaluates to false THEN subsequent actions should be skipped",
                "GIVEN filter uses template variables WHEN evaluating condition THEN variables should resolve from trigger context"
              ]
            },
            "operator": {
              "title": "Comparison Operator",
              "description": "String comparison operation to perform",
              "type": "string",
              "enum": ["contains", "does-not-contain"],
              "x-business-rules": [
                "Restricted to 2 allowed values (contains, does-not-contain) to maintain type safety and enable clear validation error messages"
              ],
              "x-user-stories": [
                "GIVEN user selects operator from valid options WHEN validating input THEN selection should be accepted",
                "GIVEN user provides invalid operator value WHEN validating input THEN error should list valid options: contains, does-not-contain",
                "GIVEN operator is set to any valid enum value WHEN processing entity THEN appropriate behavior should execute"
              ]
            },
            "value": {
              "title": "Comparison Value",
              "description": "The value to compare against (supports template variables like {{field_name}})",
              "type": "string",
              "examples": ["active", "john@example.com", "{{trigger.email}}", "{{env.DOMAIN}}"],
              "x-business-rules": [
                "The value to compare against (supports template variables like {{field_name}})"
              ],
              "x-user-stories": [
                "GIVEN automation with filter condition WHEN condition evaluates to true THEN subsequent actions should execute",
                "GIVEN automation with filter condition WHEN condition evaluates to false THEN subsequent actions should be skipped",
                "GIVEN filter uses template variables WHEN evaluating condition THEN variables should resolve from trigger context"
              ]
            }
          },
          "required": ["target", "operator", "value"],
          "additionalProperties": false,
          "x-business-rules": [
            "Object structure groups related string comparison filter properties for better organization and type-safe access"
          ]
        },
        {
          "title": "Existence/Boolean Filter",
          "description": "Filter based on field existence or boolean value",
          "type": "object",
          "properties": {
            "target": {
              "title": "Target Field",
              "description": "The field path to filter on (e.g., 'verified', 'user.name', 'trigger.error')",
              "type": "string",
              "minLength": 1,
              "examples": ["verified", "user.email", "trigger.error", "previous_action.result"],
              "x-business-rules": ["The field path to filter on (e"],
              "x-user-stories": [
                "GIVEN automation with filter condition WHEN condition evaluates to true THEN subsequent actions should execute",
                "GIVEN automation with filter condition WHEN condition evaluates to false THEN subsequent actions should be skipped",
                "GIVEN filter uses template variables WHEN evaluating condition THEN variables should resolve from trigger context"
              ]
            },
            "operator": {
              "title": "Existence/Boolean Operator",
              "description": "Check if field exists, doesn't exist, is true, or is false",
              "type": "string",
              "enum": ["exists", "does-not-exist", "is-true", "is-false"],
              "x-business-rules": [
                "Restricted to 4 allowed values (exists, does-not-exist, is-true, ...) to maintain type safety and enable clear validation error messages"
              ],
              "x-user-stories": [
                "GIVEN user selects operator from valid options WHEN validating input THEN selection should be accepted",
                "GIVEN user provides invalid operator value WHEN validating input THEN error should list valid options: exists, does-not-exist, is-true",
                "GIVEN operator is set to any valid enum value WHEN processing entity THEN appropriate behavior should execute"
              ]
            }
          },
          "required": ["target", "operator"],
          "additionalProperties": false,
          "x-business-rules": [
            "Object structure groups related existence/boolean filter properties for better organization and type-safe access"
          ]
        },
        {
          "title": "AND Filter",
          "description": "Combine multiple conditions with AND logic (all must be true)",
          "type": "object",
          "properties": {
            "and": {
              "title": "AND Conditions",
              "description": "Array of filter conditions that must all evaluate to true",
              "type": "array",
              "items": {
                "$ref": "#/definitions/filter_condition"
              },
              "minItems": 2,
              "examples": [
                [
                  {
                    "target": "status",
                    "operator": "contains",
                    "value": "active"
                  },
                  {
                    "target": "verified",
                    "operator": "is-true"
                  }
                ]
              ],
              "x-business-rules": [
                "Array enables multiple and conditions to be configured, supporting flexible workflows and batch operations"
              ],
              "x-user-stories": [
                "GIVEN automation with filter condition WHEN condition evaluates to true THEN subsequent actions should execute",
                "GIVEN automation with filter condition WHEN condition evaluates to false THEN subsequent actions should be skipped",
                "GIVEN filter uses template variables WHEN evaluating condition THEN variables should resolve from trigger context"
              ]
            }
          },
          "required": ["and"],
          "additionalProperties": false,
          "x-business-rules": [
            "Object structure groups related and filter properties for better organization and type-safe access"
          ]
        },
        {
          "title": "OR Filter",
          "description": "Combine multiple conditions with OR logic (at least one must be true)",
          "type": "object",
          "properties": {
            "or": {
              "title": "OR Conditions",
              "description": "Array of filter conditions where at least one must evaluate to true",
              "type": "array",
              "items": {
                "$ref": "#/definitions/filter_condition"
              },
              "minItems": 2,
              "examples": [
                [
                  {
                    "target": "status",
                    "operator": "contains",
                    "value": "pending"
                  },
                  {
                    "target": "status",
                    "operator": "contains",
                    "value": "processing"
                  }
                ]
              ],
              "x-business-rules": [
                "Array enables multiple or conditions to be configured, supporting flexible workflows and batch operations"
              ],
              "x-user-stories": [
                "GIVEN automation with filter condition WHEN condition evaluates to true THEN subsequent actions should execute",
                "GIVEN automation with filter condition WHEN condition evaluates to false THEN subsequent actions should be skipped",
                "GIVEN filter uses template variables WHEN evaluating condition THEN variables should resolve from trigger context"
              ]
            }
          },
          "required": ["or"],
          "additionalProperties": false,
          "x-business-rules": [
            "Object structure groups related or filter properties for better organization and type-safe access"
          ]
        }
      ],
      "description": "Filter conditions for querying and filtering data in table views, automations, and reports. Specify field to filter on, comparison operator (equals, not equals, contains, greater than, less than, is empty, is not empty), and comparison value. Conditions can be combined with AND/OR logic. Supports dynamic values from other fields, current user, or system variables. Used throughout the application for data filtering and conditional logic."
    },
    "json_schema": {
      "title": "JSON Schema",
      "description": "JSON Schema definition (Draft 07 compatible) for validating structured data in JSON fields. Define the expected structure, types, required properties, constraints, and validation rules. Used to ensure JSON field data conforms to a specific schema. Supports all JSON Schema features: types, properties, required, patterns, enums, nested objects, arrays, and custom validation. Useful for API configurations, structured metadata, and flexible data models with enforced structure.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "description": "The data type(s) this schema validates. Can be a single type or array of types.",
          "anyOf": [
            {
              "type": "string",
              "enum": ["string", "number", "integer", "boolean", "object", "array", "null"],
              "x-business-rules": [
                "Restricted to 7 allowed values (string, number, integer, ...) to maintain type safety and enable clear validation error messages"
              ]
            },
            {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["string", "number", "integer", "boolean", "object", "array", "null"],
                "x-business-rules": [
                  "Restricted to 7 allowed values (string, number, integer, ...) to maintain type safety and enable clear validation error messages"
                ]
              },
              "x-business-rules": [
                "Array enables multiple 1 to be configured, supporting flexible workflows and batch operations"
              ]
            }
          ],
          "examples": ["string", "number", ["string", "null"], ["number", "integer"]],
          "x-user-stories": [
            "GIVEN user configures type WHEN validating input THEN value should meet schema requirements",
            "GIVEN type is set WHEN processing configuration THEN value should be used correctly"
          ]
        },
        "properties": {
          "title": "Properties",
          "description": "Object property definitions. Each key defines a property name with its schema.",
          "type": "object",
          "propertyNames": {
            "type": "string"
          },
          "additionalProperties": {
            "anyOf": [
              {
                "$ref": "#/definitions/json_schema"
              },
              {
                "type": "boolean",
                "x-business-rules": [
                  "Boolean flag enables/disables 1 functionality through simple true/false configuration"
                ]
              }
            ]
          },
          "examples": [
            {
              "name": {
                "type": "string"
              },
              "age": {
                "type": "integer"
              }
            }
          ],
          "x-business-rules": [
            "Object structure groups related properties properties for better organization and type-safe access"
          ],
          "x-user-stories": [
            "GIVEN user configures properties WHEN validating input THEN value should meet schema requirements",
            "GIVEN properties is set WHEN processing configuration THEN value should be used correctly"
          ]
        },
        "required": {
          "title": "Required Properties",
          "description": "Array of property names that must be present in the object",
          "type": "array",
          "items": {
            "type": "string"
          },
          "examples": [["name", "email"], ["id"]],
          "x-business-rules": [
            "Array enables multiple required properties to be configured, supporting flexible workflows and batch operations"
          ],
          "x-user-stories": [
            "GIVEN user provides required array WHEN validating input THEN items should be processed in order",
            "GIVEN required array is empty WHEN validating input THEN behavior should follow optional/required rules"
          ]
        },
        "items": {
          "title": "Array Items",
          "description": "Schema for array elements. Can be a single schema (all items) or array of schemas (tuple)",
          "anyOf": [
            {
              "anyOf": [
                {
                  "$ref": "#/definitions/json_schema"
                },
                {
                  "type": "boolean",
                  "x-business-rules": [
                    "Boolean flag enables/disables 1 functionality through simple true/false configuration"
                  ]
                }
              ]
            },
            {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/json_schema"
                  },
                  {
                    "type": "boolean",
                    "x-business-rules": [
                      "Boolean flag enables/disables 1 functionality through simple true/false configuration"
                    ]
                  }
                ]
              },
              "x-business-rules": [
                "Array enables multiple 1 to be configured, supporting flexible workflows and batch operations"
              ]
            }
          ],
          "examples": [
            {
              "type": "string"
            },
            [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          ],
          "x-user-stories": [
            "GIVEN user configures items WHEN validating input THEN value should meet schema requirements",
            "GIVEN items is set WHEN processing configuration THEN value should be used correctly"
          ]
        },
        "additionalProperties": {
          "title": "Additional Properties",
          "description": "Whether to allow properties not defined in 'properties'. Can be boolean or schema.",
          "anyOf": [
            {
              "anyOf": [
                {
                  "$ref": "#/definitions/json_schema"
                },
                {
                  "type": "boolean",
                  "x-business-rules": [
                    "Boolean flag enables/disables 1 functionality through simple true/false configuration"
                  ]
                }
              ]
            },
            {
              "type": "boolean",
              "x-business-rules": [
                "Boolean flag enables/disables 1 functionality through simple true/false configuration"
              ]
            }
          ],
          "examples": [
            false,
            true,
            {
              "type": "string"
            }
          ],
          "x-user-stories": [
            "GIVEN user configures additionalProperties WHEN validating input THEN value should meet schema requirements",
            "GIVEN additionalProperties is set WHEN processing configuration THEN value should be used correctly"
          ]
        },
        "enum": {
          "title": "Enum",
          "description": "Array of allowed values. Value must match one of these exactly.",
          "type": "array",
          "items": {},
          "examples": [
            ["active", "inactive", "pending"],
            [1, 2, 3],
            [true, false]
          ],
          "x-business-rules": [
            "Array enables multiple enum to be configured, supporting flexible workflows and batch operations"
          ],
          "x-user-stories": [
            "GIVEN user provides enum array WHEN validating input THEN items should be processed in order",
            "GIVEN enum array is empty WHEN validating input THEN behavior should follow optional/required rules"
          ]
        },
        "const": {
          "title": "Const",
          "description": "Single allowed value. Value must match this exactly.",
          "examples": ["active", 42, true, null],
          "x-user-stories": [
            "GIVEN user configures const WHEN validating input THEN value should meet schema requirements",
            "GIVEN const is set WHEN processing configuration THEN value should be used correctly"
          ]
        },
        "title": {
          "title": "Title",
          "description": "Human-readable title for this schema property",
          "type": "string",
          "examples": ["User Name", "Email Address", "Age"],
          "x-business-rules": ["Human-readable title for this schema property"],
          "x-user-stories": [
            "GIVEN user provides title WHEN validating input THEN string value should be accepted",
            "GIVEN title is empty string WHEN validating input THEN behavior should follow optional/required rules"
          ]
        },
        "description": {
          "title": "Description",
          "description": "Detailed description of this schema property",
          "type": "string",
          "examples": ["The user's full name", "Must be a valid email address"],
          "x-business-rules": ["Detailed description of this schema property"],
          "x-user-stories": [
            "GIVEN user provides description WHEN validating input THEN string value should be accepted",
            "GIVEN description is empty string WHEN validating input THEN behavior should follow optional/required rules"
          ]
        },
        "default": {
          "title": "Default",
          "description": "Default value when not provided",
          "examples": ["", 0, false, null, {}, []],
          "x-user-stories": [
            "GIVEN user configures default WHEN validating input THEN value should meet schema requirements",
            "GIVEN default is set WHEN processing configuration THEN value should be used correctly"
          ]
        },
        "minimum": {
          "title": "Minimum",
          "description": "Minimum numeric value (inclusive)",
          "type": "number",
          "examples": [0, 1, 18, -100],
          "x-business-rules": ["Minimum numeric value (inclusive)"],
          "x-user-stories": [
            "GIVEN user provides minimum WHEN validating input THEN numeric value should be accepted",
            "GIVEN user provides non-numeric minimum WHEN validating input THEN error should require number"
          ]
        },
        "maximum": {
          "title": "Maximum",
          "description": "Maximum numeric value (inclusive)",
          "type": "number",
          "examples": [100, 999, 150],
          "x-business-rules": ["Maximum numeric value (inclusive)"],
          "x-user-stories": [
            "GIVEN user provides maximum WHEN validating input THEN numeric value should be accepted",
            "GIVEN user provides non-numeric maximum WHEN validating input THEN error should require number"
          ]
        },
        "multipleOf": {
          "title": "Multiple Of",
          "description": "Number must be a multiple of this value",
          "type": "number",
          "examples": [1, 5, 0.01, 10],
          "x-business-rules": ["Number must be a multiple of this value"],
          "x-user-stories": [
            "GIVEN user provides multipleOf WHEN validating input THEN numeric value should be accepted",
            "GIVEN user provides non-numeric multipleOf WHEN validating input THEN error should require number"
          ]
        },
        "minLength": {
          "title": "Minimum Length",
          "description": "Minimum string length (characters)",
          "type": "number",
          "examples": [1, 3, 8],
          "x-business-rules": ["Minimum string length (characters)"],
          "x-user-stories": [
            "GIVEN user provides minLength WHEN validating input THEN numeric value should be accepted",
            "GIVEN user provides non-numeric minLength WHEN validating input THEN error should require number"
          ]
        },
        "maxLength": {
          "title": "Maximum Length",
          "description": "Maximum string length (characters)",
          "type": "number",
          "examples": [100, 255, 1000],
          "x-business-rules": ["Maximum string length (characters)"],
          "x-user-stories": [
            "GIVEN user provides maxLength WHEN validating input THEN numeric value should be accepted",
            "GIVEN user provides non-numeric maxLength WHEN validating input THEN error should require number"
          ]
        },
        "pattern": {
          "title": "Pattern",
          "description": "Regular expression pattern the string must match",
          "type": "string",
          "examples": ["^[a-z]+$", "^\\d{3}-\\d{4}$", "^[A-Z][a-z]+$"],
          "x-business-rules": ["Regular expression pattern the string must match"],
          "x-user-stories": [
            "GIVEN user provides pattern WHEN validating input THEN string value should be accepted",
            "GIVEN pattern is empty string WHEN validating input THEN behavior should follow optional/required rules"
          ]
        },
        "minItems": {
          "title": "Minimum Items",
          "description": "Minimum array length",
          "type": "number",
          "examples": [1, 2, 5],
          "x-user-stories": [
            "GIVEN user provides minItems WHEN validating input THEN numeric value should be accepted",
            "GIVEN user provides non-numeric minItems WHEN validating input THEN error should require number"
          ]
        },
        "maxItems": {
          "title": "Maximum Items",
          "description": "Maximum array length",
          "type": "number",
          "examples": [10, 100, 1000],
          "x-user-stories": [
            "GIVEN user provides maxItems WHEN validating input THEN numeric value should be accepted",
            "GIVEN user provides non-numeric maxItems WHEN validating input THEN error should require number"
          ]
        },
        "uniqueItems": {
          "title": "Unique Items",
          "description": "Whether array items must be unique",
          "type": "boolean",
          "examples": [true, false],
          "x-business-rules": [
            "Uniqueness constraint prevents conflicts and ensures each unique items can be unambiguously referenced"
          ],
          "x-user-stories": [
            "GIVEN uniqueItems is true WHEN processing entity THEN corresponding behavior should be enforced",
            "GIVEN uniqueItems is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
            "GIVEN configuration with uniqueItems WHEN validating settings THEN boolean value should be accepted"
          ]
        },
        "allOf": {
          "title": "All Of",
          "description": "Must validate against all of these schemas (AND logic)",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/json_schema"
              },
              {
                "type": "boolean",
                "x-business-rules": [
                  "Boolean flag enables/disables 1 functionality through simple true/false configuration"
                ]
              }
            ]
          },
          "examples": [
            [
              {
                "type": "object"
              },
              {
                "required": ["name"]
              }
            ]
          ],
          "x-business-rules": [
            "Array enables multiple all of to be configured, supporting flexible workflows and batch operations"
          ],
          "x-user-stories": [
            "GIVEN user provides allOf array WHEN validating input THEN items should be processed in order",
            "GIVEN allOf array is empty WHEN validating input THEN behavior should follow optional/required rules"
          ]
        },
        "anyOf": {
          "title": "Any Of",
          "description": "Must validate against at least one of these schemas (OR logic)",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/json_schema"
              },
              {
                "type": "boolean",
                "x-business-rules": [
                  "Boolean flag enables/disables 1 functionality through simple true/false configuration"
                ]
              }
            ]
          },
          "examples": [
            [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          ],
          "x-business-rules": [
            "Array enables multiple any of to be configured, supporting flexible workflows and batch operations"
          ],
          "x-user-stories": [
            "GIVEN user provides anyOf array WHEN validating input THEN items should be processed in order",
            "GIVEN anyOf array is empty WHEN validating input THEN behavior should follow optional/required rules"
          ]
        },
        "oneOf": {
          "title": "One Of",
          "description": "Must validate against exactly one of these schemas (XOR logic)",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/json_schema"
              },
              {
                "type": "boolean",
                "x-business-rules": [
                  "Boolean flag enables/disables 1 functionality through simple true/false configuration"
                ]
              }
            ]
          },
          "examples": [
            [
              {
                "type": "string",
                "minLength": 5
              },
              {
                "type": "number"
              }
            ]
          ],
          "x-business-rules": [
            "Array enables multiple one of to be configured, supporting flexible workflows and batch operations"
          ],
          "x-user-stories": [
            "GIVEN user provides oneOf array WHEN validating input THEN items should be processed in order",
            "GIVEN oneOf array is empty WHEN validating input THEN behavior should follow optional/required rules"
          ]
        },
        "not": {
          "title": "Not",
          "description": "Must NOT validate against this schema",
          "anyOf": [
            {
              "$ref": "#/definitions/json_schema"
            },
            {
              "type": "boolean",
              "x-business-rules": [
                "Boolean flag enables/disables 1 functionality through simple true/false configuration"
              ]
            }
          ],
          "examples": [
            {
              "type": "null"
            },
            {
              "enum": ["admin"]
            }
          ],
          "x-user-stories": [
            "GIVEN user configures not WHEN validating input THEN value should meet schema requirements",
            "GIVEN not is set WHEN processing configuration THEN value should be used correctly"
          ]
        }
      },
      "additionalProperties": false,
      "x-business-rules": [
        "Object structure groups related json schema properties for better organization and type-safe access"
      ]
    }
  },
  "properties": {
    "name": {
      "type": "string",
      "description": "The name of the application (follows npm package naming conventions)",
      "title": "Application Name",
      "minLength": 1,
      "maxLength": 214,
      "examples": ["my-app", "todo-app", "@myorg/my-app", "blog-system", "dashboard-admin"],
      "pattern": "^(?:@[a-z0-9-~][a-z0-9-._~]*\\/)?[a-z0-9-~][a-z0-9-._~]*$",
      "x-business-rules": [
        "Pattern constraint enforces data format consistency and error prevention, rejecting invalid formats before they cause system errors",
        "Length limits ensure application name fits within storage constraints and UI display areas without truncation"
      ],
      "x-user-stories": [
        "GIVEN a server configured with a specific app name WHEN user navigates to the homepage THEN the app name should be displayed as the main h1 heading",
        "GIVEN an app with name 'my-dashboard' WHEN user navigates to the homepage THEN browser title should be '{name} - Powered by Omnera'",
        "GIVEN an app with single-character name 'a' WHEN user navigates to the homepage THEN single character should be displayed as heading",
        "GIVEN an app with 214-character name (npm package max length) WHEN user navigates to the homepage THEN full name should be displayed without truncation",
        "GIVEN an app with scoped package name '@myorg/dashboard' WHEN user navigates to the homepage THEN full scoped name including @ and / should be displayed",
        "GIVEN an app with hyphenated name 'user-management-system' WHEN user navigates to the homepage THEN name with hyphens should be displayed exactly",
        "GIVEN an app with underscored name 'user_dashboard_app' WHEN user navigates to the homepage THEN name with underscores should be displayed exactly",
        "GIVEN an app with dotted name 'app.dashboard.v2' WHEN user navigates to the homepage THEN name with dots should be displayed exactly",
        "GIVEN an app with complex name '@scope/my-app_v2.beta-test' WHEN user navigates to the homepage THEN all special characters should be preserved",
        "GIVEN an app with name 'accessibility-test' WHEN user navigates to the homepage THEN page should have exactly one h1 element (primary heading)",
        "GIVEN an app with name 'semantic-html-test' WHEN user navigates to the homepage THEN h1 should be the first heading level on the page",
        "GIVEN an app with name 'layout-test' WHEN user navigates to the homepage THEN h1 heading should be centered horizontally",
        "GIVEN an app with name 'visibility-test' WHEN user navigates to the homepage THEN h1 heading should be visible and not hidden",
        "GIVEN an app with name 'my-app-2024' WHEN user navigates to the homepage THEN text content should exactly match input (no sanitization beyond React defaults)",
        "GIVEN an app with single-character name 'x' WHEN user navigates to the homepage THEN page title should be 'x - Powered by Omnera'",
        "GIVEN an app with scoped name '@company/product' WHEN user navigates to the homepage THEN page title should preserve @ symbol and forward slash",
        "GIVEN an app with name 'typography-test' WHEN user navigates to the homepage THEN h1 should use TypographyH1 component styling (large font size)",
        "GIVEN two different test runs with different app names WHEN user navigates to each homepage THEN each should display its respective app name",
        "GIVEN an app with name containing tilde 'app~test' WHEN user navigates to the homepage THEN tilde should be displayed in heading",
        "GIVEN an app with complex scoped name '@my-org.team/product-v2' WHEN user navigates to the homepage THEN full scoped name with dots and hyphens should be displayed",
        "GIVEN an app with complex scoped package name containing all valid characters WHEN user navigates to the homepage THEN all name display requirements should be met (display, metadata, special characters, accessibility, styling)"
      ]
    },
    "description": {
      "type": "string",
      "description": "A single-line description of the application (line breaks not allowed)",
      "title": "Application Description",
      "examples": [
        "A simple application",
        "My app - with special characters!@#$%",
        "Très bien! 你好 🎉",
        "Full-featured e-commerce platform with cart, checkout & payment processing"
      ],
      "pattern": "^[^\\r\\n]*$",
      "x-business-rules": [
        "Pattern constraint enforces data format consistency and error prevention, rejecting invalid formats before they cause system errors"
      ],
      "x-user-stories": [
        "GIVEN an app with name and description WHEN user navigates to the homepage THEN description should be visible below the app name",
        "GIVEN an app with only name (no description property) WHEN user navigates to the homepage THEN description element should NOT be rendered",
        "GIVEN an app with name and description WHEN user navigates to the homepage THEN description MUST appear AFTER the h1 title in DOM order",
        "GIVEN an app with description containing special characters WHEN user navigates to the homepage THEN special characters should be displayed correctly",
        "GIVEN an app with description containing Unicode and emojis WHEN user navigates to the homepage THEN Unicode characters and emojis should be displayed correctly",
        "GIVEN an app with very long description (500+ characters) WHEN user navigates to the homepage THEN description should wrap properly and remain visible",
        "GIVEN an app with empty string description (not undefined) WHEN user navigates to the homepage THEN description element should NOT be rendered",
        "GIVEN an app with description WHEN user navigates to the homepage THEN description should be rendered as a paragraph (<p>) element",
        "GIVEN an app with description WHEN user navigates to the homepage THEN description should be centered horizontally",
        "GIVEN an app with description WHEN user navigates to the homepage THEN description should be visible and in viewport",
        "GIVEN an app with description containing mixed case, special chars, and whitespace WHEN user navigates to the homepage THEN text content should exactly match input (no transformation)",
        "GIVEN an app with version, name, and description WHEN user navigates to the homepage THEN all elements should appear in correct order: version → title → description",
        "GIVEN an app with very long description (1000+ characters) WHEN user navigates to the homepage THEN full description should be displayed without truncation",
        "GIVEN an app with description containing HTML-like tags WHEN user navigates to the homepage THEN HTML tags should be escaped and displayed as text (not rendered as HTML)",
        "GIVEN an app with name and description WHEN user navigates to the homepage THEN there should be appropriate spacing between title and description"
      ]
    },
    "version": {
      "type": "string",
      "description": "The version of the application following Semantic Versioning (SemVer) 2.0.0 specification",
      "title": "Application Version",
      "minLength": 5,
      "examples": [
        "1.0.0",
        "0.0.1",
        "1.2.3",
        "1.0.0-alpha",
        "1.0.0-beta.1",
        "2.0.0-rc.1",
        "1.0.0+build.123",
        "1.0.0-alpha+001"
      ],
      "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
      "x-business-rules": [
        "Pattern constraint enforces data format consistency and error prevention, rejecting invalid formats before they cause system errors",
        "Minimum 5 characters ensures application version is sufficiently descriptive for user identification and debugging"
      ],
      "x-user-stories": [
        "GIVEN an app with name and simple SemVer version '1.0.0' WHEN user navigates to the homepage THEN version badge should be visible with correct version text",
        "GIVEN an app with only name (no version property) WHEN user navigates to the homepage THEN version badge should NOT be rendered",
        "GIVEN an app with pre-release version '2.0.0-beta.1' WHEN user navigates to the homepage THEN badge should display pre-release version exactly as specified",
        "GIVEN an app with build metadata in version '1.0.0+build.123' WHEN user navigates to the homepage THEN badge should display version with build metadata intact",
        "GIVEN an app with both pre-release and build metadata '1.0.0-alpha+001' WHEN user navigates to the homepage THEN badge should display complete version string",
        "GIVEN an app with name and version WHEN user navigates to the homepage THEN badge should appear before (above) the app name heading",
        "GIVEN an app with version WHEN user navigates to the homepage THEN badge should have proper accessibility attributes (data-testid, data-slot)"
      ]
    },
    "tables": {
      "description": "Collection of database tables that define the data structure of your application. Each table represents an entity (e.g., users, products, orders) with fields that define the schema. Tables support relationships, indexes, constraints, and various field types. Tables are the foundation of your application's data model and determine what information can be stored and how it relates.",
      "title": "Data Tables",
      "default": [],
      "type": "array",
      "items": {
        "title": "Data Table",
        "description": "A database table definition with its fields and structure",
        "version": "0.81.0",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/definitions/id",
            "title": "Table ID",
            "description": "Unique identifier for the table",
            "examples": [1, 2, 100],
            "x-user-stories": [
              "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
              "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
              "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
            ]
          },
          "name": {
            "$ref": "#/definitions/name",
            "title": "Table Name",
            "description": "Name of the database table",
            "placeholder": "Enter table name",
            "examples": ["users", "products", "orders", "customers"],
            "pattern": "^[a-z][a-z0-9_]*$",
            "help": "Use lowercase letters, numbers, and underscores. Must start with a letter.",
            "x-user-stories": [
              "GIVEN user configures name WHEN validating input THEN value should meet schema requirements",
              "GIVEN name is set WHEN processing configuration THEN value should be used correctly"
            ]
          },
          "fields": {
            "description": "List of fields/columns in this table",
            "title": "Table Fields",
            "minItems": 1,
            "default": [],
            "type": "array",
            "items": {
              "title": "Field",
              "description": "A field in the table",
              "anyOf": [
                {
                  "title": "Text Field",
                  "description": "Text field supporting various formats: single-line for short text (names, titles), long-text for paragraphs and descriptions, phone-number with automatic formatting, email with validation, and url with link display. Required flag makes the field mandatory. Unique constraint ensures no duplicate values across records. Indexing improves search and filter performance.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/definitions/id",
                      "x-user-stories": [
                        "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                        "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                        "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                      ]
                    },
                    "name": {
                      "$ref": "#/definitions/name",
                      "x-user-stories": [
                        "GIVEN new field is created WHEN saving configuration THEN field name should follow database naming conventions",
                        "GIVEN field with duplicate name WHEN validating table schema THEN error should prevent conflicts",
                        "GIVEN field name is set WHEN querying data THEN field should be accessible by its name"
                      ]
                    },
                    "required": {
                      "type": "boolean",
                      "default": false,
                      "x-business-rules": [
                        "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN required is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN required is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with required WHEN validating settings THEN boolean value should be accepted"
                      ]
                    },
                    "unique": {
                      "type": "boolean",
                      "default": false,
                      "description": "Whether this field must contain unique values across all rows",
                      "x-business-rules": [
                        "Uniqueness constraint prevents conflicts and ensures each unique can be unambiguously referenced",
                        "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN unique is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN unique is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with unique WHEN validating settings THEN boolean value should be accepted"
                      ]
                    },
                    "indexed": {
                      "type": "boolean",
                      "default": false,
                      "description": "Whether to create a database index on this field for faster queries",
                      "x-business-rules": [
                        "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN indexed is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN indexed is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with indexed WHEN validating settings THEN boolean value should be accepted"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "enum": ["single-line-text", "long-text", "phone-number", "email", "url"],
                      "x-business-rules": [
                        "Restricted to 5 allowed values (single-line-text, long-text, phone-number, ...) to maintain type safety and enable clear validation error messages"
                      ],
                      "x-user-stories": [
                        "GIVEN user selects type from valid options WHEN validating input THEN selection should be accepted",
                        "GIVEN user provides invalid type value WHEN validating input THEN error should list valid options: single-line-text, long-text, phone-number",
                        "GIVEN type is set to any valid enum value WHEN processing entity THEN appropriate behavior should execute"
                      ]
                    },
                    "default": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides default WHEN validating input THEN string value should be accepted",
                        "GIVEN default is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    }
                  },
                  "required": ["id", "name", "type"],
                  "additionalProperties": false,
                  "x-user-stories": [
                    "GIVEN I am working with an email field WHEN I create a record THEN it should complete successfully",
                    "GIVEN I am working with a long text field WHEN I create a record THEN it should complete successfully",
                    "GIVEN I am working with a phone number field WHEN I create a record THEN it should complete successfully",
                    "GIVEN I am working with a single line text field WHEN I create a record THEN it should complete successfully",
                    "GIVEN I am working with a url field WHEN I create a record THEN it should complete successfully"
                  ],
                  "x-business-rules": [
                    "Uniqueness constraint prevents conflicts and ensures each text field can be unambiguously referenced"
                  ]
                },
                {
                  "title": "Number Field",
                  "description": "Numeric field with subtypes: integer for whole numbers, decimal for floating-point with configurable precision (0-10 decimal places), currency for monetary values with currency code (USD, EUR, GBP), and percentage for ratios. Supports min/max constraints for range validation. Indexing enables efficient numerical sorting and filtering.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/definitions/id",
                      "x-user-stories": [
                        "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                        "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                        "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                      ]
                    },
                    "name": {
                      "$ref": "#/definitions/name",
                      "x-user-stories": [
                        "GIVEN new field is created WHEN saving configuration THEN field name should follow database naming conventions",
                        "GIVEN field with duplicate name WHEN validating table schema THEN error should prevent conflicts",
                        "GIVEN field name is set WHEN querying data THEN field should be accessible by its name"
                      ]
                    },
                    "required": {
                      "type": "boolean",
                      "default": false,
                      "x-business-rules": [
                        "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN required is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN required is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with required WHEN validating settings THEN boolean value should be accepted"
                      ]
                    },
                    "unique": {
                      "type": "boolean",
                      "default": false,
                      "description": "Whether this field must contain unique values across all rows",
                      "x-business-rules": [
                        "Uniqueness constraint prevents conflicts and ensures each unique can be unambiguously referenced",
                        "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN unique is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN unique is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with unique WHEN validating settings THEN boolean value should be accepted"
                      ]
                    },
                    "indexed": {
                      "type": "boolean",
                      "default": false,
                      "description": "Whether to create a database index on this field for faster queries",
                      "x-business-rules": [
                        "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN indexed is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN indexed is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with indexed WHEN validating settings THEN boolean value should be accepted"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "enum": ["integer", "decimal", "currency", "percentage"],
                      "x-business-rules": [
                        "Restricted to 4 allowed values (integer, decimal, currency, ...) to maintain type safety and enable clear validation error messages"
                      ],
                      "x-user-stories": [
                        "GIVEN user selects type from valid options WHEN validating input THEN selection should be accepted",
                        "GIVEN user provides invalid type value WHEN validating input THEN error should list valid options: integer, decimal, currency",
                        "GIVEN type is set to any valid enum value WHEN processing entity THEN appropriate behavior should execute"
                      ]
                    },
                    "min": {
                      "type": "number",
                      "description": "Minimum value",
                      "x-user-stories": [
                        "GIVEN user provides min WHEN validating input THEN numeric value should be accepted",
                        "GIVEN user provides non-numeric min WHEN validating input THEN error should require number"
                      ]
                    },
                    "max": {
                      "type": "number",
                      "description": "Maximum value",
                      "x-user-stories": [
                        "GIVEN user provides max WHEN validating input THEN numeric value should be accepted",
                        "GIVEN user provides non-numeric max WHEN validating input THEN error should require number"
                      ]
                    },
                    "precision": {
                      "type": "integer",
                      "description": "Number of decimal places (for decimal type)",
                      "minimum": 0,
                      "maximum": 10,
                      "default": 2,
                      "x-business-rules": [
                        "Numeric range (0-10) prevents overflow errors and ensures values stay within valid business bounds",
                        "Defaults to 2 when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN user provides precision between 0 and 10 WHEN validating input THEN value should be accepted",
                        "GIVEN user provides precision below 0 WHEN validating input THEN error should enforce minimum value",
                        "GIVEN user provides precision above 10 WHEN validating input THEN error should enforce maximum value"
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "description": "Currency code (for currency type)",
                      "default": "USD",
                      "examples": ["USD", "EUR", "GBP"],
                      "x-business-rules": [
                        "Defaults to \"USD\" when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN user provides currency WHEN validating input THEN string value should be accepted",
                        "GIVEN currency is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "default": {
                      "type": "number",
                      "x-user-stories": [
                        "GIVEN user provides default WHEN validating input THEN numeric value should be accepted",
                        "GIVEN user provides non-numeric default WHEN validating input THEN error should require number"
                      ]
                    }
                  },
                  "required": ["id", "name", "type"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related number field properties for better organization and type-safe access"
                  ]
                },
                {
                  "title": "Date Field",
                  "description": "Date and time field with three modes: date for calendar dates only, datetime for timestamp with date and time, time for clock time only. Supports custom display formats (YYYY-MM-DD, MM/DD/YYYY, DD-MM-YYYY), timezone specification for datetime fields (UTC, America/New_York, Europe/London), and optional time component for date fields. Useful for tracking events, deadlines, and temporal data.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/definitions/id",
                      "x-user-stories": [
                        "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                        "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                        "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                      ]
                    },
                    "name": {
                      "$ref": "#/definitions/name",
                      "x-user-stories": [
                        "GIVEN new field is created WHEN saving configuration THEN field name should follow database naming conventions",
                        "GIVEN field with duplicate name WHEN validating table schema THEN error should prevent conflicts",
                        "GIVEN field name is set WHEN querying data THEN field should be accessible by its name"
                      ]
                    },
                    "required": {
                      "type": "boolean",
                      "default": false,
                      "x-business-rules": [
                        "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN required is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN required is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with required WHEN validating settings THEN boolean value should be accepted"
                      ]
                    },
                    "unique": {
                      "type": "boolean",
                      "default": false,
                      "description": "Whether this field must contain unique values across all rows",
                      "x-business-rules": [
                        "Uniqueness constraint prevents conflicts and ensures each unique can be unambiguously referenced",
                        "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN unique is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN unique is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with unique WHEN validating settings THEN boolean value should be accepted"
                      ]
                    },
                    "indexed": {
                      "type": "boolean",
                      "default": false,
                      "description": "Whether to create a database index on this field for faster queries",
                      "x-business-rules": [
                        "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN indexed is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN indexed is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with indexed WHEN validating settings THEN boolean value should be accepted"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "enum": ["date", "datetime", "time"],
                      "x-business-rules": [
                        "Restricted to 3 allowed values (date, datetime, time) to maintain type safety and enable clear validation error messages"
                      ],
                      "x-user-stories": [
                        "GIVEN user selects type from valid options WHEN validating input THEN selection should be accepted",
                        "GIVEN user provides invalid type value WHEN validating input THEN error should list valid options: date, datetime, time",
                        "GIVEN type is set to any valid enum value WHEN processing entity THEN appropriate behavior should execute"
                      ]
                    },
                    "format": {
                      "type": "string",
                      "description": "Date format string",
                      "default": "YYYY-MM-DD",
                      "examples": ["YYYY-MM-DD", "MM/DD/YYYY", "DD-MM-YYYY"],
                      "x-business-rules": [
                        "Defaults to \"YYYY-MM-DD\" when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN user provides format WHEN validating input THEN string value should be accepted",
                        "GIVEN format is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "includeTime": {
                      "type": "boolean",
                      "description": "Include time component (for date type)",
                      "default": false,
                      "x-business-rules": [
                        "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN includeTime is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN includeTime is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with includeTime WHEN validating settings THEN boolean value should be accepted"
                      ]
                    },
                    "timezone": {
                      "type": "string",
                      "description": "Timezone for datetime fields",
                      "default": "UTC",
                      "examples": ["UTC", "America/New_York", "Europe/London"],
                      "x-business-rules": [
                        "Defaults to \"UTC\" when not specified, providing sensible fallback behavior without requiring explicit configuration",
                        "Must be valid IANA timezone identifier to ensure scheduled operations execute at correct local times across DST transitions"
                      ],
                      "x-user-stories": [
                        "GIVEN automation with timezone WHEN cron expression evaluates THEN execution should occur at correct local time",
                        "GIVEN invalid timezone identifier WHEN validating configuration THEN error should list valid IANA timezones",
                        "GIVEN timezone handles DST transitions WHEN schedule crosses DST boundary THEN execution should occur at correct wall-clock time"
                      ]
                    },
                    "default": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides default WHEN validating input THEN string value should be accepted",
                        "GIVEN default is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    }
                  },
                  "required": ["id", "name", "type"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related date field properties for better organization and type-safe access"
                  ]
                },
                {
                  "title": "Checkbox Field",
                  "description": "Boolean checkbox field for true/false values. Displays as a toggleable checkbox in forms and checkmark/cross in tables. Useful for status flags (active/inactive, published/draft), feature toggles, and yes/no questions. Supports default value. Cannot be required (defaults to false).",
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/definitions/id",
                      "x-user-stories": [
                        "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                        "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                        "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                      ]
                    },
                    "name": {
                      "$ref": "#/definitions/name",
                      "x-user-stories": [
                        "GIVEN new field is created WHEN saving configuration THEN field name should follow database naming conventions",
                        "GIVEN field with duplicate name WHEN validating table schema THEN error should prevent conflicts",
                        "GIVEN field name is set WHEN querying data THEN field should be accessible by its name"
                      ]
                    },
                    "required": {
                      "type": "boolean",
                      "default": false,
                      "x-business-rules": [
                        "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN required is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN required is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with required WHEN validating settings THEN boolean value should be accepted"
                      ]
                    },
                    "indexed": {
                      "type": "boolean",
                      "default": false,
                      "description": "Whether to create a database index on this field for faster queries",
                      "x-business-rules": [
                        "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN indexed is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN indexed is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with indexed WHEN validating settings THEN boolean value should be accepted"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "const": "checkbox",
                      "x-business-rules": [
                        "Fixed value (checkbox) identifies this specific root.properties.tables.items.properties.fields.items.anyOf.3.properties.type type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with type='checkbox' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "default": {
                      "type": "boolean",
                      "x-business-rules": [
                        "Boolean flag enables/disables default functionality through simple true/false configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN default is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN default is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with default WHEN validating settings THEN boolean value should be accepted"
                      ]
                    }
                  },
                  "required": ["id", "name", "type"],
                  "additionalProperties": false,
                  "x-user-stories": [
                    "GIVEN I am working with a checkbox field WHEN I create a record THEN it should complete successfully"
                  ],
                  "x-business-rules": [
                    "Object structure groups related checkbox field properties for better organization and type-safe access"
                  ]
                },
                {
                  "title": "Single Select Field",
                  "description": "Single selection dropdown from predefined options. Users can choose exactly one value from the list. Useful for status fields (Active, Inactive, Pending), categories, priority levels (High, Medium, Low), and enumerated values. Requires at least one option. Supports default value. Indexing improves filtering by option value.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/definitions/id",
                      "x-user-stories": [
                        "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                        "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                        "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                      ]
                    },
                    "name": {
                      "$ref": "#/definitions/name",
                      "x-user-stories": [
                        "GIVEN new field is created WHEN saving configuration THEN field name should follow database naming conventions",
                        "GIVEN field with duplicate name WHEN validating table schema THEN error should prevent conflicts",
                        "GIVEN field name is set WHEN querying data THEN field should be accessible by its name"
                      ]
                    },
                    "required": {
                      "type": "boolean",
                      "default": false,
                      "x-business-rules": [
                        "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN required is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN required is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with required WHEN validating settings THEN boolean value should be accepted"
                      ]
                    },
                    "indexed": {
                      "type": "boolean",
                      "default": false,
                      "description": "Whether to create a database index on this field for faster queries",
                      "x-business-rules": [
                        "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN indexed is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN indexed is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with indexed WHEN validating settings THEN boolean value should be accepted"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "const": "single-select",
                      "x-business-rules": [
                        "Fixed value (single-select) identifies this specific root.properties.tables.items.properties.fields.items.anyOf.4.properties.type type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with type='single-select' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "options": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "minItems": 1,
                      "default": [],
                      "x-business-rules": [
                        "Defaults to [] when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN user provides options with at least 1 items WHEN validating input THEN array should be accepted",
                        "GIVEN user provides options with fewer than 1 items WHEN validating input THEN error should enforce minimum items"
                      ]
                    },
                    "default": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides default WHEN validating input THEN string value should be accepted",
                        "GIVEN default is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    }
                  },
                  "required": ["id", "name", "type", "options"],
                  "additionalProperties": false,
                  "x-user-stories": [
                    "GIVEN I am working with a single select field WHEN I create a record THEN it should complete successfully",
                    "GIVEN I am working with an invalid single select field WHEN I create a record THEN it should fail with validation error"
                  ],
                  "x-business-rules": [
                    "Object structure groups related single select field properties for better organization and type-safe access"
                  ]
                },
                {
                  "title": "Multi Select Field",
                  "description": "Multiple selection field allowing users to choose zero or more options from a predefined list. Displays as checkboxes or multi-select dropdown. Useful for tags, categories, features, skills, and attributes that can have multiple values. Supports maxSelections constraint to limit number of choices. Requires at least one option. Stores values as an array.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/definitions/id",
                      "x-user-stories": [
                        "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                        "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                        "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                      ]
                    },
                    "name": {
                      "$ref": "#/definitions/name",
                      "x-user-stories": [
                        "GIVEN new field is created WHEN saving configuration THEN field name should follow database naming conventions",
                        "GIVEN field with duplicate name WHEN validating table schema THEN error should prevent conflicts",
                        "GIVEN field name is set WHEN querying data THEN field should be accessible by its name"
                      ]
                    },
                    "required": {
                      "type": "boolean",
                      "default": false,
                      "x-business-rules": [
                        "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN required is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN required is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with required WHEN validating settings THEN boolean value should be accepted"
                      ]
                    },
                    "indexed": {
                      "type": "boolean",
                      "default": false,
                      "description": "Whether to create a database index on this field for faster queries",
                      "x-business-rules": [
                        "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN indexed is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN indexed is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with indexed WHEN validating settings THEN boolean value should be accepted"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "const": "multi-select",
                      "x-business-rules": [
                        "Fixed value (multi-select) identifies this specific root.properties.tables.items.properties.fields.items.anyOf.5.properties.type type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with type='multi-select' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "options": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "minItems": 1,
                      "default": [],
                      "x-business-rules": [
                        "Defaults to [] when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN user provides options with at least 1 items WHEN validating input THEN array should be accepted",
                        "GIVEN user provides options with fewer than 1 items WHEN validating input THEN error should enforce minimum items"
                      ]
                    },
                    "maxSelections": {
                      "type": "integer",
                      "description": "Maximum number of selections allowed",
                      "minimum": 1,
                      "x-business-rules": ["Maximum number of selections allowed"],
                      "x-user-stories": [
                        "GIVEN user provides maxSelections >= 1 WHEN validating input THEN value should be accepted",
                        "GIVEN user provides maxSelections < 1 WHEN validating input THEN error should enforce minimum value"
                      ]
                    },
                    "default": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-business-rules": [
                        "Array enables multiple default to be configured, supporting flexible workflows and batch operations"
                      ],
                      "x-user-stories": [
                        "GIVEN user provides default array WHEN validating input THEN items should be processed in order",
                        "GIVEN default array is empty WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    }
                  },
                  "required": ["id", "name", "type", "options"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related multi select field properties for better organization and type-safe access"
                  ]
                },
                {
                  "title": "Relationship Field",
                  "description": "Foreign key relationship to another table creating associations between entities. Supports three relationship types: one-to-one (single unique reference), one-to-many (single reference to many records), many-to-many (junction table for bidirectional references). Configure onDelete behavior (cascade deletes related, set-null clears reference, restrict prevents deletion, no-action does nothing). Configure onUpdate behavior for key changes. Specify displayField to show human-readable value from related table. Automatically indexed for query performance.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/definitions/id",
                      "x-user-stories": [
                        "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                        "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                        "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                      ]
                    },
                    "name": {
                      "$ref": "#/definitions/name",
                      "x-user-stories": [
                        "GIVEN new field is created WHEN saving configuration THEN field name should follow database naming conventions",
                        "GIVEN field with duplicate name WHEN validating table schema THEN error should prevent conflicts",
                        "GIVEN field name is set WHEN querying data THEN field should be accessible by its name"
                      ]
                    },
                    "required": {
                      "type": "boolean",
                      "default": false,
                      "x-business-rules": [
                        "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN required is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN required is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with required WHEN validating settings THEN boolean value should be accepted"
                      ]
                    },
                    "indexed": {
                      "type": "boolean",
                      "default": true,
                      "description": "Whether to create a database index on this field for faster queries (recommended for foreign keys)",
                      "x-business-rules": [
                        "Defaults to true when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN indexed is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN indexed is false (default: True) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with indexed WHEN validating settings THEN boolean value should be accepted"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "const": "relationship",
                      "x-business-rules": [
                        "Fixed value (relationship) identifies this specific root.properties.tables.items.properties.fields.items.anyOf.6.properties.type type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with type='relationship' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "relatedTable": {
                      "type": "string",
                      "description": "Name of the related table",
                      "minLength": 1,
                      "x-business-rules": ["Name of the related table"],
                      "x-user-stories": [
                        "GIVEN user provides relatedTable with at least 1 characters WHEN validating input THEN value should be accepted",
                        "GIVEN user provides relatedTable shorter than 1 chars WHEN validating input THEN error should require minimum length"
                      ]
                    },
                    "relationType": {
                      "type": "string",
                      "enum": ["one-to-one", "one-to-many", "many-to-many"],
                      "default": "one-to-many",
                      "description": "Type of relationship",
                      "x-business-rules": [
                        "Restricted to 3 allowed values (one-to-one, one-to-many, many-to-many) to maintain type safety and enable clear validation error messages",
                        "Defaults to \"one-to-many\" when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN user selects relationType from valid options WHEN validating input THEN selection should be accepted",
                        "GIVEN user provides invalid relationType value WHEN validating input THEN error should list valid options: one-to-one, one-to-many, many-to-many",
                        "GIVEN relationType is set to any valid enum value WHEN processing entity THEN appropriate behavior should execute"
                      ]
                    },
                    "displayField": {
                      "type": "string",
                      "description": "Field from related table to display in UI",
                      "minLength": 1,
                      "x-business-rules": ["Field from related table to display in UI"],
                      "x-user-stories": [
                        "GIVEN user provides displayField with at least 1 characters WHEN validating input THEN value should be accepted",
                        "GIVEN user provides displayField shorter than 1 chars WHEN validating input THEN error should require minimum length"
                      ]
                    },
                    "onDelete": {
                      "type": "string",
                      "enum": ["cascade", "set-null", "restrict", "no-action"],
                      "default": "restrict",
                      "description": "Action to take when the related record is deleted",
                      "x-business-rules": [
                        "Restricted to 4 allowed values (cascade, set-null, restrict, ...) to maintain type safety and enable clear validation error messages",
                        "Defaults to \"restrict\" when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN user selects onDelete from valid options WHEN validating input THEN selection should be accepted",
                        "GIVEN user provides invalid onDelete value WHEN validating input THEN error should list valid options: cascade, set-null, restrict",
                        "GIVEN onDelete is set to any valid enum value WHEN processing entity THEN appropriate behavior should execute"
                      ]
                    },
                    "onUpdate": {
                      "type": "string",
                      "enum": ["cascade", "set-null", "restrict", "no-action"],
                      "default": "cascade",
                      "description": "Action to take when the related record's key is updated",
                      "x-business-rules": [
                        "Restricted to 4 allowed values (cascade, set-null, restrict, ...) to maintain type safety and enable clear validation error messages",
                        "Defaults to \"cascade\" when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN user selects onUpdate from valid options WHEN validating input THEN selection should be accepted",
                        "GIVEN user provides invalid onUpdate value WHEN validating input THEN error should list valid options: cascade, set-null, restrict",
                        "GIVEN onUpdate is set to any valid enum value WHEN processing entity THEN appropriate behavior should execute"
                      ]
                    }
                  },
                  "required": ["id", "name", "type", "relatedTable", "relationType"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Uniqueness constraint prevents conflicts and ensures each relationship field can be unambiguously referenced"
                  ]
                },
                {
                  "title": "Single Attachment Field",
                  "description": "Single file upload field with configurable storage backend. Supports local filesystem or S3-compatible cloud storage. Configure maxSize limit (in bytes, default 10MB), allowedTypes using MIME types or wildcards (e.g., image/*, application/pdf). Useful for profile pictures, documents, invoices, and single-file attachments. For S3 provider, bucket name is required.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/definitions/id",
                      "x-user-stories": [
                        "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                        "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                        "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                      ]
                    },
                    "name": {
                      "$ref": "#/definitions/name",
                      "x-user-stories": [
                        "GIVEN new field is created WHEN saving configuration THEN field name should follow database naming conventions",
                        "GIVEN field with duplicate name WHEN validating table schema THEN error should prevent conflicts",
                        "GIVEN field name is set WHEN querying data THEN field should be accessible by its name"
                      ]
                    },
                    "required": {
                      "type": "boolean",
                      "default": false,
                      "x-business-rules": [
                        "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN required is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN required is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with required WHEN validating settings THEN boolean value should be accepted"
                      ]
                    },
                    "indexed": {
                      "type": "boolean",
                      "default": false,
                      "description": "Whether to create a database index on this field for faster queries",
                      "x-business-rules": [
                        "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN indexed is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN indexed is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with indexed WHEN validating settings THEN boolean value should be accepted"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "const": "single-attachment",
                      "x-business-rules": [
                        "Fixed value (single-attachment) identifies this specific root.properties.tables.items.properties.fields.items.anyOf.7.properties.type type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with type='single-attachment' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "storage": {
                      "type": "object",
                      "properties": {
                        "provider": {
                          "type": "string",
                          "enum": ["local", "s3"],
                          "default": "local",
                          "description": "Storage provider",
                          "x-business-rules": [
                            "Restricted to 2 allowed values (local, s3) to maintain type safety and enable clear validation error messages",
                            "Defaults to \"local\" when not specified, providing sensible fallback behavior without requiring explicit configuration"
                          ],
                          "x-user-stories": [
                            "GIVEN user selects provider from valid options WHEN validating input THEN selection should be accepted",
                            "GIVEN user provides invalid provider value WHEN validating input THEN error should list valid options: local, s3",
                            "GIVEN provider is set to any valid enum value WHEN processing entity THEN appropriate behavior should execute"
                          ]
                        },
                        "bucket": {
                          "type": "string",
                          "description": "S3 bucket name (required for s3 provider)",
                          "x-business-rules": ["S3 bucket name (required for s3 provider)"],
                          "x-user-stories": [
                            "GIVEN user provides bucket WHEN validating input THEN string value should be accepted",
                            "GIVEN bucket is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "maxSize": {
                          "type": "integer",
                          "description": "Maximum file size in bytes",
                          "default": 10485760,
                          "minimum": 1,
                          "x-business-rules": [
                            "Defaults to 10485760 when not specified, providing sensible fallback behavior without requiring explicit configuration"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides maxSize >= 1 WHEN validating input THEN value should be accepted",
                            "GIVEN user provides maxSize < 1 WHEN validating input THEN error should enforce minimum value"
                          ]
                        },
                        "allowedTypes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Allowed MIME types or file extensions",
                          "default": ["image/*", "application/pdf"],
                          "examples": [["image/*"], ["application/pdf", "application/msword"]],
                          "x-business-rules": [
                            "Defaults to [\"image/*\",\"application/pdf\"] when not specified, providing sensible fallback behavior without requiring explicit configuration"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides allowedTypes array WHEN validating input THEN items should be processed in order",
                            "GIVEN allowedTypes array is empty WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        }
                      },
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related storage properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures storage WHEN validating input THEN value should meet schema requirements",
                        "GIVEN storage is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["id", "name", "type"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related single attachment field properties for better organization and type-safe access"
                  ]
                },
                {
                  "title": "Multiple Attachments Field",
                  "description": "Multiple file upload field for collections of attachments. Supports local or S3 storage like single-attachment but allows multiple files per record. Configure maxFiles limit (default 10), maxSize per file (default 10MB), and allowedTypes using MIME types. Useful for document collections, image galleries, contract attachments, and multi-file uploads. Each file validated independently against constraints.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/definitions/id",
                      "x-user-stories": [
                        "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                        "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                        "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                      ]
                    },
                    "name": {
                      "$ref": "#/definitions/name",
                      "x-user-stories": [
                        "GIVEN new field is created WHEN saving configuration THEN field name should follow database naming conventions",
                        "GIVEN field with duplicate name WHEN validating table schema THEN error should prevent conflicts",
                        "GIVEN field name is set WHEN querying data THEN field should be accessible by its name"
                      ]
                    },
                    "required": {
                      "type": "boolean",
                      "default": false,
                      "x-business-rules": [
                        "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN required is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN required is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with required WHEN validating settings THEN boolean value should be accepted"
                      ]
                    },
                    "indexed": {
                      "type": "boolean",
                      "default": false,
                      "description": "Whether to create a database index on this field for faster queries",
                      "x-business-rules": [
                        "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN indexed is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN indexed is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with indexed WHEN validating settings THEN boolean value should be accepted"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "const": "multiple-attachments",
                      "x-business-rules": [
                        "Fixed value (multiple-attachments) identifies this specific root.properties.tables.items.properties.fields.items.anyOf.8.properties.type type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with type='multiple-attachments' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "maxFiles": {
                      "type": "integer",
                      "description": "Maximum number of files allowed",
                      "minimum": 1,
                      "default": 10,
                      "x-business-rules": [
                        "Defaults to 10 when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN user provides maxFiles >= 1 WHEN validating input THEN value should be accepted",
                        "GIVEN user provides maxFiles < 1 WHEN validating input THEN error should enforce minimum value"
                      ]
                    },
                    "storage": {
                      "type": "object",
                      "properties": {
                        "provider": {
                          "type": "string",
                          "enum": ["local", "s3"],
                          "default": "local",
                          "description": "Storage provider",
                          "x-business-rules": [
                            "Restricted to 2 allowed values (local, s3) to maintain type safety and enable clear validation error messages",
                            "Defaults to \"local\" when not specified, providing sensible fallback behavior without requiring explicit configuration"
                          ],
                          "x-user-stories": [
                            "GIVEN user selects provider from valid options WHEN validating input THEN selection should be accepted",
                            "GIVEN user provides invalid provider value WHEN validating input THEN error should list valid options: local, s3",
                            "GIVEN provider is set to any valid enum value WHEN processing entity THEN appropriate behavior should execute"
                          ]
                        },
                        "bucket": {
                          "type": "string",
                          "description": "S3 bucket name (required for s3 provider)",
                          "x-business-rules": ["S3 bucket name (required for s3 provider)"],
                          "x-user-stories": [
                            "GIVEN user provides bucket WHEN validating input THEN string value should be accepted",
                            "GIVEN bucket is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "maxSize": {
                          "type": "integer",
                          "description": "Maximum file size in bytes per file",
                          "default": 10485760,
                          "minimum": 1,
                          "x-business-rules": [
                            "Defaults to 10485760 when not specified, providing sensible fallback behavior without requiring explicit configuration"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides maxSize >= 1 WHEN validating input THEN value should be accepted",
                            "GIVEN user provides maxSize < 1 WHEN validating input THEN error should enforce minimum value"
                          ]
                        },
                        "allowedTypes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Allowed MIME types or file extensions",
                          "default": ["image/*", "application/pdf"],
                          "examples": [["image/*"], ["application/pdf", "application/msword"]],
                          "x-business-rules": [
                            "Defaults to [\"image/*\",\"application/pdf\"] when not specified, providing sensible fallback behavior without requiring explicit configuration"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides allowedTypes array WHEN validating input THEN items should be processed in order",
                            "GIVEN allowedTypes array is empty WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        }
                      },
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related storage properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures storage WHEN validating input THEN value should meet schema requirements",
                        "GIVEN storage is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["id", "name", "type"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related multiple attachments field properties for better organization and type-safe access"
                  ]
                },
                {
                  "title": "Formula Field",
                  "description": "Computed field that automatically calculates values using formula expressions. Formulas can reference other fields, use operators (+, -, *, /, =, >, <), and call functions (CONCAT, IF, ROUND, SUM, etc.). Specify resultType (text, number, boolean, date) for proper type handling. Optionally set display format (currency, percentage, decimal, date). Formulas are read-only and recalculate when dependent fields change. Useful for totals, concatenations, conditional logic, and derived values.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/definitions/id",
                      "x-user-stories": [
                        "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                        "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                        "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                      ]
                    },
                    "name": {
                      "$ref": "#/definitions/name",
                      "x-user-stories": [
                        "GIVEN new field is created WHEN saving configuration THEN field name should follow database naming conventions",
                        "GIVEN field with duplicate name WHEN validating table schema THEN error should prevent conflicts",
                        "GIVEN field name is set WHEN querying data THEN field should be accessible by its name"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "const": "formula",
                      "x-business-rules": [
                        "Fixed value (formula) identifies this specific root.properties.tables.items.properties.fields.items.anyOf.9.properties.type type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with type='formula' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "formula": {
                      "type": "string",
                      "description": "Formula expression to compute the value. Supports field references, operators, and functions.",
                      "minLength": 1,
                      "examples": [
                        "price * quantity",
                        "CONCAT(first_name, ' ', last_name)",
                        "IF(status = 'active', 'Yes', 'No')",
                        "ROUND(total * 0.15, 2)"
                      ],
                      "x-business-rules": ["Formula expression to compute the value"],
                      "x-user-stories": [
                        "GIVEN user provides formula with at least 1 characters WHEN validating input THEN value should be accepted",
                        "GIVEN user provides formula shorter than 1 chars WHEN validating input THEN error should require minimum length"
                      ]
                    },
                    "resultType": {
                      "type": "string",
                      "enum": ["text", "number", "boolean", "date"],
                      "default": "text",
                      "description": "Expected data type of the formula result",
                      "x-business-rules": [
                        "Restricted to 4 allowed values (text, number, boolean, ...) to maintain type safety and enable clear validation error messages",
                        "Defaults to \"text\" when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN user selects resultType from valid options WHEN validating input THEN selection should be accepted",
                        "GIVEN user provides invalid resultType value WHEN validating input THEN error should list valid options: text, number, boolean",
                        "GIVEN resultType is set to any valid enum value WHEN processing entity THEN appropriate behavior should execute"
                      ]
                    },
                    "format": {
                      "type": "string",
                      "description": "Display format for the result (e.g., currency, percentage)",
                      "examples": ["currency", "percentage", "decimal", "date"],
                      "x-business-rules": ["Display format for the result (e"],
                      "x-user-stories": [
                        "GIVEN user provides format WHEN validating input THEN string value should be accepted",
                        "GIVEN format is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    }
                  },
                  "required": ["id", "name", "type", "formula"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Formula Field is immutable after creation to ensure data integrity and prevent accidental corruption"
                  ]
                },
                {
                  "title": "Rollup Field",
                  "description": "Aggregate values from related records through a relationship field. Reference a relationshipField in the current table and a relatedField in the linked table. Apply aggregation functions: sum (add all values), count (count records), average (mean value), min (smallest value), max (largest value), median (middle value), concat (join text values), unique (count distinct values). Optionally set display format for the result. Read-only field that automatically updates when related data changes. Useful for totals, counts, statistics from child records.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/definitions/id",
                      "x-user-stories": [
                        "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                        "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                        "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                      ]
                    },
                    "name": {
                      "$ref": "#/definitions/name",
                      "x-user-stories": [
                        "GIVEN new field is created WHEN saving configuration THEN field name should follow database naming conventions",
                        "GIVEN field with duplicate name WHEN validating table schema THEN error should prevent conflicts",
                        "GIVEN field name is set WHEN querying data THEN field should be accessible by its name"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "const": "rollup",
                      "x-business-rules": [
                        "Fixed value (rollup) identifies this specific root.properties.tables.items.properties.fields.items.anyOf.10.properties.type type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with type='rollup' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "relationshipField": {
                      "type": "string",
                      "description": "Name of the relationship field to aggregate from",
                      "minLength": 1,
                      "x-business-rules": ["Name of the relationship field to aggregate from"],
                      "x-user-stories": [
                        "GIVEN user provides relationshipField with at least 1 characters WHEN validating input THEN value should be accepted",
                        "GIVEN user provides relationshipField shorter than 1 chars WHEN validating input THEN error should require minimum length"
                      ]
                    },
                    "relatedField": {
                      "type": "string",
                      "description": "Name of the field in the related table to aggregate",
                      "minLength": 1,
                      "x-business-rules": ["Name of the field in the related table to aggregate"],
                      "x-user-stories": [
                        "GIVEN user provides relatedField with at least 1 characters WHEN validating input THEN value should be accepted",
                        "GIVEN user provides relatedField shorter than 1 chars WHEN validating input THEN error should require minimum length"
                      ]
                    },
                    "aggregation": {
                      "type": "string",
                      "enum": [
                        "sum",
                        "count",
                        "average",
                        "min",
                        "max",
                        "median",
                        "concat",
                        "unique"
                      ],
                      "description": "Aggregation function to apply",
                      "x-business-rules": [
                        "Restricted to 8 allowed values (sum, count, average, ...) to maintain type safety and enable clear validation error messages"
                      ],
                      "x-user-stories": [
                        "GIVEN user selects aggregation from valid options WHEN validating input THEN selection should be accepted",
                        "GIVEN user provides invalid aggregation value WHEN validating input THEN error should list valid options: sum, count, average",
                        "GIVEN aggregation is set to any valid enum value WHEN processing entity THEN appropriate behavior should execute"
                      ]
                    },
                    "format": {
                      "type": "string",
                      "description": "Display format for the result",
                      "examples": ["currency", "number", "percentage"],
                      "x-business-rules": ["Display format for the result"],
                      "x-user-stories": [
                        "GIVEN user provides format WHEN validating input THEN string value should be accepted",
                        "GIVEN format is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "type",
                    "relationshipField",
                    "relatedField",
                    "aggregation"
                  ],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Rollup Field is immutable after creation to ensure data integrity and prevent accidental corruption",
                    "Uniqueness constraint prevents conflicts and ensures each rollup field can be unambiguously referenced"
                  ]
                },
                {
                  "title": "Lookup Field",
                  "description": "Display field values from related records through a relationship. Specify relationshipField (the relationship field in current table) and relatedField (the field to display from related table). Read-only field that automatically shows current value from linked record. Updates when related record changes. Useful for showing related data without duplicating storage (e.g., showing customer name in order, category name in product). More efficient than copying data.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/definitions/id",
                      "x-user-stories": [
                        "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                        "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                        "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                      ]
                    },
                    "name": {
                      "$ref": "#/definitions/name",
                      "x-user-stories": [
                        "GIVEN new field is created WHEN saving configuration THEN field name should follow database naming conventions",
                        "GIVEN field with duplicate name WHEN validating table schema THEN error should prevent conflicts",
                        "GIVEN field name is set WHEN querying data THEN field should be accessible by its name"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "const": "lookup",
                      "x-business-rules": [
                        "Fixed value (lookup) identifies this specific root.properties.tables.items.properties.fields.items.anyOf.11.properties.type type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with type='lookup' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "relationshipField": {
                      "type": "string",
                      "description": "Name of the relationship field to lookup from",
                      "minLength": 1,
                      "x-business-rules": ["Name of the relationship field to lookup from"],
                      "x-user-stories": [
                        "GIVEN user provides relationshipField with at least 1 characters WHEN validating input THEN value should be accepted",
                        "GIVEN user provides relationshipField shorter than 1 chars WHEN validating input THEN error should require minimum length"
                      ]
                    },
                    "relatedField": {
                      "type": "string",
                      "description": "Name of the field in the related table to display",
                      "minLength": 1,
                      "x-business-rules": ["Name of the field in the related table to display"],
                      "x-user-stories": [
                        "GIVEN user provides relatedField with at least 1 characters WHEN validating input THEN value should be accepted",
                        "GIVEN user provides relatedField shorter than 1 chars WHEN validating input THEN error should require minimum length"
                      ]
                    }
                  },
                  "required": ["id", "name", "type", "relationshipField", "relatedField"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Lookup Field is immutable after creation to ensure data integrity and prevent accidental corruption"
                  ]
                },
                {
                  "title": "User Field",
                  "description": "Reference to application users/collaborators for assignments, ownership, and mentions. Links records to user accounts. Set allowMultiple=true to assign multiple users (e.g., project team members), or false for single assignment (e.g., task owner). Automatically indexed for efficient filtering by user. Displays user profile information (name, avatar). Useful for task assignments, record ownership, collaboration, and audit trails.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/definitions/id",
                      "x-user-stories": [
                        "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                        "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                        "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                      ]
                    },
                    "name": {
                      "$ref": "#/definitions/name",
                      "x-user-stories": [
                        "GIVEN new field is created WHEN saving configuration THEN field name should follow database naming conventions",
                        "GIVEN field with duplicate name WHEN validating table schema THEN error should prevent conflicts",
                        "GIVEN field name is set WHEN querying data THEN field should be accessible by its name"
                      ]
                    },
                    "required": {
                      "type": "boolean",
                      "default": false,
                      "x-business-rules": [
                        "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN required is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN required is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with required WHEN validating settings THEN boolean value should be accepted"
                      ]
                    },
                    "indexed": {
                      "type": "boolean",
                      "default": true,
                      "description": "Whether to create a database index on this field for faster queries",
                      "x-business-rules": [
                        "Defaults to true when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN indexed is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN indexed is false (default: True) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with indexed WHEN validating settings THEN boolean value should be accepted"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "const": "user",
                      "x-business-rules": [
                        "Fixed value (user) identifies this specific root.properties.tables.items.properties.fields.items.anyOf.12.properties.type type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with type='user' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "allowMultiple": {
                      "type": "boolean",
                      "default": false,
                      "description": "Whether to allow multiple users to be selected",
                      "x-business-rules": [
                        "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN allowMultiple is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN allowMultiple is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with allowMultiple WHEN validating settings THEN boolean value should be accepted"
                      ]
                    }
                  },
                  "required": ["id", "name", "type"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related user field properties for better organization and type-safe access"
                  ]
                },
                {
                  "title": "Created At Field",
                  "description": "Automatically set timestamp when record is created. Read-only field that cannot be modified after creation. Always uses current server time in UTC. Automatically indexed for sorting and filtering by creation time. Useful for audit trails, chronological ordering, and tracking when data was first entered. Displays as formatted datetime in UI.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/definitions/id",
                      "x-user-stories": [
                        "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                        "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                        "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                      ]
                    },
                    "name": {
                      "$ref": "#/definitions/name",
                      "x-user-stories": [
                        "GIVEN new field is created WHEN saving configuration THEN field name should follow database naming conventions",
                        "GIVEN field with duplicate name WHEN validating table schema THEN error should prevent conflicts",
                        "GIVEN field name is set WHEN querying data THEN field should be accessible by its name"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "const": "created-at",
                      "x-business-rules": [
                        "Fixed value (created-at) identifies this specific root.properties.tables.items.properties.fields.items.anyOf.13.properties.type type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with type='created-at' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "indexed": {
                      "type": "boolean",
                      "default": true,
                      "x-business-rules": [
                        "Defaults to true when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN indexed is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN indexed is false (default: True) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with indexed WHEN validating settings THEN boolean value should be accepted"
                      ]
                    }
                  },
                  "required": ["id", "name", "type"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Created At Field is immutable after creation to ensure data integrity and prevent accidental corruption"
                  ]
                },
                {
                  "title": "Updated At Field",
                  "description": "Automatically updated timestamp whenever record is modified. Read-only field that updates to current server time on every save operation. Always uses UTC. Automatically indexed for sorting by recency. Useful for audit trails, showing last modification time, and detecting stale data. Displays as formatted datetime in UI.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/definitions/id",
                      "x-user-stories": [
                        "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                        "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                        "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                      ]
                    },
                    "name": {
                      "$ref": "#/definitions/name",
                      "x-user-stories": [
                        "GIVEN new field is created WHEN saving configuration THEN field name should follow database naming conventions",
                        "GIVEN field with duplicate name WHEN validating table schema THEN error should prevent conflicts",
                        "GIVEN field name is set WHEN querying data THEN field should be accessible by its name"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "const": "updated-at",
                      "x-business-rules": [
                        "Fixed value (updated-at) identifies this specific root.properties.tables.items.properties.fields.items.anyOf.14.properties.type type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with type='updated-at' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "indexed": {
                      "type": "boolean",
                      "default": true,
                      "x-business-rules": [
                        "Defaults to true when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN indexed is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN indexed is false (default: True) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with indexed WHEN validating settings THEN boolean value should be accepted"
                      ]
                    }
                  },
                  "required": ["id", "name", "type"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Updated At Field is immutable after creation to ensure data integrity and prevent accidental corruption"
                  ]
                },
                {
                  "title": "Created By Field",
                  "description": "Automatically set reference to the user who created the record. Read-only field that links to user account. Set only once when record is created and never changes. Automatically indexed for filtering by creator. Useful for audit trails, ownership tracking, and permissions. Displays user profile information (name, avatar) in UI.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/definitions/id",
                      "x-user-stories": [
                        "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                        "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                        "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                      ]
                    },
                    "name": {
                      "$ref": "#/definitions/name",
                      "x-user-stories": [
                        "GIVEN new field is created WHEN saving configuration THEN field name should follow database naming conventions",
                        "GIVEN field with duplicate name WHEN validating table schema THEN error should prevent conflicts",
                        "GIVEN field name is set WHEN querying data THEN field should be accessible by its name"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "const": "created-by",
                      "x-business-rules": [
                        "Fixed value (created-by) identifies this specific root.properties.tables.items.properties.fields.items.anyOf.15.properties.type type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with type='created-by' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "indexed": {
                      "type": "boolean",
                      "default": true,
                      "x-business-rules": [
                        "Defaults to true when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN indexed is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN indexed is false (default: True) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with indexed WHEN validating settings THEN boolean value should be accepted"
                      ]
                    }
                  },
                  "required": ["id", "name", "type"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Created By Field is immutable after creation to ensure data integrity and prevent accidental corruption"
                  ]
                },
                {
                  "title": "Updated By Field",
                  "description": "Automatically updated reference to the user who last modified the record. Read-only field that links to user account. Updates on every save operation to current user. Automatically indexed for filtering by editor. Useful for audit trails, tracking who made recent changes, and collaboration history. Displays user profile information in UI.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/definitions/id",
                      "x-user-stories": [
                        "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                        "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                        "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                      ]
                    },
                    "name": {
                      "$ref": "#/definitions/name",
                      "x-user-stories": [
                        "GIVEN new field is created WHEN saving configuration THEN field name should follow database naming conventions",
                        "GIVEN field with duplicate name WHEN validating table schema THEN error should prevent conflicts",
                        "GIVEN field name is set WHEN querying data THEN field should be accessible by its name"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "const": "updated-by",
                      "x-business-rules": [
                        "Fixed value (updated-by) identifies this specific root.properties.tables.items.properties.fields.items.anyOf.16.properties.type type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with type='updated-by' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "indexed": {
                      "type": "boolean",
                      "default": true,
                      "x-business-rules": [
                        "Defaults to true when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN indexed is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN indexed is false (default: True) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with indexed WHEN validating settings THEN boolean value should be accepted"
                      ]
                    }
                  },
                  "required": ["id", "name", "type"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Updated By Field is immutable after creation to ensure data integrity and prevent accidental corruption"
                  ]
                },
                {
                  "title": "Rating Field",
                  "description": "Star/icon rating field for user feedback and scoring. Configure maxRating (typically 5 or 10), display icon (star, heart, thumbs-up), and whether to allow half-ratings. Stores numeric value (1 to maxRating). Useful for product reviews, satisfaction scores, priority levels, and quality assessments. Displays as interactive icon picker in forms and static icons in tables.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/definitions/id",
                      "x-user-stories": [
                        "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                        "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                        "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                      ]
                    },
                    "name": {
                      "$ref": "#/definitions/name",
                      "x-user-stories": [
                        "GIVEN new field is created WHEN saving configuration THEN field name should follow database naming conventions",
                        "GIVEN field with duplicate name WHEN validating table schema THEN error should prevent conflicts",
                        "GIVEN field name is set WHEN querying data THEN field should be accessible by its name"
                      ]
                    },
                    "required": {
                      "type": "boolean",
                      "default": false,
                      "x-business-rules": [
                        "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN required is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN required is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with required WHEN validating settings THEN boolean value should be accepted"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "const": "rating",
                      "x-business-rules": [
                        "Fixed value (rating) identifies this specific root.properties.tables.items.properties.fields.items.anyOf.17.properties.type type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with type='rating' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "max": {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 10,
                      "default": 5,
                      "description": "Maximum rating value",
                      "x-business-rules": [
                        "Numeric range (1-10) prevents overflow errors and ensures values stay within valid business bounds",
                        "Defaults to 5 when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN user provides max between 1 and 10 WHEN validating input THEN value should be accepted",
                        "GIVEN user provides max below 1 WHEN validating input THEN error should enforce minimum value",
                        "GIVEN user provides max above 10 WHEN validating input THEN error should enforce maximum value"
                      ]
                    },
                    "style": {
                      "type": "string",
                      "enum": ["star", "number", "heart"],
                      "default": "star",
                      "description": "Visual style for the rating",
                      "x-business-rules": [
                        "Restricted to 3 allowed values (star, number, heart) to maintain type safety and enable clear validation error messages",
                        "Defaults to \"star\" when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN user selects style from valid options WHEN validating input THEN selection should be accepted",
                        "GIVEN user provides invalid style value WHEN validating input THEN error should list valid options: star, number, heart",
                        "GIVEN style is set to any valid enum value WHEN processing entity THEN appropriate behavior should execute"
                      ]
                    }
                  },
                  "required": ["id", "name", "type"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related rating field properties for better organization and type-safe access"
                  ]
                },
                {
                  "title": "Duration Field",
                  "description": "Time duration in hours, minutes, and seconds",
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/definitions/id",
                      "x-user-stories": [
                        "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                        "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                        "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                      ]
                    },
                    "name": {
                      "$ref": "#/definitions/name",
                      "x-user-stories": [
                        "GIVEN new field is created WHEN saving configuration THEN field name should follow database naming conventions",
                        "GIVEN field with duplicate name WHEN validating table schema THEN error should prevent conflicts",
                        "GIVEN field name is set WHEN querying data THEN field should be accessible by its name"
                      ]
                    },
                    "required": {
                      "type": "boolean",
                      "default": false,
                      "x-business-rules": [
                        "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN required is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN required is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with required WHEN validating settings THEN boolean value should be accepted"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "const": "duration",
                      "x-business-rules": [
                        "Fixed value (duration) identifies this specific root.properties.tables.items.properties.fields.items.anyOf.18.properties.type type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with type='duration' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "format": {
                      "type": "string",
                      "enum": ["h:mm", "h:mm:ss", "minutes", "seconds"],
                      "default": "h:mm:ss",
                      "description": "Display format for the duration",
                      "x-business-rules": [
                        "Restricted to 4 allowed values (h:mm, h:mm:ss, minutes, ...) to maintain type safety and enable clear validation error messages",
                        "Defaults to \"h:mm:ss\" when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN user selects format from valid options WHEN validating input THEN selection should be accepted",
                        "GIVEN user provides invalid format value WHEN validating input THEN error should list valid options: h:mm, h:mm:ss, minutes",
                        "GIVEN format is set to any valid enum value WHEN processing entity THEN appropriate behavior should execute"
                      ]
                    }
                  },
                  "required": ["id", "name", "type"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related duration field properties for better organization and type-safe access"
                  ]
                },
                {
                  "title": "Rich Text Field",
                  "description": "Formatted text with markdown support",
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/definitions/id",
                      "x-user-stories": [
                        "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                        "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                        "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                      ]
                    },
                    "name": {
                      "$ref": "#/definitions/name",
                      "x-user-stories": [
                        "GIVEN new field is created WHEN saving configuration THEN field name should follow database naming conventions",
                        "GIVEN field with duplicate name WHEN validating table schema THEN error should prevent conflicts",
                        "GIVEN field name is set WHEN querying data THEN field should be accessible by its name"
                      ]
                    },
                    "required": {
                      "type": "boolean",
                      "default": false,
                      "x-business-rules": [
                        "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN required is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN required is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with required WHEN validating settings THEN boolean value should be accepted"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "const": "rich-text",
                      "x-business-rules": [
                        "Fixed value (rich-text) identifies this specific root.properties.tables.items.properties.fields.items.anyOf.19.properties.type type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with type='rich-text' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "maxLength": {
                      "type": "integer",
                      "minimum": 1,
                      "description": "Maximum length in characters",
                      "x-business-rules": ["Maximum length in characters"],
                      "x-user-stories": [
                        "GIVEN user provides maxLength >= 1 WHEN validating input THEN value should be accepted",
                        "GIVEN user provides maxLength < 1 WHEN validating input THEN error should enforce minimum value"
                      ]
                    }
                  },
                  "required": ["id", "name", "type"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related rich text field properties for better organization and type-safe access"
                  ]
                },
                {
                  "title": "Status Field",
                  "description": "Workflow status with customizable options and colors",
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/definitions/id",
                      "x-user-stories": [
                        "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                        "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                        "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                      ]
                    },
                    "name": {
                      "$ref": "#/definitions/name",
                      "x-user-stories": [
                        "GIVEN new field is created WHEN saving configuration THEN field name should follow database naming conventions",
                        "GIVEN field with duplicate name WHEN validating table schema THEN error should prevent conflicts",
                        "GIVEN field name is set WHEN querying data THEN field should be accessible by its name"
                      ]
                    },
                    "required": {
                      "type": "boolean",
                      "default": false,
                      "x-business-rules": [
                        "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN required is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN required is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with required WHEN validating settings THEN boolean value should be accepted"
                      ]
                    },
                    "indexed": {
                      "type": "boolean",
                      "default": true,
                      "x-business-rules": [
                        "Defaults to true when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN indexed is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN indexed is false (default: True) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with indexed WHEN validating settings THEN boolean value should be accepted"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "const": "status",
                      "x-business-rules": [
                        "Fixed value (status) identifies this specific root.properties.tables.items.properties.fields.items.anyOf.20.properties.type type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with type='status' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "options": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "minLength": 1,
                            "x-user-stories": [
                              "GIVEN user provides value with at least 1 characters WHEN validating input THEN value should be accepted",
                              "GIVEN user provides value shorter than 1 chars WHEN validating input THEN error should require minimum length"
                            ]
                          },
                          "color": {
                            "type": "string",
                            "pattern": "^#[0-9a-fA-F]{6}$",
                            "description": "Hex color code for the status",
                            "x-business-rules": [
                              "Pattern constraint enforces data format consistency and error prevention, rejecting invalid formats before they cause system errors"
                            ],
                            "x-user-stories": [
                              "GIVEN user provides color matching pattern WHEN validating input THEN value should be accepted",
                              "GIVEN user provides color not matching pattern WHEN validating input THEN clear error message should explain format requirement",
                              "GIVEN color is stored WHEN retrieved later THEN original format should be preserved"
                            ]
                          }
                        },
                        "required": ["value"],
                        "x-business-rules": [
                          "Object structure groups related items properties for better organization and type-safe access"
                        ]
                      },
                      "minItems": 1,
                      "x-business-rules": [
                        "Array enables multiple options to be configured, supporting flexible workflows and batch operations"
                      ],
                      "x-user-stories": [
                        "GIVEN user provides options with at least 1 items WHEN validating input THEN array should be accepted",
                        "GIVEN user provides options with fewer than 1 items WHEN validating input THEN error should enforce minimum items"
                      ]
                    },
                    "default": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides default WHEN validating input THEN string value should be accepted",
                        "GIVEN default is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    }
                  },
                  "required": ["id", "name", "type", "options"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related status field properties for better organization and type-safe access"
                  ]
                },
                {
                  "title": "Button Field",
                  "description": "Trigger actions or open URLs",
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/definitions/id",
                      "x-user-stories": [
                        "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                        "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                        "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                      ]
                    },
                    "name": {
                      "$ref": "#/definitions/name",
                      "x-user-stories": [
                        "GIVEN new field is created WHEN saving configuration THEN field name should follow database naming conventions",
                        "GIVEN field with duplicate name WHEN validating table schema THEN error should prevent conflicts",
                        "GIVEN field name is set WHEN querying data THEN field should be accessible by its name"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "const": "button",
                      "x-business-rules": [
                        "Fixed value (button) identifies this specific root.properties.tables.items.properties.fields.items.anyOf.21.properties.type type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with type='button' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "label": {
                      "type": "string",
                      "description": "Button text label",
                      "minLength": 1,
                      "x-user-stories": [
                        "GIVEN user provides label with at least 1 characters WHEN validating input THEN value should be accepted",
                        "GIVEN user provides label shorter than 1 chars WHEN validating input THEN error should require minimum length"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "enum": ["url", "automation"],
                      "description": "Type of action to trigger",
                      "x-business-rules": [
                        "Restricted to 2 allowed values (url, automation) to maintain type safety and enable clear validation error messages"
                      ],
                      "x-user-stories": [
                        "GIVEN user selects action from valid options WHEN validating input THEN selection should be accepted",
                        "GIVEN user provides invalid action value WHEN validating input THEN error should list valid options: url, automation",
                        "GIVEN action is set to any valid enum value WHEN processing entity THEN appropriate behavior should execute"
                      ]
                    },
                    "url": {
                      "type": "string",
                      "description": "URL to open (when action is 'url')",
                      "x-business-rules": ["URL to open (when action is 'url')"],
                      "x-user-stories": [
                        "GIVEN user provides url WHEN validating input THEN string value should be accepted",
                        "GIVEN url is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "automation": {
                      "type": "string",
                      "description": "Automation name to trigger (when action is 'automation')",
                      "x-business-rules": [
                        "Automation name to trigger (when action is 'automation')"
                      ],
                      "x-user-stories": [
                        "GIVEN user provides automation WHEN validating input THEN string value should be accepted",
                        "GIVEN automation is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    }
                  },
                  "required": ["id", "name", "type", "label", "action"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related button field properties for better organization and type-safe access"
                  ]
                },
                {
                  "title": "Autonumber Field",
                  "description": "Auto-incrementing unique number (read-only)",
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/definitions/id",
                      "x-user-stories": [
                        "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                        "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                        "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                      ]
                    },
                    "name": {
                      "$ref": "#/definitions/name",
                      "x-user-stories": [
                        "GIVEN new field is created WHEN saving configuration THEN field name should follow database naming conventions",
                        "GIVEN field with duplicate name WHEN validating table schema THEN error should prevent conflicts",
                        "GIVEN field name is set WHEN querying data THEN field should be accessible by its name"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "const": "autonumber",
                      "x-business-rules": [
                        "Fixed value (autonumber) identifies this specific root.properties.tables.items.properties.fields.items.anyOf.22.properties.type type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with type='autonumber' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "prefix": {
                      "type": "string",
                      "description": "Optional prefix for the autonumber",
                      "examples": ["INV-", "ORD-", ""],
                      "x-business-rules": ["Optional prefix for the autonumber"],
                      "x-user-stories": [
                        "GIVEN user provides prefix WHEN validating input THEN string value should be accepted",
                        "GIVEN prefix is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "startFrom": {
                      "type": "integer",
                      "minimum": 1,
                      "default": 1,
                      "description": "Starting number",
                      "x-business-rules": [
                        "Defaults to 1 when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN user provides startFrom >= 1 WHEN validating input THEN value should be accepted",
                        "GIVEN user provides startFrom < 1 WHEN validating input THEN error should enforce minimum value"
                      ]
                    },
                    "digits": {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 10,
                      "default": 3,
                      "description": "Number of digits with zero padding",
                      "x-business-rules": [
                        "Numeric range (1-10) prevents overflow errors and ensures values stay within valid business bounds",
                        "Defaults to 3 when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN user provides digits between 1 and 10 WHEN validating input THEN value should be accepted",
                        "GIVEN user provides digits below 1 WHEN validating input THEN error should enforce minimum value",
                        "GIVEN user provides digits above 10 WHEN validating input THEN error should enforce maximum value"
                      ]
                    }
                  },
                  "required": ["id", "name", "type"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Autonumber Field is immutable after creation to ensure data integrity and prevent accidental corruption",
                    "Uniqueness constraint prevents conflicts and ensures each autonumber field can be unambiguously referenced"
                  ]
                },
                {
                  "title": "Barcode Field",
                  "description": "Display and scan barcodes",
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/definitions/id",
                      "x-user-stories": [
                        "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                        "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                        "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                      ]
                    },
                    "name": {
                      "$ref": "#/definitions/name",
                      "x-user-stories": [
                        "GIVEN new field is created WHEN saving configuration THEN field name should follow database naming conventions",
                        "GIVEN field with duplicate name WHEN validating table schema THEN error should prevent conflicts",
                        "GIVEN field name is set WHEN querying data THEN field should be accessible by its name"
                      ]
                    },
                    "required": {
                      "type": "boolean",
                      "default": false,
                      "x-business-rules": [
                        "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN required is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN required is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with required WHEN validating settings THEN boolean value should be accepted"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "const": "barcode",
                      "x-business-rules": [
                        "Fixed value (barcode) identifies this specific root.properties.tables.items.properties.fields.items.anyOf.23.properties.type type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with type='barcode' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "format": {
                      "type": "string",
                      "enum": ["qr", "ean13", "code128", "code39"],
                      "default": "qr",
                      "description": "Barcode format",
                      "x-business-rules": [
                        "Restricted to 4 allowed values (qr, ean13, code128, ...) to maintain type safety and enable clear validation error messages",
                        "Defaults to \"qr\" when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN user selects format from valid options WHEN validating input THEN selection should be accepted",
                        "GIVEN user provides invalid format value WHEN validating input THEN error should list valid options: qr, ean13, code128",
                        "GIVEN format is set to any valid enum value WHEN processing entity THEN appropriate behavior should execute"
                      ]
                    }
                  },
                  "required": ["id", "name", "type"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related barcode field properties for better organization and type-safe access"
                  ]
                },
                {
                  "title": "Progress Field",
                  "description": "Visual progress bar (0-100%)",
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/definitions/id",
                      "x-user-stories": [
                        "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                        "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                        "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                      ]
                    },
                    "name": {
                      "$ref": "#/definitions/name",
                      "x-user-stories": [
                        "GIVEN new field is created WHEN saving configuration THEN field name should follow database naming conventions",
                        "GIVEN field with duplicate name WHEN validating table schema THEN error should prevent conflicts",
                        "GIVEN field name is set WHEN querying data THEN field should be accessible by its name"
                      ]
                    },
                    "required": {
                      "type": "boolean",
                      "default": false,
                      "x-business-rules": [
                        "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN required is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN required is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with required WHEN validating settings THEN boolean value should be accepted"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "const": "progress",
                      "x-business-rules": [
                        "Fixed value (progress) identifies this specific root.properties.tables.items.properties.fields.items.anyOf.24.properties.type type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with type='progress' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "color": {
                      "type": "string",
                      "pattern": "^#[0-9a-fA-F]{6}$",
                      "description": "Color of the progress bar",
                      "x-business-rules": [
                        "Pattern constraint enforces data format consistency and error prevention, rejecting invalid formats before they cause system errors"
                      ],
                      "x-user-stories": [
                        "GIVEN user provides color matching pattern WHEN validating input THEN value should be accepted",
                        "GIVEN user provides color not matching pattern WHEN validating input THEN clear error message should explain format requirement",
                        "GIVEN color is stored WHEN retrieved later THEN original format should be preserved"
                      ]
                    }
                  },
                  "required": ["id", "name", "type"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related progress field properties for better organization and type-safe access"
                  ]
                },
                {
                  "title": "Color Field",
                  "description": "Color picker for hex colors",
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/definitions/id",
                      "x-user-stories": [
                        "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                        "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                        "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                      ]
                    },
                    "name": {
                      "$ref": "#/definitions/name",
                      "x-user-stories": [
                        "GIVEN new field is created WHEN saving configuration THEN field name should follow database naming conventions",
                        "GIVEN field with duplicate name WHEN validating table schema THEN error should prevent conflicts",
                        "GIVEN field name is set WHEN querying data THEN field should be accessible by its name"
                      ]
                    },
                    "required": {
                      "type": "boolean",
                      "default": false,
                      "x-business-rules": [
                        "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN required is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN required is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with required WHEN validating settings THEN boolean value should be accepted"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "const": "color",
                      "x-business-rules": [
                        "Fixed value (color) identifies this specific root.properties.tables.items.properties.fields.items.anyOf.25.properties.type type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with type='color' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "default": {
                      "type": "string",
                      "pattern": "^#[0-9a-fA-F]{6}$",
                      "x-business-rules": [
                        "Pattern constraint enforces data format consistency and error prevention, rejecting invalid formats before they cause system errors"
                      ],
                      "x-user-stories": [
                        "GIVEN user provides default matching pattern WHEN validating input THEN value should be accepted",
                        "GIVEN user provides default not matching pattern WHEN validating input THEN clear error message should explain format requirement",
                        "GIVEN default is stored WHEN retrieved later THEN original format should be preserved"
                      ]
                    }
                  },
                  "required": ["id", "name", "type"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related color field properties for better organization and type-safe access"
                  ]
                },
                {
                  "title": "Geolocation Field",
                  "description": "Geographic coordinates (latitude/longitude)",
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/definitions/id",
                      "x-user-stories": [
                        "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                        "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                        "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                      ]
                    },
                    "name": {
                      "$ref": "#/definitions/name",
                      "x-user-stories": [
                        "GIVEN new field is created WHEN saving configuration THEN field name should follow database naming conventions",
                        "GIVEN field with duplicate name WHEN validating table schema THEN error should prevent conflicts",
                        "GIVEN field name is set WHEN querying data THEN field should be accessible by its name"
                      ]
                    },
                    "required": {
                      "type": "boolean",
                      "default": false,
                      "x-business-rules": [
                        "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN required is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN required is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with required WHEN validating settings THEN boolean value should be accepted"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "const": "geolocation",
                      "x-business-rules": [
                        "Fixed value (geolocation) identifies this specific root.properties.tables.items.properties.fields.items.anyOf.26.properties.type type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with type='geolocation' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    }
                  },
                  "required": ["id", "name", "type"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related geolocation field properties for better organization and type-safe access"
                  ]
                },
                {
                  "title": "JSON Field",
                  "description": "Flexible JSON field for storing structured data objects. Accepts any valid JSON (objects, arrays, primitives). Optionally provide a JSON Schema for validation to enforce structure and types. Useful for storing configuration objects, API responses, flexible attributes, and dynamic data that doesn't fit rigid schema. Displays with syntax highlighting and formatting in UI. Can be queried using JSON path expressions.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/definitions/id",
                      "x-user-stories": [
                        "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                        "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                        "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                      ]
                    },
                    "name": {
                      "$ref": "#/definitions/name",
                      "x-user-stories": [
                        "GIVEN new field is created WHEN saving configuration THEN field name should follow database naming conventions",
                        "GIVEN field with duplicate name WHEN validating table schema THEN error should prevent conflicts",
                        "GIVEN field name is set WHEN querying data THEN field should be accessible by its name"
                      ]
                    },
                    "required": {
                      "type": "boolean",
                      "default": false,
                      "x-business-rules": [
                        "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN required is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN required is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with required WHEN validating settings THEN boolean value should be accepted"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "const": "json",
                      "x-business-rules": [
                        "Fixed value (json) identifies this specific root.properties.tables.items.properties.fields.items.anyOf.27.properties.type type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with type='json' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "schema": {
                      "type": "object",
                      "description": "Optional JSON Schema to validate the data",
                      "x-business-rules": [
                        "Object structure groups related schema properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures schema WHEN validating input THEN value should meet schema requirements",
                        "GIVEN schema is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["id", "name", "type"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related json field properties for better organization and type-safe access"
                  ]
                },
                {
                  "title": "Array Field",
                  "description": "List of values (tags, keywords)",
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/definitions/id",
                      "x-user-stories": [
                        "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                        "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                        "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                      ]
                    },
                    "name": {
                      "$ref": "#/definitions/name",
                      "x-user-stories": [
                        "GIVEN new field is created WHEN saving configuration THEN field name should follow database naming conventions",
                        "GIVEN field with duplicate name WHEN validating table schema THEN error should prevent conflicts",
                        "GIVEN field name is set WHEN querying data THEN field should be accessible by its name"
                      ]
                    },
                    "required": {
                      "type": "boolean",
                      "default": false,
                      "x-business-rules": [
                        "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN required is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN required is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with required WHEN validating settings THEN boolean value should be accepted"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "const": "array",
                      "x-business-rules": [
                        "Fixed value (array) identifies this specific root.properties.tables.items.properties.fields.items.anyOf.28.properties.type type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with type='array' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "itemType": {
                      "type": "string",
                      "enum": ["text", "number"],
                      "default": "text",
                      "description": "Type of items in the array",
                      "x-business-rules": [
                        "Restricted to 2 allowed values (text, number) to maintain type safety and enable clear validation error messages",
                        "Defaults to \"text\" when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN user selects itemType from valid options WHEN validating input THEN selection should be accepted",
                        "GIVEN user provides invalid itemType value WHEN validating input THEN error should list valid options: text, number",
                        "GIVEN itemType is set to any valid enum value WHEN processing entity THEN appropriate behavior should execute"
                      ]
                    },
                    "maxItems": {
                      "type": "integer",
                      "minimum": 1,
                      "description": "Maximum number of items allowed",
                      "x-business-rules": ["Maximum number of items allowed"],
                      "x-user-stories": [
                        "GIVEN user provides maxItems >= 1 WHEN validating input THEN value should be accepted",
                        "GIVEN user provides maxItems < 1 WHEN validating input THEN error should enforce minimum value"
                      ]
                    }
                  },
                  "required": ["id", "name", "type"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related array field properties for better organization and type-safe access"
                  ]
                }
              ]
            },
            "x-business-rules": [
              "Defaults to [] when not specified, providing sensible fallback behavior without requiring explicit configuration"
            ],
            "x-user-stories": [
              "GIVEN user provides fields with at least 1 items WHEN validating input THEN array should be accepted",
              "GIVEN user provides fields with fewer than 1 items WHEN validating input THEN error should enforce minimum items"
            ]
          },
          "primaryKey": {
            "description": "Primary key configuration for the table. The primary key uniquely identifies each row and is automatically indexed.",
            "title": "Primary Key",
            "type": "object",
            "examples": [
              {
                "type": "auto-increment",
                "field": "id"
              },
              {
                "type": "uuid",
                "field": "id"
              },
              {
                "type": "composite",
                "fields": ["tenant_id", "user_id"]
              }
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["auto-increment", "uuid", "composite"],
                "default": "auto-increment",
                "description": "Primary key generation strategy. 'auto-increment' uses sequential integers (1, 2, 3...), 'uuid' generates random unique identifiers, 'composite' uses multiple fields together.",
                "x-business-rules": [
                  "Uniqueness constraint prevents conflicts and ensures each type can be unambiguously referenced",
                  "Restricted to 3 allowed values (auto-increment, uuid, composite) to maintain type safety and enable clear validation error messages",
                  "Defaults to \"auto-increment\" when not specified, providing sensible fallback behavior without requiring explicit configuration"
                ],
                "x-user-stories": [
                  "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                  "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                  "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                ]
              },
              "field": {
                "type": "string",
                "description": "Field name for single-column primary key. Only used with 'auto-increment' or 'uuid' type.",
                "default": "id",
                "pattern": "^[a-z][a-z0-9_]*$",
                "examples": ["id", "user_id", "product_id"],
                "x-business-rules": [
                  "Pattern constraint enforces data format consistency and error prevention, rejecting invalid formats before they cause system errors",
                  "Defaults to \"id\" when not specified, providing sensible fallback behavior without requiring explicit configuration"
                ],
                "x-user-stories": [
                  "GIVEN user provides field matching pattern WHEN validating input THEN value should be accepted",
                  "GIVEN user provides field not matching pattern WHEN validating input THEN clear error message should explain format requirement",
                  "GIVEN field is stored WHEN retrieved later THEN original format should be preserved"
                ]
              },
              "fields": {
                "type": "array",
                "items": {
                  "type": "string",
                  "minLength": 1
                },
                "description": "Field names for composite primary key. Only used when type is 'composite'. The combination of these fields must be unique.",
                "minItems": 2,
                "examples": [
                  ["tenant_id", "user_id"],
                  ["order_id", "product_id"]
                ],
                "x-business-rules": [
                  "Uniqueness constraint prevents conflicts and ensures each fields can be unambiguously referenced"
                ],
                "x-user-stories": [
                  "GIVEN user provides fields with at least 2 items WHEN validating input THEN array should be accepted",
                  "GIVEN user provides fields with fewer than 2 items WHEN validating input THEN error should enforce minimum items"
                ]
              }
            },
            "required": ["type"],
            "additionalProperties": false,
            "x-business-rules": [
              "Uniqueness constraint prevents conflicts and ensures each primary key can be unambiguously referenced"
            ],
            "x-user-stories": [
              "GIVEN user configures primaryKey WHEN validating input THEN value should meet schema requirements",
              "GIVEN primaryKey is set WHEN processing configuration THEN value should be used correctly"
            ]
          },
          "uniqueConstraints": {
            "description": "Composite unique constraints ensure that combinations of multiple field values are unique across all rows. Use this when you need uniqueness across multiple fields (e.g., email + tenant_id must be unique together).",
            "title": "Unique Constraints",
            "type": "array",
            "default": [],
            "examples": [
              [
                {
                  "name": "uq_user_email_tenant",
                  "fields": ["email", "tenant_id"]
                },
                {
                  "name": "uq_product_sku_variant",
                  "fields": ["sku", "variant_id"]
                }
              ]
            ],
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the unique constraint. Use descriptive names like 'uq_tablename_field1_field2'",
                  "minLength": 1,
                  "pattern": "^[a-z][a-z0-9_]*$",
                  "examples": [
                    "uq_users_email_tenant",
                    "uq_products_sku_variant",
                    "uq_orders_number_year"
                  ],
                  "x-business-rules": [
                    "Uniqueness constraint prevents conflicts and ensures each name can be unambiguously referenced",
                    "Pattern constraint enforces data format consistency and error prevention, rejecting invalid formats before they cause system errors"
                  ],
                  "x-user-stories": [
                    "GIVEN user provides name matching pattern WHEN validating input THEN value should be accepted",
                    "GIVEN user provides name not matching pattern WHEN validating input THEN clear error message should explain format requirement",
                    "GIVEN name is stored WHEN retrieved later THEN original format should be preserved"
                  ]
                },
                "fields": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "minLength": 1
                  },
                  "description": "Field names that must be unique together. The combination of values in these fields must be unique across all rows.",
                  "minItems": 2,
                  "examples": [
                    ["email", "tenant_id"],
                    ["first_name", "last_name", "birth_date"]
                  ],
                  "x-business-rules": [
                    "Uniqueness constraint prevents conflicts and ensures each fields can be unambiguously referenced"
                  ],
                  "x-user-stories": [
                    "GIVEN user provides fields with at least 2 items WHEN validating input THEN array should be accepted",
                    "GIVEN user provides fields with fewer than 2 items WHEN validating input THEN error should enforce minimum items"
                  ]
                }
              },
              "required": ["name", "fields"],
              "additionalProperties": false,
              "x-business-rules": [
                "Object structure groups related items properties for better organization and type-safe access"
              ]
            },
            "x-business-rules": [
              "Uniqueness constraint prevents conflicts and ensures each unique constraints can be unambiguously referenced",
              "Defaults to [] when not specified, providing sensible fallback behavior without requiring explicit configuration"
            ],
            "x-user-stories": [
              "GIVEN user provides uniqueConstraints array WHEN validating input THEN items should be processed in order",
              "GIVEN uniqueConstraints array is empty WHEN validating input THEN behavior should follow optional/required rules"
            ]
          },
          "indexes": {
            "description": "Custom database indexes for query optimization. Indexes improve query performance by creating efficient lookup structures for specified fields.",
            "title": "Database Indexes",
            "type": "array",
            "default": [],
            "examples": [
              [
                {
                  "name": "idx_user_email",
                  "fields": ["email"]
                },
                {
                  "name": "idx_user_created",
                  "fields": ["created_at"],
                  "unique": false
                }
              ]
            ],
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the index. Use descriptive names like 'idx_tablename_fieldname'",
                  "minLength": 1,
                  "pattern": "^[a-z][a-z0-9_]*$",
                  "examples": ["idx_users_email", "idx_products_sku", "idx_orders_status"],
                  "x-business-rules": [
                    "Pattern constraint enforces data format consistency and error prevention, rejecting invalid formats before they cause system errors"
                  ],
                  "x-user-stories": [
                    "GIVEN user provides name matching pattern WHEN validating input THEN value should be accepted",
                    "GIVEN user provides name not matching pattern WHEN validating input THEN clear error message should explain format requirement",
                    "GIVEN name is stored WHEN retrieved later THEN original format should be preserved"
                  ]
                },
                "fields": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "minLength": 1
                  },
                  "description": "Field names to include in the index. Order matters for multi-column indexes.",
                  "minItems": 1,
                  "examples": [["email"], ["first_name", "last_name"], ["status", "created_at"]],
                  "x-business-rules": [
                    "Array enables multiple fields to be configured, supporting flexible workflows and batch operations"
                  ],
                  "x-user-stories": [
                    "GIVEN user provides fields with at least 1 items WHEN validating input THEN array should be accepted",
                    "GIVEN user provides fields with fewer than 1 items WHEN validating input THEN error should enforce minimum items"
                  ]
                },
                "unique": {
                  "type": "boolean",
                  "default": false,
                  "description": "Whether this index enforces uniqueness. Use this for unique constraints across multiple fields.",
                  "x-business-rules": [
                    "Uniqueness constraint prevents conflicts and ensures each unique can be unambiguously referenced",
                    "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
                  ],
                  "x-user-stories": [
                    "GIVEN unique is true WHEN processing entity THEN corresponding behavior should be enforced",
                    "GIVEN unique is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                    "GIVEN configuration with unique WHEN validating settings THEN boolean value should be accepted"
                  ]
                }
              },
              "required": ["name", "fields"],
              "additionalProperties": false,
              "x-business-rules": [
                "Object structure groups related items properties for better organization and type-safe access"
              ]
            },
            "x-business-rules": [
              "Defaults to [] when not specified, providing sensible fallback behavior without requiring explicit configuration"
            ],
            "x-user-stories": [
              "GIVEN user provides indexes array WHEN validating input THEN items should be processed in order",
              "GIVEN indexes array is empty WHEN validating input THEN behavior should follow optional/required rules"
            ]
          }
        },
        "required": ["id", "name", "fields"],
        "additionalProperties": false,
        "x-business-rules": [
          "Object structure groups related data table properties for better organization and type-safe access"
        ]
      },
      "x-user-stories": [
        "GIVEN the application is running WHEN I return the admin tables page THEN it should work correctly",
        "GIVEN the application is running WHEN I list tables THEN it should work correctly",
        "GIVEN the application is running WHEN I list table records THEN it should work correctly",
        "GIVEN the application is running WHEN I search table records THEN it should work correctly",
        "GIVEN the application is running WHEN I open and display a table record THEN it should work correctly",
        "GIVEN the application is running WHEN I create a table record THEN it should work correctly",
        "GIVEN I am working with required fields WHEN I create a table record THEN it should complete successfully",
        "GIVEN the application is running WHEN I update a table record THEN it should work correctly",
        "GIVEN the application is running WHEN I delete a table record THEN it should work correctly",
        "GIVEN I am working with missing required fields WHEN I not create a record from a POST request THEN it should complete successfully",
        "GIVEN the application is running WHEN I create a record from a POST request THEN it should work correctly",
        "GIVEN I am working with missing required fields WHEN I not create multiple records from a POST request THEN it should complete successfully",
        "GIVEN the application is running WHEN I create multiple records from a POST request THEN it should work correctly",
        "GIVEN the application is running WHEN I read a record from a GET request THEN it should work correctly",
        "GIVEN the application is running WHEN I list records from a GET request THEN it should work correctly",
        "GIVEN the application is running WHEN I update a record from a PATCH request THEN it should work correctly",
        "GIVEN the application is running WHEN I update multiple records from a PATCH request THEN it should work correctly",
        "GIVEN the application is running WHEN I delete a record from a DELETE request THEN it should work correctly",
        "GIVEN the application is running WHEN I delete multiple records from a DELETE request THEN it should work correctly"
      ],
      "x-business-rules": [
        "Defaults to [] when not specified, providing sensible fallback behavior without requiring explicit configuration"
      ]
    },
    "pages": {
      "description": "User interface pages and views that users interact with. Pages can display data from tables (table-view, detail-view), collect input through forms (form), or render custom HTML content. Each page has a unique URL path, navigation visibility settings, and configurable layouts. Pages connect your data model to the user experience.",
      "title": "Pages",
      "minItems": 1,
      "default": [],
      "type": "array",
      "items": {
        "title": "Page",
        "description": "A page in your application",
        "version": "0.81.0",
        "anyOf": [
          {
            "title": "Custom HTML Page",
            "description": "Fully custom page with HTML, CSS, and JavaScript. Provides complete control over layout, styling, and interactivity. Use template variables {{field_name}} to inject dynamic data from tables. Supports embedded scripts for client-side logic. Useful for landing pages, dashboards, reports, and unique layouts that cannot be achieved with standard page types.",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "const": "custom-html",
                "x-business-rules": [
                  "Fixed value (custom-html) identifies this specific root.properties.pages.items.anyOf.0.properties.type type in discriminated unions and routing logic"
                ],
                "x-user-stories": [
                  "GIVEN entity with type='custom-html' WHEN processing configuration THEN correct handler should be selected",
                  "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                ]
              },
              "name": {
                "$ref": "#/definitions/name",
                "title": "Page Name",
                "description": "Internal name for the page",
                "placeholder": "Enter page name",
                "examples": ["home", "about", "contact"],
                "help": "Unique identifier for the page",
                "x-user-stories": [
                  "GIVEN user configures name WHEN validating input THEN value should meet schema requirements",
                  "GIVEN name is set WHEN processing configuration THEN value should be used correctly"
                ]
              },
              "path": {
                "$ref": "#/definitions/path",
                "title": "Page Path",
                "description": "URL path where the page is accessible",
                "placeholder": "/about",
                "examples": ["/", "/about", "/contact"],
                "help": "Must start with / and use lowercase letters, numbers, hyphens",
                "x-user-stories": [
                  "GIVEN user configures path WHEN validating input THEN value should meet schema requirements",
                  "GIVEN path is set WHEN processing configuration THEN value should be used correctly"
                ]
              },
              "head": {
                "description": "List of head elements (meta tags, scripts, styles, links)",
                "title": "Head Elements",
                "minItems": 0,
                "default": [],
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "title": "Meta Element",
                      "description": "Meta tag for page metadata",
                      "type": "object",
                      "properties": {
                        "tag": {
                          "type": "string",
                          "const": "meta",
                          "x-business-rules": [
                            "Fixed value (meta) identifies this specific root.properties.pages.items.anyOf.0.properties.head.items.anyOf.0.properties.tag type in discriminated unions and routing logic"
                          ],
                          "x-user-stories": [
                            "GIVEN entity with tag='meta' WHEN processing configuration THEN correct handler should be selected",
                            "GIVEN invalid tag value WHEN validating configuration THEN clear error message should identify the issue"
                          ]
                        },
                        "name": {
                          "type": "string",
                          "minLength": 1,
                          "x-user-stories": [
                            "GIVEN user provides name with at least 1 characters WHEN validating input THEN value should be accepted",
                            "GIVEN user provides name shorter than 1 chars WHEN validating input THEN error should require minimum length"
                          ]
                        },
                        "content": {
                          "type": "string",
                          "minLength": 1,
                          "x-user-stories": [
                            "GIVEN user provides content with at least 1 characters WHEN validating input THEN value should be accepted",
                            "GIVEN user provides content shorter than 1 chars WHEN validating input THEN error should require minimum length"
                          ]
                        }
                      },
                      "required": ["tag", "name", "content"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related meta element properties for better organization and type-safe access"
                      ]
                    },
                    {
                      "title": "Title Element",
                      "description": "Page title",
                      "type": "object",
                      "properties": {
                        "tag": {
                          "type": "string",
                          "const": "title",
                          "x-business-rules": [
                            "Fixed value (title) identifies this specific root.properties.pages.items.anyOf.0.properties.head.items.anyOf.1.properties.tag type in discriminated unions and routing logic"
                          ],
                          "x-user-stories": [
                            "GIVEN entity with tag='title' WHEN processing configuration THEN correct handler should be selected",
                            "GIVEN invalid tag value WHEN validating configuration THEN clear error message should identify the issue"
                          ]
                        },
                        "content": {
                          "type": "string",
                          "minLength": 1,
                          "x-user-stories": [
                            "GIVEN user provides content with at least 1 characters WHEN validating input THEN value should be accepted",
                            "GIVEN user provides content shorter than 1 chars WHEN validating input THEN error should require minimum length"
                          ]
                        }
                      },
                      "required": ["tag", "content"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related title element properties for better organization and type-safe access"
                      ]
                    },
                    {
                      "title": "Script Element",
                      "description": "JavaScript include or inline script",
                      "type": "object",
                      "properties": {
                        "tag": {
                          "type": "string",
                          "const": "script",
                          "x-business-rules": [
                            "Fixed value (script) identifies this specific root.properties.pages.items.anyOf.0.properties.head.items.anyOf.2.properties.tag type in discriminated unions and routing logic"
                          ],
                          "x-user-stories": [
                            "GIVEN entity with tag='script' WHEN processing configuration THEN correct handler should be selected",
                            "GIVEN invalid tag value WHEN validating configuration THEN clear error message should identify the issue"
                          ]
                        },
                        "src": {
                          "type": "string",
                          "format": "uri",
                          "x-business-rules": [
                            "Must be a valid URI to ensure external links function correctly without broken references"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides URL WHEN validating input THEN valid URLs should be accepted",
                            "GIVEN user provides invalid URL WHEN validating input THEN clear error message should be displayed",
                            "GIVEN URL is stored WHEN user accesses it THEN link should navigate to correct destination"
                          ]
                        },
                        "content": {
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN user provides content WHEN validating input THEN string value should be accepted",
                            "GIVEN content is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "type": {
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN user provides type WHEN validating input THEN string value should be accepted",
                            "GIVEN type is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "async": {
                          "type": "boolean",
                          "x-business-rules": [
                            "Boolean flag enables/disables async functionality through simple true/false configuration"
                          ],
                          "x-user-stories": [
                            "GIVEN async is true WHEN processing entity THEN corresponding behavior should be enforced",
                            "GIVEN async is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                            "GIVEN configuration with async WHEN validating settings THEN boolean value should be accepted"
                          ]
                        },
                        "defer": {
                          "type": "boolean",
                          "x-business-rules": [
                            "Boolean flag enables/disables defer functionality through simple true/false configuration"
                          ],
                          "x-user-stories": [
                            "GIVEN defer is true WHEN processing entity THEN corresponding behavior should be enforced",
                            "GIVEN defer is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                            "GIVEN configuration with defer WHEN validating settings THEN boolean value should be accepted"
                          ]
                        }
                      },
                      "required": ["tag"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related script element properties for better organization and type-safe access"
                      ]
                    },
                    {
                      "title": "Style Element",
                      "description": "Inline CSS styles",
                      "type": "object",
                      "properties": {
                        "tag": {
                          "type": "string",
                          "const": "style",
                          "x-business-rules": [
                            "Fixed value (style) identifies this specific root.properties.pages.items.anyOf.0.properties.head.items.anyOf.3.properties.tag type in discriminated unions and routing logic"
                          ],
                          "x-user-stories": [
                            "GIVEN entity with tag='style' WHEN processing configuration THEN correct handler should be selected",
                            "GIVEN invalid tag value WHEN validating configuration THEN clear error message should identify the issue"
                          ]
                        },
                        "content": {
                          "type": "string",
                          "minLength": 1,
                          "x-user-stories": [
                            "GIVEN user provides content with at least 1 characters WHEN validating input THEN value should be accepted",
                            "GIVEN user provides content shorter than 1 chars WHEN validating input THEN error should require minimum length"
                          ]
                        },
                        "type": {
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN user provides type WHEN validating input THEN string value should be accepted",
                            "GIVEN type is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "media": {
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN user provides media WHEN validating input THEN string value should be accepted",
                            "GIVEN media is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        }
                      },
                      "required": ["tag", "content"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related style element properties for better organization and type-safe access"
                      ]
                    },
                    {
                      "title": "Link Element",
                      "description": "External resource link",
                      "type": "object",
                      "properties": {
                        "tag": {
                          "type": "string",
                          "const": "link",
                          "x-business-rules": [
                            "Fixed value (link) identifies this specific root.properties.pages.items.anyOf.0.properties.head.items.anyOf.4.properties.tag type in discriminated unions and routing logic"
                          ],
                          "x-user-stories": [
                            "GIVEN entity with tag='link' WHEN processing configuration THEN correct handler should be selected",
                            "GIVEN invalid tag value WHEN validating configuration THEN clear error message should identify the issue"
                          ]
                        },
                        "href": {
                          "type": "string",
                          "minLength": 1,
                          "x-user-stories": [
                            "GIVEN user provides href with at least 1 characters WHEN validating input THEN value should be accepted",
                            "GIVEN user provides href shorter than 1 chars WHEN validating input THEN error should require minimum length"
                          ]
                        },
                        "rel": {
                          "type": "string",
                          "minLength": 1,
                          "x-user-stories": [
                            "GIVEN user provides rel with at least 1 characters WHEN validating input THEN value should be accepted",
                            "GIVEN user provides rel shorter than 1 chars WHEN validating input THEN error should require minimum length"
                          ]
                        },
                        "type": {
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN user provides type WHEN validating input THEN string value should be accepted",
                            "GIVEN type is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "media": {
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN user provides media WHEN validating input THEN string value should be accepted",
                            "GIVEN media is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "sizes": {
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN user provides sizes WHEN validating input THEN string value should be accepted",
                            "GIVEN sizes is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "crossorigin": {
                          "type": "string",
                          "enum": ["anonymous", "use-credentials"],
                          "x-business-rules": [
                            "Restricted to 2 allowed values (anonymous, use-credentials) to maintain type safety and enable clear validation error messages"
                          ],
                          "x-user-stories": [
                            "GIVEN user selects crossorigin from valid options WHEN validating input THEN selection should be accepted",
                            "GIVEN user provides invalid crossorigin value WHEN validating input THEN error should list valid options: anonymous, use-credentials",
                            "GIVEN crossorigin is set to any valid enum value WHEN processing entity THEN appropriate behavior should execute"
                          ]
                        }
                      },
                      "required": ["tag", "href", "rel"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related link element properties for better organization and type-safe access"
                      ]
                    }
                  ]
                },
                "x-business-rules": [
                  "Defaults to [] when not specified, providing sensible fallback behavior without requiring explicit configuration"
                ],
                "x-user-stories": [
                  "GIVEN user provides head array WHEN validating input THEN items should be processed in order",
                  "GIVEN head array is empty WHEN validating input THEN behavior should follow optional/required rules"
                ]
              },
              "body": {
                "description": "List of body elements for page content",
                "title": "Body Elements",
                "minItems": 1,
                "default": [],
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "title": "HTML Content",
                      "description": "Custom HTML content",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "const": "custom-html",
                          "x-business-rules": [
                            "Fixed value (custom-html) identifies this specific root.properties.pages.items.anyOf.0.properties.body.items.anyOf.0.properties.type type in discriminated unions and routing logic"
                          ],
                          "x-user-stories": [
                            "GIVEN entity with type='custom-html' WHEN processing configuration THEN correct handler should be selected",
                            "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                          ]
                        },
                        "content": {
                          "type": "string",
                          "minLength": 1,
                          "x-user-stories": [
                            "GIVEN user provides content with at least 1 characters WHEN validating input THEN value should be accepted",
                            "GIVEN user provides content shorter than 1 chars WHEN validating input THEN error should require minimum length"
                          ]
                        }
                      },
                      "required": ["type", "content"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related html content properties for better organization and type-safe access"
                      ]
                    }
                  ]
                },
                "x-business-rules": [
                  "Defaults to [] when not specified, providing sensible fallback behavior without requiring explicit configuration"
                ],
                "x-user-stories": [
                  "GIVEN user provides body with at least 1 items WHEN validating input THEN array should be accepted",
                  "GIVEN user provides body with fewer than 1 items WHEN validating input THEN error should enforce minimum items"
                ]
              }
            },
            "required": ["type", "name", "path", "head", "body"],
            "additionalProperties": false,
            "x-business-rules": [
              "Uniqueness constraint prevents conflicts and ensures each custom html page can be unambiguously referenced"
            ]
          },
          {
            "title": "Form Page",
            "description": "Form for creating or editing table records. Configure which table the form operates on, which fields to display, validation rules, and submit behavior. Supports field grouping, conditional visibility, custom layouts, and multi-step forms. Automatically generates form UI from table schema. Useful for data entry, record editing, user profiles, and structured input.",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "const": "form",
                "x-business-rules": [
                  "Fixed value (form) identifies this specific root.properties.pages.items.anyOf.1.properties.type type in discriminated unions and routing logic"
                ],
                "x-user-stories": [
                  "GIVEN entity with type='form' WHEN processing configuration THEN correct handler should be selected",
                  "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                ]
              },
              "id": {
                "$ref": "#/definitions/id",
                "title": "Form ID",
                "description": "Unique identifier for the form",
                "examples": [1, 2, 100],
                "x-user-stories": [
                  "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                  "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                  "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                ]
              },
              "name": {
                "$ref": "#/definitions/name",
                "title": "Form Name",
                "description": "Internal name for the form",
                "placeholder": "Enter form name",
                "examples": ["Contact Form", "Registration Form", "Feedback Survey"],
                "x-user-stories": [
                  "GIVEN user configures name WHEN validating input THEN value should meet schema requirements",
                  "GIVEN name is set WHEN processing configuration THEN value should be used correctly"
                ]
              },
              "path": {
                "$ref": "#/definitions/path",
                "title": "Form Path",
                "description": "URL path where the form is accessible",
                "placeholder": "/contact",
                "examples": ["/contact", "/signup", "/feedback"],
                "help": "Must start with / and use lowercase letters, numbers, hyphens",
                "x-user-stories": [
                  "GIVEN user configures path WHEN validating input THEN value should meet schema requirements",
                  "GIVEN path is set WHEN processing configuration THEN value should be used correctly"
                ]
              },
              "title": {
                "type": "string",
                "description": "Display title shown to users",
                "title": "Display Title",
                "placeholder": "Form title visible to users",
                "examples": ["Contact Us", "Create Your Account", "We Value Your Feedback"],
                "x-business-rules": ["Display title shown to users"],
                "x-user-stories": [
                  "GIVEN user provides title WHEN validating input THEN string value should be accepted",
                  "GIVEN title is empty string WHEN validating input THEN behavior should follow optional/required rules"
                ]
              },
              "description": {
                "type": "string",
                "description": "Help text or instructions for the form",
                "title": "Form Description",
                "placeholder": "Describe the purpose of this form",
                "examples": [
                  "Fill out this form to get in touch with our team",
                  "Please provide your details to create an account"
                ],
                "x-business-rules": ["Help text or instructions for the form"],
                "x-user-stories": [
                  "GIVEN user provides description WHEN validating input THEN string value should be accepted",
                  "GIVEN description is empty string WHEN validating input THEN behavior should follow optional/required rules"
                ]
              },
              "inputs": {
                "description": "List of form fields for user input",
                "title": "Form Fields",
                "minItems": 1,
                "default": [],
                "type": "array",
                "items": {
                  "title": "Input",
                  "description": "A form input field",
                  "anyOf": [
                    {
                      "title": "Text Input",
                      "description": "Text input field",
                      "type": "object",
                      "properties": {
                        "name": {
                          "title": "Field Name",
                          "description": "Internal identifier for this field, used for form data and validation",
                          "type": "string",
                          "minLength": 1,
                          "pattern": "^[a-z][a-z0-9_]*$",
                          "examples": ["first_name", "email_address", "phone", "company_url"],
                          "x-business-rules": [
                            "Pattern constraint enforces data format consistency and error prevention, rejecting invalid formats before they cause system errors"
                          ],
                          "x-user-stories": [
                            "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                            "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                            "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                          ]
                        },
                        "label": {
                          "title": "Field Label",
                          "description": "User-facing label displayed above the input field",
                          "type": "string",
                          "minLength": 1,
                          "examples": [
                            "First Name",
                            "Email Address",
                            "Phone Number",
                            "Company Website"
                          ],
                          "x-business-rules": ["User-facing label displayed above the input field"],
                          "x-user-stories": [
                            "GIVEN user provides label with at least 1 characters WHEN validating input THEN value should be accepted",
                            "GIVEN user provides label shorter than 1 chars WHEN validating input THEN error should require minimum length"
                          ]
                        },
                        "description": {
                          "title": "Help Text",
                          "description": "Optional help text or instructions shown below the field",
                          "type": "string",
                          "examples": [
                            "Enter your business email address",
                            "We'll never share your email with anyone else",
                            "Include country code"
                          ],
                          "x-business-rules": [
                            "Optional help text or instructions shown below the field"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides description WHEN validating input THEN string value should be accepted",
                            "GIVEN description is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "required": {
                          "title": "Required Field",
                          "description": "Whether this field must be filled out before form submission",
                          "type": "boolean",
                          "default": false,
                          "examples": [true, false],
                          "x-business-rules": [
                            "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
                          ],
                          "x-user-stories": [
                            "GIVEN required is true WHEN processing entity THEN corresponding behavior should be enforced",
                            "GIVEN required is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                            "GIVEN configuration with required WHEN validating settings THEN boolean value should be accepted"
                          ]
                        },
                        "defaultValue": {
                          "title": "Default Value",
                          "description": "Pre-filled value when the form loads",
                          "type": "string",
                          "examples": ["", "United States", "+1"],
                          "x-business-rules": ["Pre-filled value when the form loads"],
                          "x-user-stories": [
                            "GIVEN user provides defaultValue WHEN validating input THEN string value should be accepted",
                            "GIVEN defaultValue is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "placeholder": {
                          "title": "Placeholder Text",
                          "description": "Hint text shown in the empty input field",
                          "type": "string",
                          "examples": [
                            "john@example.com",
                            "Enter your name",
                            "+1 (555) 123-4567",
                            "https://example.com"
                          ],
                          "x-business-rules": ["Hint text shown in the empty input field"],
                          "x-user-stories": [
                            "GIVEN user provides placeholder WHEN validating input THEN string value should be accepted",
                            "GIVEN placeholder is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "type": {
                          "title": "Input Type",
                          "description": "The specific type of text input which determines validation and formatting",
                          "type": "string",
                          "enum": ["single-line-text", "long-text", "phone-number", "email", "url"],
                          "x-business-rules": [
                            "Restricted to 5 allowed values (single-line-text, long-text, phone-number, ...) to maintain type safety and enable clear validation error messages"
                          ],
                          "x-user-stories": [
                            "GIVEN user selects type from valid options WHEN validating input THEN selection should be accepted",
                            "GIVEN user provides invalid type value WHEN validating input THEN error should list valid options: single-line-text, long-text, phone-number",
                            "GIVEN type is set to any valid enum value WHEN processing entity THEN appropriate behavior should execute"
                          ]
                        }
                      },
                      "required": ["name", "type"],
                      "additionalProperties": false,
                      "x-user-stories": [
                        "GIVEN I am working with an email input WHEN I display a form THEN it should complete successfully",
                        "GIVEN I am working with a form with an email input WHEN I submit it THEN it should run an automation",
                        "GIVEN I am working with an email input WHEN I create a record THEN it should complete successfully",
                        "GIVEN I am working with a long text input WHEN I display a form THEN it should complete successfully",
                        "GIVEN I am working with a form with a long text input WHEN I submit it THEN it should run an automation",
                        "GIVEN I am working with a long text input WHEN I create a record THEN it should complete successfully",
                        "GIVEN I am working with a phone input WHEN I display a form THEN it should complete successfully",
                        "GIVEN I am working with a form with a phone number input WHEN I submit it THEN it should run an automation",
                        "GIVEN I am working with a phone number input WHEN I create a record THEN it should complete successfully",
                        "GIVEN I am working with a single line text input WHEN I display a form THEN it should complete successfully",
                        "GIVEN I am working with a form with a single line text input WHEN I submit it THEN it should run an automation",
                        "GIVEN I am working with a single line text input WHEN I create a record THEN it should complete successfully",
                        "GIVEN I am working with a url input WHEN I display a form THEN it should complete successfully",
                        "GIVEN I am working with a form with a url input WHEN I submit it THEN it should run an automation",
                        "GIVEN I am working with a url input WHEN I create a record THEN it should complete successfully"
                      ],
                      "x-business-rules": [
                        "Object structure groups related text input properties for better organization and type-safe access"
                      ]
                    },
                    {
                      "title": "Checkbox Input",
                      "description": "Checkbox input field",
                      "type": "object",
                      "properties": {
                        "name": {
                          "title": "Field Name",
                          "description": "Internal identifier for this field, used for form data and validation",
                          "type": "string",
                          "minLength": 1,
                          "pattern": "^[a-z][a-z0-9_]*$",
                          "examples": ["agree_to_terms", "subscribe_newsletter", "is_verified"],
                          "x-business-rules": [
                            "Pattern constraint enforces data format consistency and error prevention, rejecting invalid formats before they cause system errors"
                          ],
                          "x-user-stories": [
                            "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                            "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                            "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                          ]
                        },
                        "label": {
                          "title": "Field Label",
                          "description": "User-facing label displayed next to the checkbox",
                          "type": "string",
                          "minLength": 1,
                          "examples": [
                            "I agree to the terms and conditions",
                            "Subscribe to our newsletter",
                            "Verified account"
                          ],
                          "x-business-rules": ["User-facing label displayed next to the checkbox"],
                          "x-user-stories": [
                            "GIVEN user provides label with at least 1 characters WHEN validating input THEN value should be accepted",
                            "GIVEN user provides label shorter than 1 chars WHEN validating input THEN error should require minimum length"
                          ]
                        },
                        "description": {
                          "title": "Help Text",
                          "description": "Optional help text or instructions shown below the checkbox",
                          "type": "string",
                          "examples": [
                            "You must agree to continue",
                            "Get weekly updates in your inbox"
                          ],
                          "x-business-rules": [
                            "Optional help text or instructions shown below the checkbox"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides description WHEN validating input THEN string value should be accepted",
                            "GIVEN description is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "required": {
                          "title": "Required Field",
                          "description": "Whether this checkbox must be checked before form submission",
                          "type": "boolean",
                          "default": false,
                          "examples": [true, false],
                          "x-business-rules": [
                            "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
                          ],
                          "x-user-stories": [
                            "GIVEN required is true WHEN processing entity THEN corresponding behavior should be enforced",
                            "GIVEN required is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                            "GIVEN configuration with required WHEN validating settings THEN boolean value should be accepted"
                          ]
                        },
                        "defaultValue": {
                          "title": "Default Value",
                          "description": "Whether the checkbox is checked by default when the form loads",
                          "type": "boolean",
                          "default": false,
                          "examples": [true, false],
                          "x-business-rules": [
                            "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
                          ],
                          "x-user-stories": [
                            "GIVEN defaultValue is true WHEN processing entity THEN corresponding behavior should be enforced",
                            "GIVEN defaultValue is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                            "GIVEN configuration with defaultValue WHEN validating settings THEN boolean value should be accepted"
                          ]
                        },
                        "type": {
                          "title": "Input Type",
                          "description": "The input type identifier",
                          "type": "string",
                          "const": "checkbox",
                          "x-business-rules": [
                            "Fixed value (checkbox) identifies this specific root.properties.pages.items.anyOf.1.properties.inputs.items.anyOf.1.properties.type type in discriminated unions and routing logic"
                          ],
                          "x-user-stories": [
                            "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                            "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                            "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                          ]
                        }
                      },
                      "required": ["name", "type"],
                      "additionalProperties": false,
                      "x-user-stories": [
                        "GIVEN I am working with a checkbox input WHEN I display a form THEN it should complete successfully",
                        "GIVEN I am working with a form with a checkbox input WHEN I submit it THEN it should run an automation",
                        "GIVEN I am working with a checkbox input WHEN I create a record THEN it should complete successfully"
                      ],
                      "x-business-rules": [
                        "Object structure groups related checkbox input properties for better organization and type-safe access"
                      ]
                    },
                    {
                      "title": "Select Input",
                      "description": "Single select dropdown",
                      "type": "object",
                      "properties": {
                        "name": {
                          "title": "Field Name",
                          "description": "Internal identifier for this field, used for form data and validation",
                          "type": "string",
                          "minLength": 1,
                          "pattern": "^[a-z][a-z0-9_]*$",
                          "examples": ["country", "industry", "company_size", "status"],
                          "x-business-rules": [
                            "Pattern constraint enforces data format consistency and error prevention, rejecting invalid formats before they cause system errors"
                          ],
                          "x-user-stories": [
                            "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                            "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                            "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                          ]
                        },
                        "label": {
                          "title": "Field Label",
                          "description": "User-facing label displayed above the dropdown",
                          "type": "string",
                          "minLength": 1,
                          "examples": ["Country", "Industry", "Company Size", "Status"],
                          "x-business-rules": ["User-facing label displayed above the dropdown"],
                          "x-user-stories": [
                            "GIVEN user provides label with at least 1 characters WHEN validating input THEN value should be accepted",
                            "GIVEN user provides label shorter than 1 chars WHEN validating input THEN error should require minimum length"
                          ]
                        },
                        "description": {
                          "title": "Help Text",
                          "description": "Optional help text or instructions shown below the dropdown",
                          "type": "string",
                          "examples": [
                            "Select your country of residence",
                            "Choose the industry that best fits your business"
                          ],
                          "x-business-rules": [
                            "Optional help text or instructions shown below the dropdown"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides description WHEN validating input THEN string value should be accepted",
                            "GIVEN description is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "required": {
                          "title": "Required Field",
                          "description": "Whether a selection must be made before form submission",
                          "type": "boolean",
                          "default": false,
                          "examples": [true, false],
                          "x-business-rules": [
                            "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
                          ],
                          "x-user-stories": [
                            "GIVEN required is true WHEN processing entity THEN corresponding behavior should be enforced",
                            "GIVEN required is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                            "GIVEN configuration with required WHEN validating settings THEN boolean value should be accepted"
                          ]
                        },
                        "defaultValue": {
                          "title": "Default Value",
                          "description": "Pre-selected option value when the form loads",
                          "type": "string",
                          "examples": ["us", "technology", "small"],
                          "x-business-rules": ["Pre-selected option value when the form loads"],
                          "x-user-stories": [
                            "GIVEN user provides defaultValue WHEN validating input THEN string value should be accepted",
                            "GIVEN defaultValue is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "placeholder": {
                          "title": "Placeholder Text",
                          "description": "Text shown when no option is selected",
                          "type": "string",
                          "examples": ["Select a country", "Choose an option", "Select..."],
                          "x-business-rules": ["Text shown when no option is selected"],
                          "x-user-stories": [
                            "GIVEN user provides placeholder WHEN validating input THEN string value should be accepted",
                            "GIVEN placeholder is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "options": {
                          "title": "Options",
                          "description": "List of available options for the dropdown",
                          "type": "array",
                          "minItems": 1,
                          "items": {
                            "type": "object",
                            "properties": {
                              "label": {
                                "title": "Option Label",
                                "description": "User-visible text for this option",
                                "type": "string",
                                "minLength": 1,
                                "examples": [
                                  "United States",
                                  "Technology",
                                  "Small (1-10 employees)"
                                ],
                                "x-business-rules": ["User-visible text for this option"],
                                "x-user-stories": [
                                  "GIVEN user provides label with at least 1 characters WHEN validating input THEN value should be accepted",
                                  "GIVEN user provides label shorter than 1 chars WHEN validating input THEN error should require minimum length"
                                ]
                              },
                              "value": {
                                "title": "Option Value",
                                "description": "Internal value saved when this option is selected",
                                "type": "string",
                                "minLength": 1,
                                "examples": ["us", "technology", "small"],
                                "x-business-rules": [
                                  "Internal value saved when this option is selected"
                                ],
                                "x-user-stories": [
                                  "GIVEN user provides value with at least 1 characters WHEN validating input THEN value should be accepted",
                                  "GIVEN user provides value shorter than 1 chars WHEN validating input THEN error should require minimum length"
                                ]
                              }
                            },
                            "required": ["label", "value"],
                            "additionalProperties": false,
                            "x-business-rules": [
                              "Object structure groups related items properties for better organization and type-safe access"
                            ]
                          },
                          "examples": [
                            [
                              {
                                "label": "United States",
                                "value": "us"
                              },
                              {
                                "label": "Canada",
                                "value": "ca"
                              },
                              {
                                "label": "United Kingdom",
                                "value": "uk"
                              }
                            ]
                          ],
                          "x-business-rules": [
                            "Array enables multiple options to be configured, supporting flexible workflows and batch operations"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides options with at least 1 items WHEN validating input THEN array should be accepted",
                            "GIVEN user provides options with fewer than 1 items WHEN validating input THEN error should enforce minimum items"
                          ]
                        },
                        "type": {
                          "title": "Input Type",
                          "description": "The input type identifier",
                          "type": "string",
                          "const": "single-select",
                          "x-business-rules": [
                            "Fixed value (single-select) identifies this specific root.properties.pages.items.anyOf.1.properties.inputs.items.anyOf.2.properties.type type in discriminated unions and routing logic"
                          ],
                          "x-user-stories": [
                            "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                            "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                            "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                          ]
                        }
                      },
                      "required": ["name", "options", "type"],
                      "additionalProperties": false,
                      "x-user-stories": [
                        "GIVEN I am working with a single select input WHEN I display a form THEN it should complete successfully",
                        "GIVEN I am working with a form with a single select input WHEN I submit it THEN it should run an automation",
                        "GIVEN I am working with a single select input WHEN I create a record THEN it should complete successfully"
                      ],
                      "x-business-rules": [
                        "Object structure groups related select input properties for better organization and type-safe access"
                      ]
                    },
                    {
                      "title": "Attachment Input",
                      "description": "File upload field",
                      "type": "object",
                      "properties": {
                        "name": {
                          "title": "Field Name",
                          "description": "Internal identifier for this field, used for form data and validation",
                          "type": "string",
                          "minLength": 1,
                          "pattern": "^[a-z][a-z0-9_]*$",
                          "examples": ["resume", "profile_photo", "company_logo", "document"],
                          "x-business-rules": [
                            "Pattern constraint enforces data format consistency and error prevention, rejecting invalid formats before they cause system errors"
                          ],
                          "x-user-stories": [
                            "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                            "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                            "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                          ]
                        },
                        "label": {
                          "title": "Field Label",
                          "description": "User-facing label displayed above the file upload field",
                          "type": "string",
                          "minLength": 1,
                          "examples": [
                            "Upload Resume",
                            "Profile Photo",
                            "Company Logo",
                            "Attach Document"
                          ],
                          "x-business-rules": [
                            "User-facing label displayed above the file upload field"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides label with at least 1 characters WHEN validating input THEN value should be accepted",
                            "GIVEN user provides label shorter than 1 chars WHEN validating input THEN error should require minimum length"
                          ]
                        },
                        "description": {
                          "title": "Help Text",
                          "description": "Optional help text or instructions shown below the field",
                          "type": "string",
                          "examples": [
                            "PDF or Word document, max 5MB",
                            "JPG or PNG, recommended 400x400px",
                            "Accepted formats: PDF, DOC, DOCX"
                          ],
                          "x-business-rules": [
                            "Optional help text or instructions shown below the field"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides description WHEN validating input THEN string value should be accepted",
                            "GIVEN description is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "required": {
                          "title": "Required Field",
                          "description": "Whether a file must be uploaded before form submission",
                          "type": "boolean",
                          "default": false,
                          "examples": [true, false],
                          "x-business-rules": [
                            "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
                          ],
                          "x-user-stories": [
                            "GIVEN required is true WHEN processing entity THEN corresponding behavior should be enforced",
                            "GIVEN required is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                            "GIVEN configuration with required WHEN validating settings THEN boolean value should be accepted"
                          ]
                        },
                        "accept": {
                          "title": "Accepted File Types",
                          "description": "MIME types or file extensions that can be uploaded (comma-separated)",
                          "type": "string",
                          "examples": [
                            "image/*",
                            ".pdf,.doc,.docx",
                            "image/png,image/jpeg",
                            "application/pdf"
                          ],
                          "x-business-rules": [
                            "MIME types or file extensions that can be uploaded (comma-separated)"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides accept WHEN validating input THEN string value should be accepted",
                            "GIVEN accept is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "type": {
                          "title": "Input Type",
                          "description": "The input type identifier",
                          "type": "string",
                          "const": "single-attachment",
                          "x-business-rules": [
                            "Fixed value (single-attachment) identifies this specific root.properties.pages.items.anyOf.1.properties.inputs.items.anyOf.3.properties.type type in discriminated unions and routing logic"
                          ],
                          "x-user-stories": [
                            "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                            "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                            "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                          ]
                        }
                      },
                      "required": ["name", "type"],
                      "additionalProperties": false,
                      "x-user-stories": [
                        "GIVEN I am working with a single attachment input WHEN I display a form THEN it should complete successfully",
                        "GIVEN I am working with a form with a single attachment input WHEN I submit it THEN it should run an automation",
                        "GIVEN I am working with a single attachment input WHEN I create a record THEN it should complete successfully"
                      ],
                      "x-business-rules": [
                        "Object structure groups related attachment input properties for better organization and type-safe access"
                      ]
                    }
                  ]
                },
                "x-business-rules": [
                  "Defaults to [] when not specified, providing sensible fallback behavior without requiring explicit configuration"
                ],
                "x-user-stories": [
                  "GIVEN user provides inputs with at least 1 items WHEN validating input THEN array should be accepted",
                  "GIVEN user provides inputs with fewer than 1 items WHEN validating input THEN error should enforce minimum items"
                ]
              },
              "action": {
                "title": "Form Action",
                "description": "What to do with form submission data. create-record saves to database, send-email sends notification, trigger-automation runs workflow",
                "type": "string",
                "enum": ["create-record", "send-email", "trigger-automation"],
                "default": "create-record",
                "examples": ["create-record", "send-email", "trigger-automation"],
                "x-business-rules": [
                  "Restricted to 3 allowed values (create-record, send-email, trigger-automation) to maintain type safety and enable clear validation error messages",
                  "Defaults to \"create-record\" when not specified, providing sensible fallback behavior without requiring explicit configuration"
                ],
                "x-user-stories": [
                  "GIVEN user selects action from valid options WHEN validating input THEN selection should be accepted",
                  "GIVEN user provides invalid action value WHEN validating input THEN error should list valid options: create-record, send-email, trigger-automation",
                  "GIVEN action is set to any valid enum value WHEN processing entity THEN appropriate behavior should execute"
                ]
              },
              "table": {
                "title": "Target Table",
                "description": "Name of the database table to save form data (required when action is create-record)",
                "type": "string",
                "minLength": 1,
                "pattern": "^[a-z][a-z0-9_]*$",
                "examples": ["contacts", "leads", "feedback", "registrations"],
                "x-business-rules": [
                  "Pattern constraint enforces database compatibility and SQL syntax correctness, rejecting invalid formats before they cause system errors"
                ],
                "x-user-stories": [
                  "GIVEN user provides table matching pattern WHEN validating input THEN value should be accepted",
                  "GIVEN user provides table not matching pattern WHEN validating input THEN clear error message should explain format requirement",
                  "GIVEN table is stored WHEN retrieved later THEN original format should be preserved"
                ]
              },
              "successMessage": {
                "type": "string",
                "description": "Message displayed to the user after successful form submission",
                "title": "Success Message",
                "placeholder": "Thank you for your submission!",
                "examples": [
                  "Thank you! We will get back to you soon.",
                  "Your account has been created successfully!",
                  "Form submitted successfully."
                ],
                "x-business-rules": [
                  "Message displayed to the user after successful form submission"
                ],
                "x-user-stories": [
                  "GIVEN user provides successMessage WHEN validating input THEN string value should be accepted",
                  "GIVEN successMessage is empty string WHEN validating input THEN behavior should follow optional/required rules"
                ]
              },
              "redirectUrl": {
                "$ref": "#/definitions/path",
                "title": "Redirect URL",
                "description": "URL path to redirect the user to after successful form submission (e.g., /thank-you)",
                "examples": ["/thank-you", "/success", "/dashboard", "/confirmation"],
                "x-user-stories": [
                  "GIVEN user configures redirectUrl WHEN validating input THEN value should meet schema requirements",
                  "GIVEN redirectUrl is set WHEN processing configuration THEN value should be used correctly"
                ]
              }
            },
            "required": ["type", "id", "name", "path", "inputs", "action"],
            "additionalProperties": false,
            "x-user-stories": [
              "GIVEN I am working with a title WHEN I display a form THEN it should complete successfully",
              "GIVEN I am working with a path WHEN I display a form THEN it should complete successfully",
              "GIVEN I am working with a description WHEN I display a form THEN it should complete successfully",
              "GIVEN I am working with inputs WHEN I display a form THEN it should complete successfully",
              "GIVEN I am working with inputs placeholders WHEN I display a form THEN it should complete successfully",
              "GIVEN I am working with inputs descriptions WHEN I display a form THEN it should complete successfully",
              "GIVEN I am working with submit button WHEN I display a form THEN it should complete successfully",
              "GIVEN the application is running WHEN I list forms THEN it should work correctly",
              "GIVEN the application is running WHEN I open a form in a new page THEN it should work correctly",
              "GIVEN the form is submitted WHEN I display an error THEN it should succeed",
              "GIVEN the application is running WHEN I return a list of forms THEN it should work correctly",
              "GIVEN the application is running WHEN I return a form from a path THEN it should work correctly"
            ],
            "x-business-rules": [
              "Object structure groups related form page properties for better organization and type-safe access"
            ]
          },
          {
            "title": "Table View Page",
            "description": "Data table view displaying records from a database table. Supports filtering, sorting, searching, pagination, grouping, and custom columns. Configure visible fields, column order, default filters, and row actions. Provides spreadsheet-like interface for browsing and managing data. Useful for listing records, data exploration, and bulk operations.",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "const": "table-view",
                "x-business-rules": [
                  "Fixed value (table-view) identifies this specific root.properties.pages.items.anyOf.2.properties.type type in discriminated unions and routing logic"
                ],
                "x-user-stories": [
                  "GIVEN entity with type='table-view' WHEN processing configuration THEN correct handler should be selected",
                  "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                ]
              },
              "name": {
                "$ref": "#/definitions/name",
                "title": "Page Name",
                "description": "Internal name for the page",
                "x-user-stories": [
                  "GIVEN user configures name WHEN validating input THEN value should meet schema requirements",
                  "GIVEN name is set WHEN processing configuration THEN value should be used correctly"
                ]
              },
              "path": {
                "$ref": "#/definitions/path",
                "title": "Page Path",
                "description": "URL path where the page is accessible",
                "placeholder": "/users",
                "examples": ["/users", "/products", "/orders"],
                "x-user-stories": [
                  "GIVEN user configures path WHEN validating input THEN value should meet schema requirements",
                  "GIVEN path is set WHEN processing configuration THEN value should be used correctly"
                ]
              },
              "table": {
                "title": "Source Table",
                "description": "Name of the database table whose records will be displayed in this view",
                "type": "string",
                "minLength": 1,
                "pattern": "^[a-z][a-z0-9_]*$",
                "examples": ["users", "products", "orders", "customers"],
                "x-business-rules": [
                  "Pattern constraint enforces database compatibility and SQL syntax correctness, rejecting invalid formats before they cause system errors"
                ],
                "x-user-stories": [
                  "GIVEN user provides table matching pattern WHEN validating input THEN value should be accepted",
                  "GIVEN user provides table not matching pattern WHEN validating input THEN clear error message should explain format requirement",
                  "GIVEN table is stored WHEN retrieved later THEN original format should be preserved"
                ]
              },
              "title": {
                "title": "Page Title",
                "description": "Display title shown at the top of the page",
                "type": "string",
                "minLength": 1,
                "examples": ["All Users", "Product Catalog", "Recent Orders", "Customer Directory"],
                "x-business-rules": ["Display title shown at the top of the page"],
                "x-user-stories": [
                  "GIVEN user provides title with at least 1 characters WHEN validating input THEN value should be accepted",
                  "GIVEN user provides title shorter than 1 chars WHEN validating input THEN error should require minimum length"
                ]
              },
              "columns": {
                "title": "Visible Columns",
                "description": "List of table field names to display as columns (field names must exist in the table schema)",
                "type": "array",
                "items": {
                  "type": "string",
                  "minLength": 1,
                  "pattern": "^[a-z][a-z0-9_]*$",
                  "x-business-rules": [
                    "Pattern constraint enforces data format consistency and error prevention, rejecting invalid formats before they cause system errors"
                  ]
                },
                "minItems": 1,
                "examples": [
                  ["name", "email", "status", "created_at"],
                  ["id", "title", "price", "category"]
                ],
                "x-business-rules": [
                  "Array enables multiple visible columns to be configured, supporting flexible workflows and batch operations"
                ],
                "x-user-stories": [
                  "GIVEN user provides columns with at least 1 items WHEN validating input THEN array should be accepted",
                  "GIVEN user provides columns with fewer than 1 items WHEN validating input THEN error should enforce minimum items"
                ]
              },
              "searchable": {
                "title": "Enable Search",
                "description": "Whether to show a search box allowing users to search across all visible columns",
                "type": "boolean",
                "default": true,
                "examples": [true, false],
                "x-business-rules": [
                  "Defaults to true when not specified, providing sensible fallback behavior without requiring explicit configuration"
                ],
                "x-user-stories": [
                  "GIVEN searchable is true WHEN processing entity THEN corresponding behavior should be enforced",
                  "GIVEN searchable is false (default: True) WHEN processing entity THEN corresponding behavior should not be enforced",
                  "GIVEN configuration with searchable WHEN validating settings THEN boolean value should be accepted"
                ]
              },
              "sortable": {
                "title": "Enable Sorting",
                "description": "Whether to allow users to sort by clicking column headers",
                "type": "boolean",
                "default": true,
                "examples": [true, false],
                "x-business-rules": [
                  "Defaults to true when not specified, providing sensible fallback behavior without requiring explicit configuration"
                ],
                "x-user-stories": [
                  "GIVEN sortable is true WHEN processing entity THEN corresponding behavior should be enforced",
                  "GIVEN sortable is false (default: True) WHEN processing entity THEN corresponding behavior should not be enforced",
                  "GIVEN configuration with sortable WHEN validating settings THEN boolean value should be accepted"
                ]
              },
              "filterable": {
                "title": "Enable Filtering",
                "description": "Whether to show filter dropdowns for refining the data displayed",
                "type": "boolean",
                "default": true,
                "examples": [true, false],
                "x-business-rules": [
                  "Defaults to true when not specified, providing sensible fallback behavior without requiring explicit configuration"
                ],
                "x-user-stories": [
                  "GIVEN filterable is true WHEN processing entity THEN corresponding behavior should be enforced",
                  "GIVEN filterable is false (default: True) WHEN processing entity THEN corresponding behavior should not be enforced",
                  "GIVEN configuration with filterable WHEN validating settings THEN boolean value should be accepted"
                ]
              },
              "actions": {
                "title": "Table Actions",
                "description": "Configure which data manipulation actions are available on this table",
                "type": "object",
                "properties": {
                  "create": {
                    "title": "Allow Create",
                    "description": "Show button to create new records",
                    "type": "boolean",
                    "default": true,
                    "examples": [true, false],
                    "x-business-rules": [
                      "Defaults to true when not specified, providing sensible fallback behavior without requiring explicit configuration"
                    ],
                    "x-user-stories": [
                      "GIVEN create is true WHEN processing entity THEN corresponding behavior should be enforced",
                      "GIVEN create is false (default: True) WHEN processing entity THEN corresponding behavior should not be enforced",
                      "GIVEN configuration with create WHEN validating settings THEN boolean value should be accepted"
                    ]
                  },
                  "edit": {
                    "title": "Allow Edit",
                    "description": "Show edit button for each row",
                    "type": "boolean",
                    "default": true,
                    "examples": [true, false],
                    "x-business-rules": [
                      "Defaults to true when not specified, providing sensible fallback behavior without requiring explicit configuration"
                    ],
                    "x-user-stories": [
                      "GIVEN edit is true WHEN processing entity THEN corresponding behavior should be enforced",
                      "GIVEN edit is false (default: True) WHEN processing entity THEN corresponding behavior should not be enforced",
                      "GIVEN configuration with edit WHEN validating settings THEN boolean value should be accepted"
                    ]
                  },
                  "delete": {
                    "title": "Allow Delete",
                    "description": "Show delete button for each row",
                    "type": "boolean",
                    "default": true,
                    "examples": [true, false],
                    "x-business-rules": [
                      "Defaults to true when not specified, providing sensible fallback behavior without requiring explicit configuration"
                    ],
                    "x-user-stories": [
                      "GIVEN delete is true WHEN processing entity THEN corresponding behavior should be enforced",
                      "GIVEN delete is false (default: True) WHEN processing entity THEN corresponding behavior should not be enforced",
                      "GIVEN configuration with delete WHEN validating settings THEN boolean value should be accepted"
                    ]
                  },
                  "export": {
                    "title": "Allow Export",
                    "description": "Show button to export data to CSV/Excel",
                    "type": "boolean",
                    "default": false,
                    "examples": [true, false],
                    "x-business-rules": [
                      "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
                    ],
                    "x-user-stories": [
                      "GIVEN export is true WHEN processing entity THEN corresponding behavior should be enforced",
                      "GIVEN export is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                      "GIVEN configuration with export WHEN validating settings THEN boolean value should be accepted"
                    ]
                  }
                },
                "additionalProperties": false,
                "x-business-rules": [
                  "Object structure groups related table actions properties for better organization and type-safe access"
                ],
                "x-user-stories": [
                  "GIVEN user configures actions WHEN validating input THEN value should meet schema requirements",
                  "GIVEN actions is set WHEN processing configuration THEN value should be used correctly"
                ]
              }
            },
            "required": ["type", "name", "path", "table", "columns"],
            "additionalProperties": false,
            "x-business-rules": [
              "Object structure groups related table view page properties for better organization and type-safe access"
            ]
          },
          {
            "title": "Detail View Page",
            "description": "Single record detail view showing all fields from a table in a read-only or editable layout. Configure field grouping, layout (single column, two column, grid), related record sections, and action buttons. Supports inline editing, field history, and related data display. Useful for record overview, profile pages, and detailed information views.",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "const": "detail-view",
                "x-business-rules": [
                  "Fixed value (detail-view) identifies this specific root.properties.pages.items.anyOf.3.properties.type type in discriminated unions and routing logic"
                ],
                "x-user-stories": [
                  "GIVEN entity with type='detail-view' WHEN processing configuration THEN correct handler should be selected",
                  "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                ]
              },
              "name": {
                "$ref": "#/definitions/name",
                "title": "Page Name",
                "description": "Internal name for the page",
                "x-user-stories": [
                  "GIVEN user configures name WHEN validating input THEN value should meet schema requirements",
                  "GIVEN name is set WHEN processing configuration THEN value should be used correctly"
                ]
              },
              "path": {
                "$ref": "#/definitions/path",
                "title": "Page Path",
                "description": "URL path with :id parameter",
                "placeholder": "/users/:id",
                "examples": ["/users/:id", "/products/:id", "/orders/:id"],
                "x-user-stories": [
                  "GIVEN user configures path WHEN validating input THEN value should meet schema requirements",
                  "GIVEN path is set WHEN processing configuration THEN value should be used correctly"
                ]
              },
              "table": {
                "title": "Source Table",
                "description": "Name of the database table whose record will be displayed",
                "type": "string",
                "minLength": 1,
                "pattern": "^[a-z][a-z0-9_]*$",
                "examples": ["users", "products", "orders"],
                "x-business-rules": [
                  "Pattern constraint enforces database compatibility and SQL syntax correctness, rejecting invalid formats before they cause system errors"
                ],
                "x-user-stories": [
                  "GIVEN user provides table matching pattern WHEN validating input THEN value should be accepted",
                  "GIVEN user provides table not matching pattern WHEN validating input THEN clear error message should explain format requirement",
                  "GIVEN table is stored WHEN retrieved later THEN original format should be preserved"
                ]
              },
              "title": {
                "title": "Page Title",
                "description": "Display title shown at the top of the detail page",
                "type": "string",
                "minLength": 1,
                "examples": ["User Details", "Product Information", "Order Summary"],
                "x-business-rules": ["Display title shown at the top of the detail page"],
                "x-user-stories": [
                  "GIVEN user provides title with at least 1 characters WHEN validating input THEN value should be accepted",
                  "GIVEN user provides title shorter than 1 chars WHEN validating input THEN error should require minimum length"
                ]
              },
              "layout": {
                "title": "Page Layout",
                "description": "Visual layout style for organizing field sections on the page",
                "type": "string",
                "enum": ["single-column", "two-column", "tabs", "accordion"],
                "default": "single-column",
                "examples": ["single-column", "two-column", "tabs", "accordion"],
                "x-business-rules": [
                  "Restricted to 4 allowed values (single-column, two-column, tabs, ...) to maintain type safety and enable clear validation error messages",
                  "Defaults to \"single-column\" when not specified, providing sensible fallback behavior without requiring explicit configuration"
                ],
                "x-user-stories": [
                  "GIVEN user selects layout from valid options WHEN validating input THEN selection should be accepted",
                  "GIVEN user provides invalid layout value WHEN validating input THEN error should list valid options: single-column, two-column, tabs",
                  "GIVEN layout is set to any valid enum value WHEN processing entity THEN appropriate behavior should execute"
                ]
              },
              "sections": {
                "title": "Field Sections",
                "description": "Logical groupings of related fields for better organization and readability",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "title": "Section Title",
                      "description": "Heading displayed above this group of fields",
                      "type": "string",
                      "minLength": 1,
                      "examples": [
                        "Basic Information",
                        "Contact Details",
                        "Billing Address",
                        "Preferences"
                      ],
                      "x-business-rules": ["Heading displayed above this group of fields"],
                      "x-user-stories": [
                        "GIVEN user provides title with at least 1 characters WHEN validating input THEN value should be accepted",
                        "GIVEN user provides title shorter than 1 chars WHEN validating input THEN error should require minimum length"
                      ]
                    },
                    "fields": {
                      "title": "Section Fields",
                      "description": "List of field names to display in this section (must exist in table schema)",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "minLength": 1,
                        "pattern": "^[a-z][a-z0-9_]*$",
                        "x-business-rules": [
                          "Pattern constraint enforces data format consistency and error prevention, rejecting invalid formats before they cause system errors"
                        ]
                      },
                      "minItems": 1,
                      "examples": [
                        ["name", "email", "phone"],
                        ["street", "city", "postal_code", "country"]
                      ],
                      "x-business-rules": [
                        "Array enables multiple section fields to be configured, supporting flexible workflows and batch operations"
                      ],
                      "x-user-stories": [
                        "GIVEN user provides fields with at least 1 items WHEN validating input THEN array should be accepted",
                        "GIVEN user provides fields with fewer than 1 items WHEN validating input THEN error should enforce minimum items"
                      ]
                    }
                  },
                  "required": ["title", "fields"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related items properties for better organization and type-safe access"
                  ]
                },
                "minItems": 1,
                "x-business-rules": [
                  "Array enables multiple field sections to be configured, supporting flexible workflows and batch operations"
                ],
                "x-user-stories": [
                  "GIVEN user provides sections with at least 1 items WHEN validating input THEN array should be accepted",
                  "GIVEN user provides sections with fewer than 1 items WHEN validating input THEN error should enforce minimum items"
                ]
              }
            },
            "required": ["type", "name", "path", "table", "sections"],
            "additionalProperties": false,
            "x-business-rules": [
              "Detail View Page is immutable after creation to ensure data integrity and prevent accidental corruption"
            ]
          }
        ]
      },
      "x-user-stories": [
        "GIVEN the application is running WHEN I return the home page THEN it should work correctly",
        "GIVEN I am working with custom HTML WHEN I return a page THEN it should complete successfully",
        "GIVEN I am working with title WHEN I return a page THEN it should complete successfully",
        "GIVEN I am working with description meta tag WHEN I return a page THEN it should complete successfully",
        "GIVEN the application is running WHEN I include Tailwind CSS script from CDN THEN it should work correctly",
        "GIVEN the application is running WHEN I include inline Tailwind theme styles THEN it should work correctly",
        "GIVEN the application is running WHEN I include external stylesheet link THEN it should work correctly",
        "GIVEN I am working with all head elements WHEN I have proper HTML structure THEN it should complete successfully",
        "GIVEN the application is running WHEN I render empty body correctly THEN it should work correctly",
        "GIVEN the application is running WHEN I load page successfully and take screenshot THEN it should work correctly"
      ],
      "x-business-rules": [
        "Uniqueness constraint prevents conflicts and ensures each pages can be unambiguously referenced",
        "Defaults to [] when not specified, providing sensible fallback behavior without requiring explicit configuration"
      ]
    },
    "automations": {
      "description": "Workflow automations that execute actions when triggered by specific events or conditions. Automations enable business logic such as sending emails when records are created, updating related data when values change, or integrating with external services via webhooks. Each automation consists of a trigger (when to run) and a sequence of actions (what to do).",
      "title": "Automations",
      "default": [],
      "type": "array",
      "items": {
        "$ref": "#/definitions/automation"
      },
      "x-business-rules": [
        "Defaults to [] when not specified, providing sensible fallback behavior without requiring explicit configuration"
      ],
      "x-user-stories": [
        "GIVEN user provides automations array WHEN validating input THEN items should be processed in order",
        "GIVEN automations array is empty WHEN validating input THEN behavior should follow optional/required rules"
      ]
    },
    "connections": {
      "description": "External service integrations that connect your application to third-party platforms. Connections enable OAuth authentication, API access, and data synchronization with services like Calendly (scheduling), Airtable (databases), Google (workspace apps), LinkedIn (professional network), and Facebook (social platform). Each connection requires proper credentials and scopes.",
      "title": "Connections",
      "default": [],
      "type": "array",
      "items": {
        "title": "Service Connection",
        "description": "Connect to an external service",
        "anyOf": [
          {
            "title": "Calendly",
            "description": "The Calendly connection is a connection to the Calendly API",
            "type": "object",
            "properties": {
              "id": {
                "title": "Connection ID",
                "description": "Unique identifier for this connection",
                "type": "integer",
                "minimum": 1,
                "maximum": 9007199254740991,
                "examples": [1, 2, 10],
                "x-business-rules": [
                  "Uniqueness constraint prevents conflicts and ensures each connection id can be unambiguously referenced",
                  "Maximum enforced at JavaScript MAX_SAFE_INTEGER to prevent number precision loss in client applications"
                ],
                "x-user-stories": [
                  "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                  "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                  "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                ]
              },
              "name": {
                "title": "Connection Name",
                "description": "Human-readable name for this connection to identify it in your application",
                "type": "string",
                "minLength": 1,
                "examples": ["My Calendly Account", "Production Calendly", "Team Calendar"],
                "x-business-rules": [
                  "Human-readable name for this connection to identify it in your application"
                ],
                "x-user-stories": [
                  "GIVEN user provides name with at least 1 characters WHEN validating input THEN value should be accepted",
                  "GIVEN user provides name shorter than 1 chars WHEN validating input THEN error should require minimum length"
                ]
              },
              "clientId": {
                "title": "OAuth Client ID",
                "description": "The OAuth 2.0 client identifier from your Calendly app settings. Find this in your Calendly developer dashboard.",
                "type": "string",
                "minLength": 1,
                "examples": ["abc123def456ghi789"],
                "x-user-stories": [
                  "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                  "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                  "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                ]
              },
              "clientSecret": {
                "title": "OAuth Client Secret",
                "description": "The OAuth 2.0 client secret from your Calendly app settings. Keep this secure and never expose it in client-side code.",
                "type": "string",
                "minLength": 1,
                "examples": ["secret_key_abc123def456"],
                "x-user-stories": [
                  "GIVEN a user connects external service WHEN providing OAuth client secret THEN authentication should succeed with valid credentials",
                  "GIVEN invalid OAuth client secret WHEN attempting authentication THEN system should return clear error message",
                  "GIVEN stored client secret WHEN automation executes THEN credentials should be used securely without exposure"
                ]
              },
              "service": {
                "title": "Service Type",
                "description": "The type of service this connection integrates with",
                "type": "string",
                "const": "calendly",
                "x-business-rules": [
                  "Fixed value (calendly) identifies this specific root.properties.connections.items.anyOf.0.properties.service type in discriminated unions and routing logic"
                ],
                "x-user-stories": [
                  "GIVEN entity with service='calendly' WHEN processing configuration THEN correct handler should be selected",
                  "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                ]
              }
            },
            "required": ["id", "name", "clientId", "clientSecret", "service"],
            "additionalProperties": false,
            "x-user-stories": [
              "GIVEN the application is running WHEN I connect to calendly THEN it should work correctly"
            ],
            "x-business-rules": [
              "Object structure groups related calendly properties for better organization and type-safe access"
            ]
          },
          {
            "title": "Airtable",
            "description": "The Airtable connection is a connection to the Airtable API",
            "type": "object",
            "properties": {
              "id": {
                "title": "Connection ID",
                "description": "Unique identifier for this connection",
                "type": "integer",
                "minimum": 1,
                "maximum": 9007199254740991,
                "examples": [1, 2, 10],
                "x-business-rules": [
                  "Uniqueness constraint prevents conflicts and ensures each connection id can be unambiguously referenced",
                  "Maximum enforced at JavaScript MAX_SAFE_INTEGER to prevent number precision loss in client applications"
                ],
                "x-user-stories": [
                  "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                  "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                  "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                ]
              },
              "name": {
                "title": "Connection Name",
                "description": "Human-readable name for this connection to identify it in your application",
                "type": "string",
                "minLength": 1,
                "examples": ["My Airtable Workspace", "Production Airtable", "Marketing Base"],
                "x-business-rules": [
                  "Human-readable name for this connection to identify it in your application"
                ],
                "x-user-stories": [
                  "GIVEN user provides name with at least 1 characters WHEN validating input THEN value should be accepted",
                  "GIVEN user provides name shorter than 1 chars WHEN validating input THEN error should require minimum length"
                ]
              },
              "clientId": {
                "title": "OAuth Client ID",
                "description": "The OAuth 2.0 client identifier from your Airtable app settings. Create an OAuth integration in your Airtable account.",
                "type": "string",
                "minLength": 1,
                "examples": ["airtable_client_xyz789"],
                "x-user-stories": [
                  "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                  "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                  "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                ]
              },
              "clientSecret": {
                "title": "OAuth Client Secret",
                "description": "The OAuth 2.0 client secret from your Airtable app settings. Keep this secure and never expose it in client-side code.",
                "type": "string",
                "minLength": 1,
                "examples": ["secret_airtable_abc123"],
                "x-user-stories": [
                  "GIVEN a user connects external service WHEN providing OAuth client secret THEN authentication should succeed with valid credentials",
                  "GIVEN invalid OAuth client secret WHEN attempting authentication THEN system should return clear error message",
                  "GIVEN stored client secret WHEN automation executes THEN credentials should be used securely without exposure"
                ]
              },
              "service": {
                "title": "Service Type",
                "description": "The type of service this connection integrates with",
                "type": "string",
                "const": "airtable",
                "x-business-rules": [
                  "Fixed value (airtable) identifies this specific root.properties.connections.items.anyOf.1.properties.service type in discriminated unions and routing logic"
                ],
                "x-user-stories": [
                  "GIVEN entity with service='airtable' WHEN processing configuration THEN correct handler should be selected",
                  "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                ]
              }
            },
            "required": ["id", "name", "clientId", "clientSecret", "service"],
            "additionalProperties": false,
            "x-user-stories": [
              "GIVEN the application is running WHEN I connect to airtable THEN it should work correctly"
            ],
            "x-business-rules": [
              "Object structure groups related airtable properties for better organization and type-safe access"
            ]
          },
          {
            "anyOf": [
              {
                "title": "Google Gmail",
                "description": "The Google Gmail connection is a connection to the Google Gmail API",
                "type": "object",
                "properties": {
                  "id": {
                    "title": "Connection ID",
                    "description": "Unique identifier for this connection",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 9007199254740991,
                    "examples": [1, 2, 10],
                    "x-business-rules": [
                      "Uniqueness constraint prevents conflicts and ensures each connection id can be unambiguously referenced",
                      "Maximum enforced at JavaScript MAX_SAFE_INTEGER to prevent number precision loss in client applications"
                    ],
                    "x-user-stories": [
                      "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                      "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                      "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                    ]
                  },
                  "name": {
                    "title": "Connection Name",
                    "description": "Human-readable name for this connection to identify it in your application",
                    "type": "string",
                    "minLength": 1,
                    "examples": ["Company Gmail", "Support Email Account", "Marketing Gmail"],
                    "x-business-rules": [
                      "Human-readable name for this connection to identify it in your application"
                    ],
                    "x-user-stories": [
                      "GIVEN user provides name with at least 1 characters WHEN validating input THEN value should be accepted",
                      "GIVEN user provides name shorter than 1 chars WHEN validating input THEN error should require minimum length"
                    ]
                  },
                  "clientId": {
                    "title": "OAuth Client ID",
                    "description": "The OAuth 2.0 client identifier from Google Cloud Console. Create credentials in the APIs & Services section.",
                    "type": "string",
                    "minLength": 1,
                    "examples": ["123456789-abc123.apps.googleusercontent.com"],
                    "x-user-stories": [
                      "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                      "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                      "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                    ]
                  },
                  "clientSecret": {
                    "title": "OAuth Client Secret",
                    "description": "The OAuth 2.0 client secret from Google Cloud Console. Keep this secure and never expose it in client-side code.",
                    "type": "string",
                    "minLength": 1,
                    "examples": ["GOCSPX-abc123def456ghi789"],
                    "x-user-stories": [
                      "GIVEN a user connects external service WHEN providing OAuth client secret THEN authentication should succeed with valid credentials",
                      "GIVEN invalid OAuth client secret WHEN attempting authentication THEN system should return clear error message",
                      "GIVEN stored client secret WHEN automation executes THEN credentials should be used securely without exposure"
                    ]
                  },
                  "service": {
                    "title": "Service Type",
                    "description": "The type of service this connection integrates with",
                    "type": "string",
                    "const": "google-gmail",
                    "x-business-rules": [
                      "Fixed value (google-gmail) identifies this specific root.properties.connections.items.anyOf.2.anyOf.0.properties.service type in discriminated unions and routing logic"
                    ],
                    "x-user-stories": [
                      "GIVEN entity with service='google-gmail' WHEN processing configuration THEN correct handler should be selected",
                      "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                    ]
                  }
                },
                "required": ["id", "name", "clientId", "clientSecret", "service"],
                "additionalProperties": false,
                "x-business-rules": [
                  "Object structure groups related google gmail properties for better organization and type-safe access"
                ]
              },
              {
                "title": "Google Sheets",
                "description": "The Google Sheets connection is a connection to the Google Sheets API",
                "type": "object",
                "properties": {
                  "id": {
                    "title": "Connection ID",
                    "description": "Unique identifier for this connection",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 9007199254740991,
                    "examples": [1, 2, 10],
                    "x-business-rules": [
                      "Uniqueness constraint prevents conflicts and ensures each connection id can be unambiguously referenced",
                      "Maximum enforced at JavaScript MAX_SAFE_INTEGER to prevent number precision loss in client applications"
                    ],
                    "x-user-stories": [
                      "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                      "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                      "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                    ]
                  },
                  "name": {
                    "title": "Connection Name",
                    "description": "Human-readable name for this connection to identify it in your application",
                    "type": "string",
                    "minLength": 1,
                    "examples": ["Company Spreadsheets", "Data Export Sheets", "Report Builder"],
                    "x-business-rules": [
                      "Human-readable name for this connection to identify it in your application"
                    ],
                    "x-user-stories": [
                      "GIVEN user provides name with at least 1 characters WHEN validating input THEN value should be accepted",
                      "GIVEN user provides name shorter than 1 chars WHEN validating input THEN error should require minimum length"
                    ]
                  },
                  "clientId": {
                    "title": "OAuth Client ID",
                    "description": "The OAuth 2.0 client identifier from Google Cloud Console. Create credentials in the APIs & Services section.",
                    "type": "string",
                    "minLength": 1,
                    "examples": ["123456789-xyz789.apps.googleusercontent.com"],
                    "x-user-stories": [
                      "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                      "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                      "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                    ]
                  },
                  "clientSecret": {
                    "title": "OAuth Client Secret",
                    "description": "The OAuth 2.0 client secret from Google Cloud Console. Keep this secure and never expose it in client-side code.",
                    "type": "string",
                    "minLength": 1,
                    "examples": ["GOCSPX-xyz789abc123def456"],
                    "x-user-stories": [
                      "GIVEN a user connects external service WHEN providing OAuth client secret THEN authentication should succeed with valid credentials",
                      "GIVEN invalid OAuth client secret WHEN attempting authentication THEN system should return clear error message",
                      "GIVEN stored client secret WHEN automation executes THEN credentials should be used securely without exposure"
                    ]
                  },
                  "service": {
                    "title": "Service Type",
                    "description": "The type of service this connection integrates with",
                    "type": "string",
                    "const": "google-sheets",
                    "x-business-rules": [
                      "Fixed value (google-sheets) identifies this specific root.properties.connections.items.anyOf.2.anyOf.1.properties.service type in discriminated unions and routing logic"
                    ],
                    "x-user-stories": [
                      "GIVEN entity with service='google-sheets' WHEN processing configuration THEN correct handler should be selected",
                      "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                    ]
                  }
                },
                "required": ["id", "name", "clientId", "clientSecret", "service"],
                "additionalProperties": false,
                "x-business-rules": [
                  "Object structure groups related google sheets properties for better organization and type-safe access"
                ]
              }
            ],
            "x-user-stories": [
              "GIVEN the application is running WHEN I connect to Google Sheets THEN it should work correctly",
              "GIVEN the application is running WHEN I connect to Gmail THEN it should work correctly"
            ]
          },
          {
            "title": "LinkedIn Ads",
            "description": "The LinkedIn Ads connection is a connection to the LinkedIn Ads API",
            "type": "object",
            "properties": {
              "id": {
                "title": "Connection ID",
                "description": "Unique identifier for this connection",
                "type": "integer",
                "minimum": 1,
                "maximum": 9007199254740991,
                "examples": [1, 2, 10],
                "x-business-rules": [
                  "Uniqueness constraint prevents conflicts and ensures each connection id can be unambiguously referenced",
                  "Maximum enforced at JavaScript MAX_SAFE_INTEGER to prevent number precision loss in client applications"
                ],
                "x-user-stories": [
                  "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                  "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                  "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                ]
              },
              "name": {
                "title": "Connection Name",
                "description": "Human-readable name for this connection to identify it in your application",
                "type": "string",
                "minLength": 1,
                "examples": ["LinkedIn Campaign Manager", "Lead Gen Forms", "B2B Ads Account"],
                "x-business-rules": [
                  "Human-readable name for this connection to identify it in your application"
                ],
                "x-user-stories": [
                  "GIVEN user provides name with at least 1 characters WHEN validating input THEN value should be accepted",
                  "GIVEN user provides name shorter than 1 chars WHEN validating input THEN error should require minimum length"
                ]
              },
              "clientId": {
                "title": "OAuth Client ID",
                "description": "The OAuth 2.0 client identifier from LinkedIn Developer Portal. Create an app in the LinkedIn Developers section.",
                "type": "string",
                "minLength": 1,
                "examples": ["86abcdefgh123456"],
                "x-user-stories": [
                  "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                  "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                  "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                ]
              },
              "clientSecret": {
                "title": "OAuth Client Secret",
                "description": "The OAuth 2.0 client secret from LinkedIn Developer Portal. Keep this secure and never expose it in client-side code.",
                "type": "string",
                "minLength": 1,
                "examples": ["abc123def456ghi789jkl"],
                "x-user-stories": [
                  "GIVEN a user connects external service WHEN providing OAuth client secret THEN authentication should succeed with valid credentials",
                  "GIVEN invalid OAuth client secret WHEN attempting authentication THEN system should return clear error message",
                  "GIVEN stored client secret WHEN automation executes THEN credentials should be used securely without exposure"
                ]
              },
              "service": {
                "title": "Service Type",
                "description": "The type of service this connection integrates with",
                "type": "string",
                "const": "linkedin-ads",
                "x-business-rules": [
                  "Fixed value (linkedin-ads) identifies this specific root.properties.connections.items.anyOf.3.properties.service type in discriminated unions and routing logic"
                ],
                "x-user-stories": [
                  "GIVEN entity with service='linkedin-ads' WHEN processing configuration THEN correct handler should be selected",
                  "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                ]
              }
            },
            "required": ["id", "name", "clientId", "clientSecret", "service"],
            "additionalProperties": false,
            "x-user-stories": [
              "GIVEN the application is running WHEN I connect to linkedin THEN it should work correctly"
            ],
            "x-business-rules": [
              "Object structure groups related linkedin ads properties for better organization and type-safe access"
            ]
          },
          {
            "title": "Facebook Ads",
            "description": "The Facebook Ads connection is a connection to the Facebook Ads API",
            "type": "object",
            "properties": {
              "id": {
                "title": "Connection ID",
                "description": "Unique identifier for this connection",
                "type": "integer",
                "minimum": 1,
                "maximum": 9007199254740991,
                "examples": [1, 2, 10],
                "x-business-rules": [
                  "Uniqueness constraint prevents conflicts and ensures each connection id can be unambiguously referenced",
                  "Maximum enforced at JavaScript MAX_SAFE_INTEGER to prevent number precision loss in client applications"
                ],
                "x-user-stories": [
                  "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                  "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                  "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                ]
              },
              "name": {
                "title": "Connection Name",
                "description": "Human-readable name for this connection to identify it in your application",
                "type": "string",
                "minLength": 1,
                "examples": [
                  "Facebook Business Manager",
                  "Lead Ads Account",
                  "Social Media Campaigns"
                ],
                "x-business-rules": [
                  "Human-readable name for this connection to identify it in your application"
                ],
                "x-user-stories": [
                  "GIVEN user provides name with at least 1 characters WHEN validating input THEN value should be accepted",
                  "GIVEN user provides name shorter than 1 chars WHEN validating input THEN error should require minimum length"
                ]
              },
              "clientId": {
                "title": "App ID",
                "description": "The Facebook App ID from Meta for Developers. Create an app in the Facebook App Dashboard.",
                "type": "string",
                "minLength": 1,
                "examples": ["123456789012345"],
                "x-business-rules": ["The Facebook App ID from Meta for Developers"],
                "x-user-stories": [
                  "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                  "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                  "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                ]
              },
              "clientSecret": {
                "title": "App Secret",
                "description": "The Facebook App Secret from Meta for Developers. Keep this secure and never expose it in client-side code.",
                "type": "string",
                "minLength": 1,
                "examples": ["abc123def456ghi789jkl012mno345"],
                "x-business-rules": ["The Facebook App Secret from Meta for Developers"],
                "x-user-stories": [
                  "GIVEN a user connects external service WHEN providing OAuth client secret THEN authentication should succeed with valid credentials",
                  "GIVEN invalid OAuth client secret WHEN attempting authentication THEN system should return clear error message",
                  "GIVEN stored client secret WHEN automation executes THEN credentials should be used securely without exposure"
                ]
              },
              "service": {
                "title": "Service Type",
                "description": "The type of service this connection integrates with",
                "type": "string",
                "const": "facebook-ads",
                "x-business-rules": [
                  "Fixed value (facebook-ads) identifies this specific root.properties.connections.items.anyOf.4.properties.service type in discriminated unions and routing logic"
                ],
                "x-user-stories": [
                  "GIVEN entity with service='facebook-ads' WHEN processing configuration THEN correct handler should be selected",
                  "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                ]
              }
            },
            "required": ["id", "name", "clientId", "clientSecret", "service"],
            "additionalProperties": false,
            "x-user-stories": [
              "GIVEN the application is running WHEN I connect to facebook THEN it should work correctly"
            ],
            "x-business-rules": [
              "Object structure groups related facebook ads properties for better organization and type-safe access"
            ]
          },
          {
            "title": "Notion",
            "description": "The Notion connection is a connection to the Notion API",
            "type": "object",
            "properties": {
              "id": {
                "title": "Connection ID",
                "description": "Unique identifier for this connection",
                "type": "integer",
                "minimum": 1,
                "maximum": 9007199254740991,
                "examples": [1, 2, 10],
                "x-business-rules": [
                  "Uniqueness constraint prevents conflicts and ensures each connection id can be unambiguously referenced",
                  "Maximum enforced at JavaScript MAX_SAFE_INTEGER to prevent number precision loss in client applications"
                ],
                "x-user-stories": [
                  "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                  "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                  "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                ]
              },
              "name": {
                "title": "Connection Name",
                "description": "Human-readable name for this connection to identify it in your application",
                "type": "string",
                "minLength": 1,
                "examples": ["Company Wiki", "Project Documentation", "Knowledge Base"],
                "x-business-rules": [
                  "Human-readable name for this connection to identify it in your application"
                ],
                "x-user-stories": [
                  "GIVEN user provides name with at least 1 characters WHEN validating input THEN value should be accepted",
                  "GIVEN user provides name shorter than 1 chars WHEN validating input THEN error should require minimum length"
                ]
              },
              "clientId": {
                "title": "OAuth Client ID",
                "description": "The OAuth 2.0 client identifier from Notion integrations page. Create an integration in your Notion workspace settings.",
                "type": "string",
                "minLength": 1,
                "examples": ["abc-123-def-456-ghi-789"],
                "x-user-stories": [
                  "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                  "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                  "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                ]
              },
              "clientSecret": {
                "title": "OAuth Client Secret",
                "description": "The OAuth 2.0 client secret from Notion integrations page. Keep this secure and never expose it in client-side code.",
                "type": "string",
                "minLength": 1,
                "examples": ["secret_abc123DEF456ghi789JKL012"],
                "x-user-stories": [
                  "GIVEN a user connects external service WHEN providing OAuth client secret THEN authentication should succeed with valid credentials",
                  "GIVEN invalid OAuth client secret WHEN attempting authentication THEN system should return clear error message",
                  "GIVEN stored client secret WHEN automation executes THEN credentials should be used securely without exposure"
                ]
              },
              "service": {
                "title": "Service Type",
                "description": "The type of service this connection integrates with",
                "type": "string",
                "const": "notion",
                "x-business-rules": [
                  "Fixed value (notion) identifies this specific root.properties.connections.items.anyOf.5.properties.service type in discriminated unions and routing logic"
                ],
                "x-user-stories": [
                  "GIVEN entity with service='notion' WHEN processing configuration THEN correct handler should be selected",
                  "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                ]
              }
            },
            "required": ["id", "name", "clientId", "clientSecret", "service"],
            "additionalProperties": false,
            "x-business-rules": [
              "Object structure groups related notion properties for better organization and type-safe access"
            ]
          },
          {
            "title": "Qonto",
            "description": "The Qonto connection is a connection to the Qonto API",
            "type": "object",
            "properties": {
              "id": {
                "title": "Connection ID",
                "description": "Unique identifier for this connection",
                "type": "integer",
                "minimum": 1,
                "maximum": 9007199254740991,
                "examples": [1, 2, 10],
                "x-business-rules": [
                  "Uniqueness constraint prevents conflicts and ensures each connection id can be unambiguously referenced",
                  "Maximum enforced at JavaScript MAX_SAFE_INTEGER to prevent number precision loss in client applications"
                ],
                "x-user-stories": [
                  "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                  "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                  "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                ]
              },
              "name": {
                "title": "Connection Name",
                "description": "Human-readable name for this connection to identify it in your application",
                "type": "string",
                "minLength": 1,
                "examples": ["Company Bank Account", "Business Finances", "Invoice Manager"],
                "x-business-rules": [
                  "Human-readable name for this connection to identify it in your application"
                ],
                "x-user-stories": [
                  "GIVEN user provides name with at least 1 characters WHEN validating input THEN value should be accepted",
                  "GIVEN user provides name shorter than 1 chars WHEN validating input THEN error should require minimum length"
                ]
              },
              "clientId": {
                "title": "OAuth Client ID",
                "description": "The OAuth 2.0 client identifier from Qonto API settings. Contact Qonto support to create API credentials.",
                "type": "string",
                "minLength": 1,
                "examples": ["qonto_client_abc123"],
                "x-user-stories": [
                  "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                  "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                  "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                ]
              },
              "clientSecret": {
                "title": "OAuth Client Secret",
                "description": "The OAuth 2.0 client secret from Qonto API settings. Keep this secure and never expose it in client-side code.",
                "type": "string",
                "minLength": 1,
                "examples": ["secret_qonto_xyz789abc123"],
                "x-user-stories": [
                  "GIVEN a user connects external service WHEN providing OAuth client secret THEN authentication should succeed with valid credentials",
                  "GIVEN invalid OAuth client secret WHEN attempting authentication THEN system should return clear error message",
                  "GIVEN stored client secret WHEN automation executes THEN credentials should be used securely without exposure"
                ]
              },
              "service": {
                "title": "Service Type",
                "description": "The type of service this connection integrates with",
                "type": "string",
                "const": "qonto",
                "x-business-rules": [
                  "Fixed value (qonto) identifies this specific root.properties.connections.items.anyOf.6.properties.service type in discriminated unions and routing logic"
                ],
                "x-user-stories": [
                  "GIVEN entity with service='qonto' WHEN processing configuration THEN correct handler should be selected",
                  "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                ]
              }
            },
            "required": ["id", "name", "clientId", "clientSecret", "service"],
            "additionalProperties": false,
            "x-business-rules": [
              "Object structure groups related qonto properties for better organization and type-safe access"
            ]
          }
        ]
      },
      "x-user-stories": [
        "GIVEN the application is running WHEN I connect a connection THEN it should work correctly",
        "GIVEN the application is running WHEN I disconnect a connection THEN it should work correctly",
        "GIVEN the application is running WHEN I copy shareable connection link THEN it should work correctly",
        "GIVEN the application is running WHEN I return a list of connections THEN it should work correctly"
      ],
      "x-business-rules": [
        "Defaults to [] when not specified, providing sensible fallback behavior without requiring explicit configuration"
      ]
    }
  },
  "required": ["name", "description", "version", "tables", "pages", "automations", "connections"],
  "additionalProperties": false,
  "x-business-rules": [
    "Object structure groups related application configuration properties for better organization and type-safe access"
  ]
}
