{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Decimal Field",
  "description": "Floating-point number field with configurable decimal precision (0-10 places). Ideal for measurements, scores, ratings, and scientific data. Precision determines how many decimal places are stored and displayed (default: 2). Supports min/max constraints for range validation. Required flag makes the field mandatory.",
  "type": "object",
  "properties": {
    "id": {
      "$ref": "../../common/definitions.schema.json#/definitions/id",
      "x-user-stories": [
        "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
        "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
        "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
      ]
    },
    "name": {
      "$ref": "../../common/definitions.schema.json#/definitions/name",
      "x-user-stories": [
        "GIVEN new field is created WHEN saving configuration THEN field name should follow database naming conventions",
        "GIVEN field with duplicate name WHEN validating table schema THEN error should prevent conflicts",
        "GIVEN field name is set WHEN querying data THEN field should be accessible by its name"
      ]
    },
    "required": {
      "type": "boolean",
      "default": false,
      "x-business-rules": [
        "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
      ],
      "x-user-stories": [
        "GIVEN required is true WHEN processing entity THEN corresponding behavior should be enforced",
        "GIVEN required is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
        "GIVEN configuration with required WHEN validating settings THEN boolean value should be accepted"
      ]
    },
    "unique": {
      "type": "boolean",
      "default": false,
      "description": "Whether this field must contain unique values across all rows",
      "x-business-rules": [
        "Uniqueness constraint prevents conflicts and ensures each unique can be unambiguously referenced",
        "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
      ],
      "x-user-stories": [
        "GIVEN unique is true WHEN processing entity THEN corresponding behavior should be enforced",
        "GIVEN unique is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
        "GIVEN configuration with unique WHEN validating settings THEN boolean value should be accepted"
      ]
    },
    "indexed": {
      "type": "boolean",
      "default": false,
      "description": "Whether to create a database index on this field for faster queries",
      "x-business-rules": [
        "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
      ],
      "x-user-stories": [
        "GIVEN indexed is true WHEN processing entity THEN corresponding behavior should be enforced",
        "GIVEN indexed is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
        "GIVEN configuration with indexed WHEN validating settings THEN boolean value should be accepted"
      ]
    },
    "type": {
      "const": "decimal",
      "x-business-rules": [
        "Constant value 'decimal' ensures type safety and enables discriminated unions for field type validation"
      ],
      "x-user-stories": [
        "GIVEN a Decimal Field is configured WHEN validating schema THEN type must be 'decimal'",
        "GIVEN type is set to 'decimal' WHEN processing field THEN it should be treated as a Decimal Field"
      ]
    },
    "min": {
      "type": "number",
      "description": "Minimum value",
      "x-user-stories": [
        "GIVEN user provides min WHEN validating input THEN numeric value should be accepted",
        "GIVEN user provides non-numeric min WHEN validating input THEN error should require number"
      ]
    },
    "max": {
      "type": "number",
      "description": "Maximum value",
      "x-user-stories": [
        "GIVEN user provides max WHEN validating input THEN numeric value should be accepted",
        "GIVEN user provides non-numeric max WHEN validating input THEN error should require number"
      ]
    },
    "default": {
      "type": "number",
      "x-user-stories": [
        "GIVEN user provides default WHEN validating input THEN numeric value should be accepted",
        "GIVEN user provides non-numeric default WHEN validating input THEN error should require number"
      ]
    },
    "precision": {
      "type": "integer",
      "description": "Number of decimal places",
      "minimum": 0,
      "maximum": 10,
      "default": 2,
      "x-business-rules": [
        "Numeric range (0-10) prevents overflow errors and ensures values stay within valid business bounds",
        "Defaults to 2 when not specified, providing sensible fallback behavior without requiring explicit configuration"
      ],
      "x-user-stories": [
        "GIVEN user provides precision between 0 and 10 WHEN validating input THEN value should be accepted",
        "GIVEN user provides precision below 0 WHEN validating input THEN error should enforce minimum value",
        "GIVEN user provides precision above 10 WHEN validating input THEN error should enforce maximum value"
      ]
    }
  },
  "required": ["id", "name", "type"],
  "additionalProperties": false,
  "x-business-rules": [
    "Precision (0-10 decimal places) controls rounding and storage, preventing floating-point errors",
    "Default precision of 2 decimal places suits most use cases (prices, percentages) without requiring configuration"
  ]
}
