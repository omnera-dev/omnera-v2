{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Single Attachment Field",
  "description": "Single file upload field with configurable storage backend. Supports local filesystem or S3-compatible cloud storage. Configure maxSize limit (in bytes, default 10MB), allowedTypes using MIME types or wildcards (e.g., image/*, application/pdf). Useful for profile pictures, documents, invoices, and single-file attachments. For S3 provider, bucket name is required.",
  "type": "object",
  "properties": {
    "id": {
      "$ref": "../../common/definitions.schema.json#/definitions/id",
      "x-user-stories": [
        "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
        "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
        "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
      ]
    },
    "name": {
      "$ref": "../../common/definitions.schema.json#/definitions/name",
      "x-user-stories": [
        "GIVEN new field is created WHEN saving configuration THEN field name should follow database naming conventions",
        "GIVEN field with duplicate name WHEN validating table schema THEN error should prevent conflicts",
        "GIVEN field name is set WHEN querying data THEN field should be accessible by its name"
      ]
    },
    "required": {
      "type": "boolean",
      "default": false,
      "x-business-rules": [
        "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
      ],
      "x-user-stories": [
        "GIVEN required is true WHEN processing entity THEN corresponding behavior should be enforced",
        "GIVEN required is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
        "GIVEN configuration with required WHEN validating settings THEN boolean value should be accepted"
      ]
    },
    "indexed": {
      "type": "boolean",
      "default": false,
      "description": "Whether to create a database index on this field for faster queries",
      "x-business-rules": [
        "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
      ],
      "x-user-stories": [
        "GIVEN indexed is true WHEN processing entity THEN corresponding behavior should be enforced",
        "GIVEN indexed is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
        "GIVEN configuration with indexed WHEN validating settings THEN boolean value should be accepted"
      ]
    },
    "type": {
      "type": "string",
      "const": "single-attachment",
      "x-business-rules": [
        "Fixed value (single-attachment) identifies this specific root.properties.tables.items.properties.fields.items.anyOf.7.properties.type type in discriminated unions and routing logic"
      ],
      "x-user-stories": [
        "GIVEN entity with type='single-attachment' WHEN processing configuration THEN correct handler should be selected",
        "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
      ]
    },
    "storage": {
      "type": "object",
      "properties": {
        "provider": {
          "type": "string",
          "enum": ["local", "s3"],
          "default": "local",
          "description": "Storage provider",
          "x-business-rules": [
            "Restricted to 2 allowed values (local, s3) to maintain type safety and enable clear validation error messages",
            "Defaults to \"local\" when not specified, providing sensible fallback behavior without requiring explicit configuration"
          ],
          "x-user-stories": [
            "GIVEN user selects provider from valid options WHEN validating input THEN selection should be accepted",
            "GIVEN user provides invalid provider value WHEN validating input THEN error should list valid options: local, s3",
            "GIVEN provider is set to any valid enum value WHEN processing entity THEN appropriate behavior should execute"
          ]
        },
        "bucket": {
          "type": "string",
          "description": "S3 bucket name (required for s3 provider)",
          "x-business-rules": ["S3 bucket name (required for s3 provider)"],
          "x-user-stories": [
            "GIVEN user provides bucket WHEN validating input THEN string value should be accepted",
            "GIVEN bucket is empty string WHEN validating input THEN behavior should follow optional/required rules"
          ]
        },
        "maxSize": {
          "type": "integer",
          "description": "Maximum file size in bytes",
          "default": 10485760,
          "minimum": 1,
          "x-business-rules": [
            "Defaults to 10485760 when not specified, providing sensible fallback behavior without requiring explicit configuration"
          ],
          "x-user-stories": [
            "GIVEN user provides maxSize >= 1 WHEN validating input THEN value should be accepted",
            "GIVEN user provides maxSize < 1 WHEN validating input THEN error should enforce minimum value"
          ]
        },
        "allowedTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Allowed MIME types or file extensions",
          "default": ["image/*", "application/pdf"],
          "examples": [["image/*"], ["application/pdf", "application/msword"]],
          "x-business-rules": [
            "Defaults to [\"image/*\",\"application/pdf\"] when not specified, providing sensible fallback behavior without requiring explicit configuration"
          ],
          "x-user-stories": [
            "GIVEN user provides allowedTypes array WHEN validating input THEN items should be processed in order",
            "GIVEN allowedTypes array is empty WHEN validating input THEN behavior should follow optional/required rules"
          ]
        }
      },
      "additionalProperties": false,
      "x-business-rules": [
        "Object structure groups related storage properties for better organization and type-safe access"
      ],
      "x-user-stories": [
        "GIVEN user configures storage WHEN validating input THEN value should meet schema requirements",
        "GIVEN storage is set WHEN processing configuration THEN value should be used correctly"
      ]
    }
  },
  "required": ["id", "name", "type"],
  "additionalProperties": false,
  "x-business-rules": [
    "Object structure groups related single attachment field properties for better organization and type-safe access"
  ]
}
