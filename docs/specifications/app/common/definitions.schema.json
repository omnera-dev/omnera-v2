{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Common Definitions",
  "description": "Shared type definitions used across all schemas",
  "definitions": {
    "id": {
      "description": "Unique positive integer identifier for entities. IDs are system-generated, auto-incrementing, and immutable. Must be unique within the parent collection (e.g., field IDs unique within a table, table IDs unique within the application). IDs are read-only and assigned automatically when entities are created. Range: 1 to 9,007,199,254,740,991 (JavaScript MAX_SAFE_INTEGER).",
      "title": "ID",
      "readOnly": true,
      "type": "integer",
      "minimum": 1,
      "maximum": 9007199254740991,
      "examples": [1, 2, 3, 100, 1000],
      "x-business-rules": [
        "IDs are auto-generated by the system using auto-increment sequences and cannot be manually set by users",
        "IDs must be unique within their parent collection scope (e.g., field IDs unique per table, not globally)",
        "IDs are immutable once assigned - they cannot be changed or reused even after entity deletion",
        "Maximum value enforced to ensure JavaScript number safety and prevent integer overflow in client applications"
      ]
    },
    "name": {
      "description": "Internal identifier name used for database tables, columns, and programmatic references. Must follow database naming conventions: start with a letter, contain only lowercase letters, numbers, and underscores, maximum 63 characters (PostgreSQL limit). This name is used in SQL queries, API endpoints, and code generation. Choose descriptive names that clearly indicate the purpose (e.g., \"email_address\" not \"ea\").",
      "title": "Name",
      "type": "string",
      "minLength": 1,
      "maxLength": 63,
      "pattern": "^[a-z][a-z0-9_]*$",
      "examples": [
        "user",
        "product",
        "order_item",
        "customer_email",
        "shipping_address",
        "created_at"
      ],
      "x-business-rules": [
        "Names must follow PostgreSQL identifier naming rules to ensure database compatibility and prevent SQL syntax errors",
        "63-character limit enforced by PostgreSQL system catalog - exceeding this causes database errors",
        "Snake_case convention (lowercase with underscores) ensures consistency across database, API, and code generation",
        "Names should be descriptive and self-documenting to improve code readability and maintainability"
      ]
    },
    "path": {
      "description": "URL path for routing and navigation. Must start with forward slash (/), contain only lowercase letters, numbers, hyphens, and forward slashes. Used for page routing, API endpoints, and navigation links. Paths should be hierarchical and descriptive (e.g., /customers/orders, /admin/settings). Nested paths are supported.",
      "title": "Path",
      "type": "string",
      "pattern": "^/[a-z0-9-/]*$",
      "minLength": 1,
      "examples": [
        "/home",
        "/customers",
        "/products/inventory",
        "/admin/settings",
        "/reports/sales"
      ],
      "x-business-rules": [
        "Paths must start with forward slash to ensure proper URL routing and prevent relative path ambiguity",
        "Lowercase-only convention ensures URL consistency and prevents case-sensitivity issues across different servers",
        "Hierarchical structure (e.g., /parent/child) enables intuitive navigation and clear information architecture",
        "Paths must be unique across all pages and API endpoints to prevent routing conflicts"
      ]
    }
  }
}
