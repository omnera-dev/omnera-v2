{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Update Page",
  "description": "Updates properties, icon, cover, or archived status of a Notion page",
  "type": "object",
  "properties": {
    "name": {
      "type": "string",
      "x-user-stories": [
        "GIVEN user provides name WHEN validating input THEN string value should be accepted",
        "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
      ]
    },
    "account": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "string"
        }
      ],
      "x-user-stories": [
        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
      ]
    },
    "service": {
      "type": "string",
      "const": "notion",
      "x-business-rules": [
        "Fixed value (notion) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.2.properties.service type in discriminated unions and routing logic"
      ],
      "x-user-stories": [
        "GIVEN entity with service='notion' WHEN processing configuration THEN correct handler should be selected",
        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
      ]
    },
    "action": {
      "type": "string",
      "const": "update-page",
      "x-business-rules": [
        "Fixed value (update-page) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.2.properties.action type in discriminated unions and routing logic"
      ],
      "x-user-stories": [
        "GIVEN entity with action='update-page' WHEN processing configuration THEN correct handler should be selected",
        "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
      ]
    },
    "params": {
      "type": "object",
      "properties": {
        "pageId": {
          "description": "The ID of the page to update",
          "type": "string",
          "x-business-rules": ["The ID of the page to update"],
          "x-user-stories": [
            "GIVEN user provides pageId WHEN validating input THEN string value should be accepted",
            "GIVEN pageId is empty string WHEN validating input THEN behavior should follow optional/required rules"
          ]
        },
        "properties": {
          "description": "Page properties to update",
          "type": "object",
          "propertyNames": {
            "type": "string"
          },
          "additionalProperties": {},
          "x-business-rules": [
            "Object structure groups related properties properties for better organization and type-safe access"
          ],
          "x-user-stories": [
            "GIVEN user configures properties WHEN validating input THEN value should meet schema requirements",
            "GIVEN properties is set WHEN processing configuration THEN value should be used correctly"
          ]
        },
        "icon": {
          "description": "Page icon to set",
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "const": "emoji",
                  "x-business-rules": [
                    "Fixed value (emoji) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.2.properties.params.properties.icon.anyOf.0.properties.type type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with type='emoji' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "emoji": {
                  "type": "string",
                  "x-user-stories": [
                    "GIVEN user provides emoji WHEN validating input THEN string value should be accepted",
                    "GIVEN emoji is empty string WHEN validating input THEN behavior should follow optional/required rules"
                  ]
                }
              },
              "required": ["type", "emoji"],
              "additionalProperties": false,
              "x-business-rules": [
                "Object structure groups related 0 properties for better organization and type-safe access"
              ]
            },
            {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "const": "external",
                  "x-business-rules": [
                    "Fixed value (external) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.2.properties.params.properties.icon.anyOf.1.properties.type type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with type='external' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "external": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides url WHEN validating input THEN string value should be accepted",
                        "GIVEN url is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    }
                  },
                  "required": ["url"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related external properties for better organization and type-safe access"
                  ],
                  "x-user-stories": [
                    "GIVEN user configures external WHEN validating input THEN value should meet schema requirements",
                    "GIVEN external is set WHEN processing configuration THEN value should be used correctly"
                  ]
                }
              },
              "required": ["type", "external"],
              "additionalProperties": false,
              "x-business-rules": [
                "Object structure groups related 1 properties for better organization and type-safe access"
              ]
            }
          ],
          "x-user-stories": [
            "GIVEN user configures icon WHEN validating input THEN value should meet schema requirements",
            "GIVEN icon is set WHEN processing configuration THEN value should be used correctly"
          ]
        },
        "cover": {
          "description": "Page cover image to set",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "external",
              "x-business-rules": [
                "Fixed value (external) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.2.properties.params.properties.cover.properties.type type in discriminated unions and routing logic"
              ],
              "x-user-stories": [
                "GIVEN entity with type='external' WHEN processing configuration THEN correct handler should be selected",
                "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
              ]
            },
            "external": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "x-user-stories": [
                    "GIVEN user provides url WHEN validating input THEN string value should be accepted",
                    "GIVEN url is empty string WHEN validating input THEN behavior should follow optional/required rules"
                  ]
                }
              },
              "required": ["url"],
              "additionalProperties": false,
              "x-business-rules": [
                "Object structure groups related external properties for better organization and type-safe access"
              ],
              "x-user-stories": [
                "GIVEN user configures external WHEN validating input THEN value should meet schema requirements",
                "GIVEN external is set WHEN processing configuration THEN value should be used correctly"
              ]
            }
          },
          "required": ["type", "external"],
          "additionalProperties": false,
          "x-business-rules": [
            "Object structure groups related cover properties for better organization and type-safe access"
          ],
          "x-user-stories": [
            "GIVEN user configures cover WHEN validating input THEN value should meet schema requirements",
            "GIVEN cover is set WHEN processing configuration THEN value should be used correctly"
          ]
        },
        "archived": {
          "description": "Whether to archive/unarchive the page",
          "type": "boolean",
          "x-business-rules": [
            "Boolean flag enables/disables archived functionality through simple true/false configuration"
          ],
          "x-user-stories": [
            "GIVEN archived is true WHEN processing entity THEN corresponding behavior should be enforced",
            "GIVEN archived is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
            "GIVEN configuration with archived WHEN validating settings THEN boolean value should be accepted"
          ]
        }
      },
      "required": ["pageId"],
      "additionalProperties": false,
      "x-business-rules": [
        "Object structure groups related params properties for better organization and type-safe access"
      ],
      "x-user-stories": [
        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
      ]
    }
  },
  "required": ["name", "account", "service", "action", "params"],
  "additionalProperties": false,
  "x-business-rules": [
    "Object structure groups related update page properties for better organization and type-safe access"
  ]
}
