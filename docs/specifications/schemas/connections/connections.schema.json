{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Connections",
  "description": "External service integrations that connect your application to third-party platforms. Connections enable OAuth authentication, API access, and data synchronization with services like Calendly (scheduling), Airtable (databases), Google (workspace apps), LinkedIn (professional network), and Facebook (social platform). Each connection requires proper credentials and scopes.",
  "default": [],
  "type": "array",
  "items": {
    "title": "Service Connection",
    "description": "Connect to an external service",
    "anyOf": [
      {
        "title": "Calendly",
        "description": "The Calendly connection is a connection to the Calendly API",
        "type": "object",
        "properties": {
          "id": {
            "title": "Connection ID",
            "description": "Unique identifier for this connection",
            "type": "integer",
            "minimum": 1,
            "maximum": 9007199254740991,
            "examples": [1, 2, 10],
            "x-business-rules": [
              "Uniqueness constraint prevents conflicts and ensures each connection id can be unambiguously referenced",
              "Maximum enforced at JavaScript MAX_SAFE_INTEGER to prevent number precision loss in client applications"
            ],
            "x-user-stories": [
              "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
              "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
              "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
            ]
          },
          "name": {
            "title": "Connection Name",
            "description": "Human-readable name for this connection to identify it in your application",
            "type": "string",
            "minLength": 1,
            "examples": ["My Calendly Account", "Production Calendly", "Team Calendar"],
            "x-business-rules": [
              "Human-readable name for this connection to identify it in your application"
            ],
            "x-user-stories": [
              "GIVEN user provides name with at least 1 characters WHEN validating input THEN value should be accepted",
              "GIVEN user provides name shorter than 1 chars WHEN validating input THEN error should require minimum length"
            ]
          },
          "clientId": {
            "title": "OAuth Client ID",
            "description": "The OAuth 2.0 client identifier from your Calendly app settings. Find this in your Calendly developer dashboard.",
            "type": "string",
            "minLength": 1,
            "examples": ["abc123def456ghi789"],
            "x-user-stories": [
              "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
              "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
              "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
            ]
          },
          "clientSecret": {
            "title": "OAuth Client Secret",
            "description": "The OAuth 2.0 client secret from your Calendly app settings. Keep this secure and never expose it in client-side code.",
            "type": "string",
            "minLength": 1,
            "examples": ["secret_key_abc123def456"],
            "x-user-stories": [
              "GIVEN a user connects external service WHEN providing OAuth client secret THEN authentication should succeed with valid credentials",
              "GIVEN invalid OAuth client secret WHEN attempting authentication THEN system should return clear error message",
              "GIVEN stored client secret WHEN automation executes THEN credentials should be used securely without exposure"
            ]
          },
          "service": {
            "title": "Service Type",
            "description": "The type of service this connection integrates with",
            "type": "string",
            "const": "calendly",
            "x-business-rules": [
              "Fixed value (calendly) identifies this specific root.properties.connections.items.anyOf.0.properties.service type in discriminated unions and routing logic"
            ],
            "x-user-stories": [
              "GIVEN entity with service='calendly' WHEN processing configuration THEN correct handler should be selected",
              "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
            ]
          }
        },
        "required": ["id", "name", "clientId", "clientSecret", "service"],
        "additionalProperties": false,
        "x-user-stories": [
          "GIVEN the application is running WHEN I connect to calendly THEN it should work correctly"
        ],
        "x-business-rules": [
          "Object structure groups related calendly properties for better organization and type-safe access"
        ]
      },
      {
        "title": "Airtable",
        "description": "The Airtable connection is a connection to the Airtable API",
        "type": "object",
        "properties": {
          "id": {
            "title": "Connection ID",
            "description": "Unique identifier for this connection",
            "type": "integer",
            "minimum": 1,
            "maximum": 9007199254740991,
            "examples": [1, 2, 10],
            "x-business-rules": [
              "Uniqueness constraint prevents conflicts and ensures each connection id can be unambiguously referenced",
              "Maximum enforced at JavaScript MAX_SAFE_INTEGER to prevent number precision loss in client applications"
            ],
            "x-user-stories": [
              "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
              "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
              "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
            ]
          },
          "name": {
            "title": "Connection Name",
            "description": "Human-readable name for this connection to identify it in your application",
            "type": "string",
            "minLength": 1,
            "examples": ["My Airtable Workspace", "Production Airtable", "Marketing Base"],
            "x-business-rules": [
              "Human-readable name for this connection to identify it in your application"
            ],
            "x-user-stories": [
              "GIVEN user provides name with at least 1 characters WHEN validating input THEN value should be accepted",
              "GIVEN user provides name shorter than 1 chars WHEN validating input THEN error should require minimum length"
            ]
          },
          "clientId": {
            "title": "OAuth Client ID",
            "description": "The OAuth 2.0 client identifier from your Airtable app settings. Create an OAuth integration in your Airtable account.",
            "type": "string",
            "minLength": 1,
            "examples": ["airtable_client_xyz789"],
            "x-user-stories": [
              "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
              "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
              "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
            ]
          },
          "clientSecret": {
            "title": "OAuth Client Secret",
            "description": "The OAuth 2.0 client secret from your Airtable app settings. Keep this secure and never expose it in client-side code.",
            "type": "string",
            "minLength": 1,
            "examples": ["secret_airtable_abc123"],
            "x-user-stories": [
              "GIVEN a user connects external service WHEN providing OAuth client secret THEN authentication should succeed with valid credentials",
              "GIVEN invalid OAuth client secret WHEN attempting authentication THEN system should return clear error message",
              "GIVEN stored client secret WHEN automation executes THEN credentials should be used securely without exposure"
            ]
          },
          "service": {
            "title": "Service Type",
            "description": "The type of service this connection integrates with",
            "type": "string",
            "const": "airtable",
            "x-business-rules": [
              "Fixed value (airtable) identifies this specific root.properties.connections.items.anyOf.1.properties.service type in discriminated unions and routing logic"
            ],
            "x-user-stories": [
              "GIVEN entity with service='airtable' WHEN processing configuration THEN correct handler should be selected",
              "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
            ]
          }
        },
        "required": ["id", "name", "clientId", "clientSecret", "service"],
        "additionalProperties": false,
        "x-user-stories": [
          "GIVEN the application is running WHEN I connect to airtable THEN it should work correctly"
        ],
        "x-business-rules": [
          "Object structure groups related airtable properties for better organization and type-safe access"
        ]
      },
      {
        "anyOf": [
          {
            "title": "Google Gmail",
            "description": "The Google Gmail connection is a connection to the Google Gmail API",
            "type": "object",
            "properties": {
              "id": {
                "title": "Connection ID",
                "description": "Unique identifier for this connection",
                "type": "integer",
                "minimum": 1,
                "maximum": 9007199254740991,
                "examples": [1, 2, 10],
                "x-business-rules": [
                  "Uniqueness constraint prevents conflicts and ensures each connection id can be unambiguously referenced",
                  "Maximum enforced at JavaScript MAX_SAFE_INTEGER to prevent number precision loss in client applications"
                ],
                "x-user-stories": [
                  "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                  "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                  "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                ]
              },
              "name": {
                "title": "Connection Name",
                "description": "Human-readable name for this connection to identify it in your application",
                "type": "string",
                "minLength": 1,
                "examples": ["Company Gmail", "Support Email Account", "Marketing Gmail"],
                "x-business-rules": [
                  "Human-readable name for this connection to identify it in your application"
                ],
                "x-user-stories": [
                  "GIVEN user provides name with at least 1 characters WHEN validating input THEN value should be accepted",
                  "GIVEN user provides name shorter than 1 chars WHEN validating input THEN error should require minimum length"
                ]
              },
              "clientId": {
                "title": "OAuth Client ID",
                "description": "The OAuth 2.0 client identifier from Google Cloud Console. Create credentials in the APIs & Services section.",
                "type": "string",
                "minLength": 1,
                "examples": ["123456789-abc123.apps.googleusercontent.com"],
                "x-user-stories": [
                  "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                  "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                  "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                ]
              },
              "clientSecret": {
                "title": "OAuth Client Secret",
                "description": "The OAuth 2.0 client secret from Google Cloud Console. Keep this secure and never expose it in client-side code.",
                "type": "string",
                "minLength": 1,
                "examples": ["GOCSPX-abc123def456ghi789"],
                "x-user-stories": [
                  "GIVEN a user connects external service WHEN providing OAuth client secret THEN authentication should succeed with valid credentials",
                  "GIVEN invalid OAuth client secret WHEN attempting authentication THEN system should return clear error message",
                  "GIVEN stored client secret WHEN automation executes THEN credentials should be used securely without exposure"
                ]
              },
              "service": {
                "title": "Service Type",
                "description": "The type of service this connection integrates with",
                "type": "string",
                "const": "google-gmail",
                "x-business-rules": [
                  "Fixed value (google-gmail) identifies this specific root.properties.connections.items.anyOf.2.anyOf.0.properties.service type in discriminated unions and routing logic"
                ],
                "x-user-stories": [
                  "GIVEN entity with service='google-gmail' WHEN processing configuration THEN correct handler should be selected",
                  "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                ]
              }
            },
            "required": ["id", "name", "clientId", "clientSecret", "service"],
            "additionalProperties": false,
            "x-business-rules": [
              "Object structure groups related google gmail properties for better organization and type-safe access"
            ]
          },
          {
            "title": "Google Sheets",
            "description": "The Google Sheets connection is a connection to the Google Sheets API",
            "type": "object",
            "properties": {
              "id": {
                "title": "Connection ID",
                "description": "Unique identifier for this connection",
                "type": "integer",
                "minimum": 1,
                "maximum": 9007199254740991,
                "examples": [1, 2, 10],
                "x-business-rules": [
                  "Uniqueness constraint prevents conflicts and ensures each connection id can be unambiguously referenced",
                  "Maximum enforced at JavaScript MAX_SAFE_INTEGER to prevent number precision loss in client applications"
                ],
                "x-user-stories": [
                  "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                  "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                  "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                ]
              },
              "name": {
                "title": "Connection Name",
                "description": "Human-readable name for this connection to identify it in your application",
                "type": "string",
                "minLength": 1,
                "examples": ["Company Spreadsheets", "Data Export Sheets", "Report Builder"],
                "x-business-rules": [
                  "Human-readable name for this connection to identify it in your application"
                ],
                "x-user-stories": [
                  "GIVEN user provides name with at least 1 characters WHEN validating input THEN value should be accepted",
                  "GIVEN user provides name shorter than 1 chars WHEN validating input THEN error should require minimum length"
                ]
              },
              "clientId": {
                "title": "OAuth Client ID",
                "description": "The OAuth 2.0 client identifier from Google Cloud Console. Create credentials in the APIs & Services section.",
                "type": "string",
                "minLength": 1,
                "examples": ["123456789-xyz789.apps.googleusercontent.com"],
                "x-user-stories": [
                  "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                  "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                  "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                ]
              },
              "clientSecret": {
                "title": "OAuth Client Secret",
                "description": "The OAuth 2.0 client secret from Google Cloud Console. Keep this secure and never expose it in client-side code.",
                "type": "string",
                "minLength": 1,
                "examples": ["GOCSPX-xyz789abc123def456"],
                "x-user-stories": [
                  "GIVEN a user connects external service WHEN providing OAuth client secret THEN authentication should succeed with valid credentials",
                  "GIVEN invalid OAuth client secret WHEN attempting authentication THEN system should return clear error message",
                  "GIVEN stored client secret WHEN automation executes THEN credentials should be used securely without exposure"
                ]
              },
              "service": {
                "title": "Service Type",
                "description": "The type of service this connection integrates with",
                "type": "string",
                "const": "google-sheets",
                "x-business-rules": [
                  "Fixed value (google-sheets) identifies this specific root.properties.connections.items.anyOf.2.anyOf.1.properties.service type in discriminated unions and routing logic"
                ],
                "x-user-stories": [
                  "GIVEN entity with service='google-sheets' WHEN processing configuration THEN correct handler should be selected",
                  "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                ]
              }
            },
            "required": ["id", "name", "clientId", "clientSecret", "service"],
            "additionalProperties": false,
            "x-business-rules": [
              "Object structure groups related google sheets properties for better organization and type-safe access"
            ]
          }
        ],
        "x-user-stories": [
          "GIVEN the application is running WHEN I connect to Google Sheets THEN it should work correctly",
          "GIVEN the application is running WHEN I connect to Gmail THEN it should work correctly"
        ]
      },
      {
        "title": "LinkedIn Ads",
        "description": "The LinkedIn Ads connection is a connection to the LinkedIn Ads API",
        "type": "object",
        "properties": {
          "id": {
            "title": "Connection ID",
            "description": "Unique identifier for this connection",
            "type": "integer",
            "minimum": 1,
            "maximum": 9007199254740991,
            "examples": [1, 2, 10],
            "x-business-rules": [
              "Uniqueness constraint prevents conflicts and ensures each connection id can be unambiguously referenced",
              "Maximum enforced at JavaScript MAX_SAFE_INTEGER to prevent number precision loss in client applications"
            ],
            "x-user-stories": [
              "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
              "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
              "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
            ]
          },
          "name": {
            "title": "Connection Name",
            "description": "Human-readable name for this connection to identify it in your application",
            "type": "string",
            "minLength": 1,
            "examples": ["LinkedIn Campaign Manager", "Lead Gen Forms", "B2B Ads Account"],
            "x-business-rules": [
              "Human-readable name for this connection to identify it in your application"
            ],
            "x-user-stories": [
              "GIVEN user provides name with at least 1 characters WHEN validating input THEN value should be accepted",
              "GIVEN user provides name shorter than 1 chars WHEN validating input THEN error should require minimum length"
            ]
          },
          "clientId": {
            "title": "OAuth Client ID",
            "description": "The OAuth 2.0 client identifier from LinkedIn Developer Portal. Create an app in the LinkedIn Developers section.",
            "type": "string",
            "minLength": 1,
            "examples": ["86abcdefgh123456"],
            "x-user-stories": [
              "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
              "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
              "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
            ]
          },
          "clientSecret": {
            "title": "OAuth Client Secret",
            "description": "The OAuth 2.0 client secret from LinkedIn Developer Portal. Keep this secure and never expose it in client-side code.",
            "type": "string",
            "minLength": 1,
            "examples": ["abc123def456ghi789jkl"],
            "x-user-stories": [
              "GIVEN a user connects external service WHEN providing OAuth client secret THEN authentication should succeed with valid credentials",
              "GIVEN invalid OAuth client secret WHEN attempting authentication THEN system should return clear error message",
              "GIVEN stored client secret WHEN automation executes THEN credentials should be used securely without exposure"
            ]
          },
          "service": {
            "title": "Service Type",
            "description": "The type of service this connection integrates with",
            "type": "string",
            "const": "linkedin-ads",
            "x-business-rules": [
              "Fixed value (linkedin-ads) identifies this specific root.properties.connections.items.anyOf.3.properties.service type in discriminated unions and routing logic"
            ],
            "x-user-stories": [
              "GIVEN entity with service='linkedin-ads' WHEN processing configuration THEN correct handler should be selected",
              "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
            ]
          }
        },
        "required": ["id", "name", "clientId", "clientSecret", "service"],
        "additionalProperties": false,
        "x-user-stories": [
          "GIVEN the application is running WHEN I connect to linkedin THEN it should work correctly"
        ],
        "x-business-rules": [
          "Object structure groups related linkedin ads properties for better organization and type-safe access"
        ]
      },
      {
        "title": "Facebook Ads",
        "description": "The Facebook Ads connection is a connection to the Facebook Ads API",
        "type": "object",
        "properties": {
          "id": {
            "title": "Connection ID",
            "description": "Unique identifier for this connection",
            "type": "integer",
            "minimum": 1,
            "maximum": 9007199254740991,
            "examples": [1, 2, 10],
            "x-business-rules": [
              "Uniqueness constraint prevents conflicts and ensures each connection id can be unambiguously referenced",
              "Maximum enforced at JavaScript MAX_SAFE_INTEGER to prevent number precision loss in client applications"
            ],
            "x-user-stories": [
              "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
              "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
              "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
            ]
          },
          "name": {
            "title": "Connection Name",
            "description": "Human-readable name for this connection to identify it in your application",
            "type": "string",
            "minLength": 1,
            "examples": ["Facebook Business Manager", "Lead Ads Account", "Social Media Campaigns"],
            "x-business-rules": [
              "Human-readable name for this connection to identify it in your application"
            ],
            "x-user-stories": [
              "GIVEN user provides name with at least 1 characters WHEN validating input THEN value should be accepted",
              "GIVEN user provides name shorter than 1 chars WHEN validating input THEN error should require minimum length"
            ]
          },
          "clientId": {
            "title": "App ID",
            "description": "The Facebook App ID from Meta for Developers. Create an app in the Facebook App Dashboard.",
            "type": "string",
            "minLength": 1,
            "examples": ["123456789012345"],
            "x-business-rules": ["The Facebook App ID from Meta for Developers"],
            "x-user-stories": [
              "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
              "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
              "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
            ]
          },
          "clientSecret": {
            "title": "App Secret",
            "description": "The Facebook App Secret from Meta for Developers. Keep this secure and never expose it in client-side code.",
            "type": "string",
            "minLength": 1,
            "examples": ["abc123def456ghi789jkl012mno345"],
            "x-business-rules": ["The Facebook App Secret from Meta for Developers"],
            "x-user-stories": [
              "GIVEN a user connects external service WHEN providing OAuth client secret THEN authentication should succeed with valid credentials",
              "GIVEN invalid OAuth client secret WHEN attempting authentication THEN system should return clear error message",
              "GIVEN stored client secret WHEN automation executes THEN credentials should be used securely without exposure"
            ]
          },
          "service": {
            "title": "Service Type",
            "description": "The type of service this connection integrates with",
            "type": "string",
            "const": "facebook-ads",
            "x-business-rules": [
              "Fixed value (facebook-ads) identifies this specific root.properties.connections.items.anyOf.4.properties.service type in discriminated unions and routing logic"
            ],
            "x-user-stories": [
              "GIVEN entity with service='facebook-ads' WHEN processing configuration THEN correct handler should be selected",
              "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
            ]
          }
        },
        "required": ["id", "name", "clientId", "clientSecret", "service"],
        "additionalProperties": false,
        "x-user-stories": [
          "GIVEN the application is running WHEN I connect to facebook THEN it should work correctly"
        ],
        "x-business-rules": [
          "Object structure groups related facebook ads properties for better organization and type-safe access"
        ]
      },
      {
        "title": "Notion",
        "description": "The Notion connection is a connection to the Notion API",
        "type": "object",
        "properties": {
          "id": {
            "title": "Connection ID",
            "description": "Unique identifier for this connection",
            "type": "integer",
            "minimum": 1,
            "maximum": 9007199254740991,
            "examples": [1, 2, 10],
            "x-business-rules": [
              "Uniqueness constraint prevents conflicts and ensures each connection id can be unambiguously referenced",
              "Maximum enforced at JavaScript MAX_SAFE_INTEGER to prevent number precision loss in client applications"
            ],
            "x-user-stories": [
              "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
              "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
              "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
            ]
          },
          "name": {
            "title": "Connection Name",
            "description": "Human-readable name for this connection to identify it in your application",
            "type": "string",
            "minLength": 1,
            "examples": ["Company Wiki", "Project Documentation", "Knowledge Base"],
            "x-business-rules": [
              "Human-readable name for this connection to identify it in your application"
            ],
            "x-user-stories": [
              "GIVEN user provides name with at least 1 characters WHEN validating input THEN value should be accepted",
              "GIVEN user provides name shorter than 1 chars WHEN validating input THEN error should require minimum length"
            ]
          },
          "clientId": {
            "title": "OAuth Client ID",
            "description": "The OAuth 2.0 client identifier from Notion integrations page. Create an integration in your Notion workspace settings.",
            "type": "string",
            "minLength": 1,
            "examples": ["abc-123-def-456-ghi-789"],
            "x-user-stories": [
              "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
              "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
              "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
            ]
          },
          "clientSecret": {
            "title": "OAuth Client Secret",
            "description": "The OAuth 2.0 client secret from Notion integrations page. Keep this secure and never expose it in client-side code.",
            "type": "string",
            "minLength": 1,
            "examples": ["secret_abc123DEF456ghi789JKL012"],
            "x-user-stories": [
              "GIVEN a user connects external service WHEN providing OAuth client secret THEN authentication should succeed with valid credentials",
              "GIVEN invalid OAuth client secret WHEN attempting authentication THEN system should return clear error message",
              "GIVEN stored client secret WHEN automation executes THEN credentials should be used securely without exposure"
            ]
          },
          "service": {
            "title": "Service Type",
            "description": "The type of service this connection integrates with",
            "type": "string",
            "const": "notion",
            "x-business-rules": [
              "Fixed value (notion) identifies this specific root.properties.connections.items.anyOf.5.properties.service type in discriminated unions and routing logic"
            ],
            "x-user-stories": [
              "GIVEN entity with service='notion' WHEN processing configuration THEN correct handler should be selected",
              "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
            ]
          }
        },
        "required": ["id", "name", "clientId", "clientSecret", "service"],
        "additionalProperties": false,
        "x-business-rules": [
          "Object structure groups related notion properties for better organization and type-safe access"
        ]
      },
      {
        "title": "Qonto",
        "description": "The Qonto connection is a connection to the Qonto API",
        "type": "object",
        "properties": {
          "id": {
            "title": "Connection ID",
            "description": "Unique identifier for this connection",
            "type": "integer",
            "minimum": 1,
            "maximum": 9007199254740991,
            "examples": [1, 2, 10],
            "x-business-rules": [
              "Uniqueness constraint prevents conflicts and ensures each connection id can be unambiguously referenced",
              "Maximum enforced at JavaScript MAX_SAFE_INTEGER to prevent number precision loss in client applications"
            ],
            "x-user-stories": [
              "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
              "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
              "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
            ]
          },
          "name": {
            "title": "Connection Name",
            "description": "Human-readable name for this connection to identify it in your application",
            "type": "string",
            "minLength": 1,
            "examples": ["Company Bank Account", "Business Finances", "Invoice Manager"],
            "x-business-rules": [
              "Human-readable name for this connection to identify it in your application"
            ],
            "x-user-stories": [
              "GIVEN user provides name with at least 1 characters WHEN validating input THEN value should be accepted",
              "GIVEN user provides name shorter than 1 chars WHEN validating input THEN error should require minimum length"
            ]
          },
          "clientId": {
            "title": "OAuth Client ID",
            "description": "The OAuth 2.0 client identifier from Qonto API settings. Contact Qonto support to create API credentials.",
            "type": "string",
            "minLength": 1,
            "examples": ["qonto_client_abc123"],
            "x-user-stories": [
              "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
              "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
              "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
            ]
          },
          "clientSecret": {
            "title": "OAuth Client Secret",
            "description": "The OAuth 2.0 client secret from Qonto API settings. Keep this secure and never expose it in client-side code.",
            "type": "string",
            "minLength": 1,
            "examples": ["secret_qonto_xyz789abc123"],
            "x-user-stories": [
              "GIVEN a user connects external service WHEN providing OAuth client secret THEN authentication should succeed with valid credentials",
              "GIVEN invalid OAuth client secret WHEN attempting authentication THEN system should return clear error message",
              "GIVEN stored client secret WHEN automation executes THEN credentials should be used securely without exposure"
            ]
          },
          "service": {
            "title": "Service Type",
            "description": "The type of service this connection integrates with",
            "type": "string",
            "const": "qonto",
            "x-business-rules": [
              "Fixed value (qonto) identifies this specific root.properties.connections.items.anyOf.6.properties.service type in discriminated unions and routing logic"
            ],
            "x-user-stories": [
              "GIVEN entity with service='qonto' WHEN processing configuration THEN correct handler should be selected",
              "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
            ]
          }
        },
        "required": ["id", "name", "clientId", "clientSecret", "service"],
        "additionalProperties": false,
        "x-business-rules": [
          "Object structure groups related qonto properties for better organization and type-safe access"
        ]
      }
    ]
  },
  "x-user-stories": [
    "GIVEN the application is running WHEN I connect a connection THEN it should work correctly",
    "GIVEN the application is running WHEN I disconnect a connection THEN it should work correctly",
    "GIVEN the application is running WHEN I copy shareable connection link THEN it should work correctly",
    "GIVEN the application is running WHEN I return a list of connections THEN it should work correctly"
  ],
  "x-business-rules": [
    "Defaults to [] when not specified, providing sensible fallback behavior without requiring explicit configuration"
  ]
}
