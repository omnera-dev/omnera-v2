{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Formula Field",
  "description": "Computed field that automatically calculates values using formula expressions. Formulas can reference other fields, use operators (+, -, *, /, =, >, <), and call functions (CONCAT, IF, ROUND, SUM, etc.). Specify resultType (text, number, boolean, date) for proper type handling. Optionally set display format (currency, percentage, decimal, date). Formulas are read-only and recalculate when dependent fields change. Useful for totals, concatenations, conditional logic, and derived values.",
  "type": "object",
  "properties": {
    "id": {
      "$ref": "../../common/definitions.schema.json#/definitions/id",
      "x-user-stories": [
        "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
        "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
        "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
      ]
    },
    "name": {
      "$ref": "../../common/definitions.schema.json#/definitions/name",
      "x-user-stories": [
        "GIVEN new field is created WHEN saving configuration THEN field name should follow database naming conventions",
        "GIVEN field with duplicate name WHEN validating table schema THEN error should prevent conflicts",
        "GIVEN field name is set WHEN querying data THEN field should be accessible by its name"
      ]
    },
    "type": {
      "type": "string",
      "const": "formula",
      "x-business-rules": [
        "Fixed value (formula) identifies this specific root.properties.tables.items.properties.fields.items.anyOf.9.properties.type type in discriminated unions and routing logic"
      ],
      "x-user-stories": [
        "GIVEN entity with type='formula' WHEN processing configuration THEN correct handler should be selected",
        "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
      ]
    },
    "formula": {
      "type": "string",
      "description": "Formula expression to compute the value. Supports field references, operators, and functions.",
      "minLength": 1,
      "examples": [
        "price * quantity",
        "CONCAT(first_name, ' ', last_name)",
        "IF(status = 'active', 'Yes', 'No')",
        "ROUND(total * 0.15, 2)"
      ],
      "x-business-rules": ["Formula expression to compute the value"],
      "x-user-stories": [
        "GIVEN user provides formula with at least 1 characters WHEN validating input THEN value should be accepted",
        "GIVEN user provides formula shorter than 1 chars WHEN validating input THEN error should require minimum length"
      ]
    },
    "resultType": {
      "type": "string",
      "enum": ["text", "number", "boolean", "date"],
      "default": "text",
      "description": "Expected data type of the formula result",
      "x-business-rules": [
        "Restricted to 4 allowed values (text, number, boolean, ...) to maintain type safety and enable clear validation error messages",
        "Defaults to \"text\" when not specified, providing sensible fallback behavior without requiring explicit configuration"
      ],
      "x-user-stories": [
        "GIVEN user selects resultType from valid options WHEN validating input THEN selection should be accepted",
        "GIVEN user provides invalid resultType value WHEN validating input THEN error should list valid options: text, number, boolean",
        "GIVEN resultType is set to any valid enum value WHEN processing entity THEN appropriate behavior should execute"
      ]
    },
    "format": {
      "type": "string",
      "description": "Display format for the result (e.g., currency, percentage)",
      "examples": ["currency", "percentage", "decimal", "date"],
      "x-business-rules": ["Display format for the result (e"],
      "x-user-stories": [
        "GIVEN user provides format WHEN validating input THEN string value should be accepted",
        "GIVEN format is empty string WHEN validating input THEN behavior should follow optional/required rules"
      ]
    }
  },
  "required": ["id", "name", "type", "formula"],
  "additionalProperties": false,
  "x-business-rules": [
    "Formula Field is immutable after creation to ensure data integrity and prevent accidental corruption"
  ]
}
