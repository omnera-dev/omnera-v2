{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Single Select Field",
  "description": "Single selection dropdown from predefined options. Users can choose exactly one value from the list. Useful for status fields (Active, Inactive, Pending), categories, priority levels (High, Medium, Low), and enumerated values. Requires at least one option. Supports default value. Indexing improves filtering by option value.",
  "type": "object",
  "properties": {
    "id": {
      "$ref": "../../common/definitions.schema.json#/definitions/id",
      "x-user-stories": [
        "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
        "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
        "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
      ]
    },
    "name": {
      "$ref": "../../common/definitions.schema.json#/definitions/name",
      "x-user-stories": [
        "GIVEN new field is created WHEN saving configuration THEN field name should follow database naming conventions",
        "GIVEN field with duplicate name WHEN validating table schema THEN error should prevent conflicts",
        "GIVEN field name is set WHEN querying data THEN field should be accessible by its name"
      ]
    },
    "required": {
      "type": "boolean",
      "default": false,
      "x-business-rules": [
        "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
      ],
      "x-user-stories": [
        "GIVEN required is true WHEN processing entity THEN corresponding behavior should be enforced",
        "GIVEN required is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
        "GIVEN configuration with required WHEN validating settings THEN boolean value should be accepted"
      ]
    },
    "indexed": {
      "type": "boolean",
      "default": false,
      "description": "Whether to create a database index on this field for faster queries",
      "x-business-rules": [
        "Defaults to false when not specified, providing sensible fallback behavior without requiring explicit configuration"
      ],
      "x-user-stories": [
        "GIVEN indexed is true WHEN processing entity THEN corresponding behavior should be enforced",
        "GIVEN indexed is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
        "GIVEN configuration with indexed WHEN validating settings THEN boolean value should be accepted"
      ]
    },
    "type": {
      "type": "string",
      "const": "single-select",
      "x-business-rules": [
        "Fixed value (single-select) identifies this specific root.properties.tables.items.properties.fields.items.anyOf.4.properties.type type in discriminated unions and routing logic"
      ],
      "x-user-stories": [
        "GIVEN entity with type='single-select' WHEN processing configuration THEN correct handler should be selected",
        "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
      ]
    },
    "options": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "minItems": 1,
      "default": [],
      "x-business-rules": [
        "Defaults to [] when not specified, providing sensible fallback behavior without requiring explicit configuration"
      ],
      "x-user-stories": [
        "GIVEN user provides options with at least 1 items WHEN validating input THEN array should be accepted",
        "GIVEN user provides options with fewer than 1 items WHEN validating input THEN error should enforce minimum items"
      ]
    },
    "default": {
      "type": "string",
      "x-user-stories": [
        "GIVEN user provides default WHEN validating input THEN string value should be accepted",
        "GIVEN default is empty string WHEN validating input THEN behavior should follow optional/required rules"
      ]
    }
  },
  "required": ["id", "name", "type", "options"],
  "additionalProperties": false,
  "x-user-stories": [
    "GIVEN I am working with a single select field WHEN I create a record THEN it should complete successfully",
    "GIVEN I am working with an invalid single select field WHEN I create a record THEN it should fail with validation error"
  ],
  "x-business-rules": [
    "Object structure groups related single select field properties for better organization and type-safe access"
  ]
}
