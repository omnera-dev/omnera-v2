{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Get Event Type",
  "description": "Gets the event type for a given uuid",
  "type": "object",
  "properties": {
    "name": {
      "type": "string",
      "x-user-stories": [
        "GIVEN user provides name WHEN validating input THEN string value should be accepted",
        "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
      ]
    },
    "account": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "string"
        }
      ],
      "x-user-stories": [
        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
      ]
    },
    "service": {
      "type": "string",
      "const": "calendly",
      "x-business-rules": [
        "Fixed value (calendly) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.0.anyOf.1.properties.service type in discriminated unions and routing logic"
      ],
      "x-user-stories": [
        "GIVEN entity with service='calendly' WHEN processing configuration THEN correct handler should be selected",
        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
      ]
    },
    "action": {
      "type": "string",
      "const": "get-event-type",
      "x-business-rules": [
        "Fixed value (get-event-type) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.0.anyOf.1.properties.action type in discriminated unions and routing logic"
      ],
      "x-user-stories": [
        "GIVEN entity with action='get-event-type' WHEN processing configuration THEN correct handler should be selected",
        "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
      ]
    },
    "params": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "x-user-stories": [
            "GIVEN user provides uuid WHEN validating input THEN string value should be accepted",
            "GIVEN uuid is empty string WHEN validating input THEN behavior should follow optional/required rules"
          ]
        }
      },
      "required": ["uuid"],
      "additionalProperties": false,
      "x-business-rules": [
        "Object structure groups related params properties for better organization and type-safe access"
      ],
      "x-user-stories": [
        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
      ]
    }
  },
  "required": ["name", "account", "service", "action", "params"],
  "additionalProperties": false,
  "x-business-rules": [
    "Object structure groups related get event type properties for better organization and type-safe access"
  ]
}
