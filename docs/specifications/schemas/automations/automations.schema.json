{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Automations",
  "description": "Workflow automations that execute actions when triggered by specific events or conditions. Automations enable business logic such as sending emails when records are created, updating related data when values change, or integrating with external services via webhooks. Each automation consists of a trigger (when to run) and a sequence of actions (what to do).",
  "default": [],
  "type": "array",
  "items": {
    "$ref": "#/definitions/automation"
  },
  "x-business-rules": [
    "Defaults to [] when not specified, providing sensible fallback behavior without requiring explicit configuration"
  ],
  "x-user-stories": [
    "GIVEN user provides automations array WHEN validating input THEN items should be processed in order",
    "GIVEN automations array is empty WHEN validating input THEN behavior should follow optional/required rules"
  ],
  "definitions": {
    "automation": {
      "title": "Automation Workflow",
      "description": "A workflow that executes a series of actions when triggered by specific events or conditions",
      "type": "object",
      "properties": {
        "id": {
          "$ref": "../common/definitions.schema.json#/definitions/id",
          "title": "Automation ID",
          "examples": [1, 2, 100],
          "x-user-stories": [
            "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
            "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
            "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
          ]
        },
        "name": {
          "description": "Name of the automation workflow",
          "title": "Automation Name",
          "placeholder": "Enter automation name",
          "examples": ["Send Welcome Email", "Process Order", "Sync Customer Data"],
          "type": "string",
          "minLength": 3,
          "x-business-rules": [
            "Minimum 3 characters required to ensure automation names are descriptive enough for identification in lists",
            "Names should clearly describe the automation's purpose for easier management and debugging",
            "Names are displayed in automation lists, logs, and error messages for user reference"
          ],
          "x-user-stories": [
            "GIVEN user provides name with at least 3 characters WHEN validating input THEN value should be accepted",
            "GIVEN user provides name shorter than 3 chars WHEN validating input THEN error should require minimum length"
          ]
        },
        "description": {
          "description": "Detailed description of what this automation does",
          "title": "Description",
          "placeholder": "Describe what this automation does",
          "examples": [
            "Sends a welcome email when a new user signs up",
            "Processes incoming orders and updates inventory"
          ],
          "type": "string",
          "x-business-rules": [
            "Optional field that provides additional context about the automation's behavior and purpose",
            "Descriptions help team members understand complex workflows without examining the implementation details",
            "Should explain the business logic and expected outcomes rather than technical implementation"
          ],
          "x-user-stories": [
            "GIVEN user provides description WHEN validating input THEN string value should be accepted",
            "GIVEN description is empty string WHEN validating input THEN behavior should follow optional/required rules"
          ]
        },
        "editUrl": {
          "description": "URL to edit this automation in an external tool",
          "title": "Edit URL",
          "placeholder": "https://example.com/automations/edit/123",
          "examples": [
            "https://zapier.com/app/editor/123456",
            "https://make.com/scenario/edit/789"
          ],
          "type": "string",
          "format": "uri",
          "x-business-rules": [
            "Optional URL linking to external automation builder tools (Zapier, Make, n8n) for visual workflow editing",
            "Enables integration with third-party automation platforms while maintaining configuration in Omnera",
            "Must be valid URI format to ensure clickable links work correctly in the UI"
          ],
          "x-user-stories": [
            "GIVEN user provides URL WHEN validating input THEN valid URLs should be accepted",
            "GIVEN user provides invalid URL WHEN validating input THEN clear error message should be displayed",
            "GIVEN URL is stored WHEN user accesses it THEN link should navigate to correct destination"
          ]
        },
        "trigger": {
          "$ref": "#/definitions/automation_trigger",
          "x-user-stories": [
            "GIVEN user configures trigger WHEN validating input THEN value should meet schema requirements",
            "GIVEN trigger is set WHEN processing configuration THEN value should be used correctly"
          ]
        },
        "actions": {
          "description": "Sequence of actions to execute when triggered",
          "title": "Actions",
          "default": [],
          "type": "array",
          "items": {
            "$ref": "#/definitions/automation_action"
          },
          "x-business-rules": [
            "Actions execute sequentially in the order defined, with each action receiving the output of the previous action",
            "Empty actions array is valid but creates a no-op automation that triggers without performing any operations",
            "Action failures can be configured to halt the workflow or continue to subsequent actions based on error handling settings",
            "Actions can access trigger context data and outputs from previous actions via template variables"
          ],
          "x-user-stories": [
            "GIVEN user provides actions array WHEN validating input THEN items should be processed in order",
            "GIVEN actions array is empty WHEN validating input THEN behavior should follow optional/required rules"
          ]
        }
      },
      "required": ["id", "name", "trigger", "actions"],
      "additionalProperties": false,
      "x-user-stories": [
        "GIVEN the application is running WHEN I list automations THEN it should work correctly",
        "GIVEN the application is running WHEN I disable an automation THEN it should work correctly",
        "GIVEN the application is running WHEN I enable an automation THEN it should work correctly",
        "GIVEN the application is running WHEN I open the edit url THEN it should work correctly",
        "GIVEN the application is running WHEN I return a list of automations THEN it should work correctly",
        "GIVEN I am working with same integration actions in a queue WHEN I run parallel automations THEN it should complete successfully"
      ],
      "x-business-rules": [
        "Object structure groups related automation workflow properties for better organization and type-safe access"
      ]
    },
    "automation_trigger": {
      "title": "Trigger",
      "description": "Defines when an automation workflow should execute. Triggers can be event-based (record created, updated, deleted), scheduled (cron expressions for recurring tasks), or manual (webhook endpoints). Configure the trigger type, target table (for record triggers), and specific conditions that must be met. Triggers are evaluated in real-time for events or on schedule for time-based automation.",
      "anyOf": [
        {
          "title": "HTTP Trigger",
          "description": "Triggered by HTTP requests",
          "anyOf": [
            {
              "title": "POST Request",
              "description": "Triggered by a POST request",
              "type": "object",
              "properties": {
                "service": {
                  "type": "string",
                  "const": "http",
                  "x-business-rules": [
                    "Fixed value (http) identifies this specific root.definitions.automation_trigger.anyOf.0.anyOf.0.properties.service type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with service='http' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "event": {
                  "type": "string",
                  "const": "post",
                  "x-business-rules": [
                    "Fixed value (post) identifies this specific root.definitions.automation_trigger.anyOf.0.anyOf.0.properties.event type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with event='post' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid event value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "path": {
                      "type": "string",
                      "x-business-rules": [
                        "Webhook path creates a unique HTTP endpoint for external services to trigger the automation",
                        "Path should be descriptive and unique to prevent conflicts with other webhook endpoints",
                        "Full webhook URL is generated by combining base domain with this path (e.g., https://app.omnera.io/webhooks/{path})"
                      ],
                      "x-user-stories": [
                        "GIVEN user provides path WHEN validating input THEN string value should be accepted",
                        "GIVEN path is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "respondImmediately": {
                      "default": false,
                      "type": "boolean",
                      "x-business-rules": [
                        "When true, HTTP 200 response is sent immediately before executing actions to prevent webhook timeouts",
                        "When false (default), response is sent after all actions complete, allowing action results to be returned to caller",
                        "Immediate response is recommended for long-running workflows to avoid timeout errors from external services"
                      ],
                      "x-user-stories": [
                        "GIVEN respondImmediately is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN respondImmediately is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with respondImmediately WHEN validating settings THEN boolean value should be accepted"
                      ]
                    },
                    "requestBody": {
                      "$ref": "#/definitions/json_schema",
                      "x-user-stories": [
                        "GIVEN user configures requestBody WHEN validating input THEN value should meet schema requirements",
                        "GIVEN requestBody is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["path"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related params properties for better organization and type-safe access"
                  ],
                  "x-user-stories": [
                    "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                    "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                  ]
                }
              },
              "required": ["service", "event", "params"],
              "additionalProperties": false,
              "x-user-stories": [
                "GIVEN a airtable record is created WHEN I trigger an automation THEN it should succeed",
                "GIVEN POST request sent WHEN I process actual lead data THEN it should succeed",
                "GIVEN the application is running WHEN I handle validation for HTTP trigger path as well THEN it should work correctly",
                "GIVEN the application is running WHEN I trigger an automation THEN it should work correctly",
                "GIVEN I am working with immediate response WHEN I trigger an automation THEN it should complete successfully",
                "GIVEN I am working with a invalid body WHEN I not trigger an automation THEN it should complete successfully",
                "GIVEN I am working with a valid object body WHEN I trigger an automation THEN it should complete successfully",
                "GIVEN I am working with a valid array body WHEN I trigger an automation THEN it should complete successfully",
                "GIVEN I am working with a valid array body and respond immediately WHEN I trigger an automation THEN it should complete successfully",
                "GIVEN I am working with form data WHEN I trigger an automation THEN it should complete successfully",
                "GIVEN I am working with a post request WHEN I not found the automation THEN it should complete successfully",
                "GIVEN a calendly invite is created WHEN I trigger an automation THEN it should succeed",
                "GIVEN POST request sent WHEN I process actual lead form data THEN it should succeed"
              ],
              "x-business-rules": [
                "Object structure groups related post request properties for better organization and type-safe access"
              ]
            },
            {
              "title": "GET Request",
              "description": "Triggered by a GET request",
              "type": "object",
              "properties": {
                "service": {
                  "type": "string",
                  "const": "http",
                  "x-business-rules": [
                    "Fixed value (http) identifies this specific root.definitions.automation_trigger.anyOf.0.anyOf.1.properties.service type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with service='http' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "event": {
                  "type": "string",
                  "const": "get",
                  "x-business-rules": [
                    "Fixed value (get) identifies this specific root.definitions.automation_trigger.anyOf.0.anyOf.1.properties.event type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with event='get' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid event value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "path": {
                      "type": "string",
                      "x-business-rules": [
                        "GET webhook paths are typically used for webhook verification by external services (Facebook, LinkedIn)",
                        "Path must match the webhook URL configured in the external service's settings",
                        "GET requests often include verification parameters (challenge tokens) that must be echoed back"
                      ],
                      "x-user-stories": [
                        "GIVEN user provides path WHEN validating input THEN string value should be accepted",
                        "GIVEN path is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "respondImmediately": {
                      "default": false,
                      "type": "boolean",
                      "x-business-rules": [
                        "For GET webhooks, immediate response is often required to complete verification handshakes",
                        "Verification flows expect specific response formats (e.g., echoing challenge parameter)",
                        "After verification, subsequent GET requests may trigger actual automation workflows"
                      ],
                      "x-user-stories": [
                        "GIVEN respondImmediately is true WHEN processing entity THEN corresponding behavior should be enforced",
                        "GIVEN respondImmediately is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                        "GIVEN configuration with respondImmediately WHEN validating settings THEN boolean value should be accepted"
                      ]
                    }
                  },
                  "required": ["path"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related params properties for better organization and type-safe access"
                  ],
                  "x-user-stories": [
                    "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                    "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                  ]
                }
              },
              "required": ["service", "event", "params"],
              "additionalProperties": false,
              "x-user-stories": [
                "GIVEN Facebook sends GET validation request WHEN I respond with hub.challenge THEN it should succeed",
                "GIVEN hub.mode is not subscribe WHEN I not respond with challenge THEN it should succeed",
                "GIVEN I am working with a get request WHEN I not found the automation THEN it should complete successfully",
                "GIVEN I am working with a wrong path WHEN I not found the automation THEN it should complete successfully",
                "GIVEN LinkedIn sends GET validation request WHEN I respond with correctly computed challengeResponse THEN it should succeed",
                "GIVEN I am working with correct HMAC computation WHEN I handle GET validation for HTTP trigger path THEN it should complete successfully"
              ],
              "x-business-rules": [
                "Object structure groups related get request properties for better organization and type-safe access"
              ]
            }
          ]
        },
        {
          "title": "Database Trigger",
          "description": "Triggered by database events",
          "anyOf": [
            {
              "title": "Record Created",
              "description": "Triggered when a record is created",
              "type": "object",
              "properties": {
                "service": {
                  "type": "string",
                  "const": "database",
                  "x-business-rules": [
                    "Fixed value (database) identifies this specific root.definitions.automation_trigger.anyOf.1.anyOf.0.properties.service type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with service='database' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "event": {
                  "type": "string",
                  "const": "record-created",
                  "x-business-rules": [
                    "Fixed value (record-created) identifies this specific root.definitions.automation_trigger.anyOf.1.anyOf.0.properties.event type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with event='record-created' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid event value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "table": {
                      "type": "string",
                      "x-business-rules": [
                        "Table name must match an existing table definition in the application configuration",
                        "Trigger fires immediately after a new record is successfully created in the specified table",
                        "Trigger receives the newly created record data as context for use in automation actions",
                        "Multiple automations can listen to the same table's record-created events"
                      ],
                      "x-user-stories": [
                        "GIVEN user provides table WHEN validating input THEN string value should be accepted",
                        "GIVEN table is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    }
                  },
                  "required": ["table"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related params properties for better organization and type-safe access"
                  ],
                  "x-user-stories": [
                    "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                    "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                  ]
                }
              },
              "required": ["service", "event", "params"],
              "additionalProperties": false,
              "x-user-stories": [
                "GIVEN a record is created WHEN I run an automation THEN it should succeed"
              ],
              "x-business-rules": [
                "Object structure groups related record created properties for better organization and type-safe access"
              ]
            },
            {
              "title": "Record Updated",
              "description": "Triggered when a record is updated",
              "type": "object",
              "properties": {
                "service": {
                  "type": "string",
                  "const": "database",
                  "x-business-rules": [
                    "Fixed value (database) identifies this specific root.definitions.automation_trigger.anyOf.1.anyOf.1.properties.service type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with service='database' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "event": {
                  "type": "string",
                  "const": "record-updated",
                  "x-business-rules": [
                    "Fixed value (record-updated) identifies this specific root.definitions.automation_trigger.anyOf.1.anyOf.1.properties.event type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with event='record-updated' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid event value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "table": {
                      "type": "string",
                      "x-business-rules": [
                        "Table name must reference an existing table in the application schema",
                        "Trigger fires after any field in the record is modified and saved",
                        "Trigger context includes both old and new record values to enable change detection",
                        "Triggers on every update - consider using filters to limit execution to specific field changes"
                      ],
                      "x-user-stories": [
                        "GIVEN user provides table WHEN validating input THEN string value should be accepted",
                        "GIVEN table is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    }
                  },
                  "required": ["table"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related params properties for better organization and type-safe access"
                  ],
                  "x-user-stories": [
                    "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                    "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                  ]
                }
              },
              "required": ["service", "event", "params"],
              "additionalProperties": false,
              "x-user-stories": [
                "GIVEN a record is updated WHEN I run an automation THEN it should succeed"
              ],
              "x-business-rules": [
                "Object structure groups related record updated properties for better organization and type-safe access"
              ]
            }
          ]
        },
        {
          "title": "Schedule Trigger",
          "description": "Triggered on a schedule",
          "anyOf": [
            {
              "title": "Cron Time",
              "description": "Triggered by a cron expression",
              "type": "object",
              "properties": {
                "service": {
                  "type": "string",
                  "const": "schedule",
                  "x-business-rules": [
                    "Fixed value (schedule) identifies this specific root.definitions.automation_trigger.anyOf.2.anyOf.0.properties.service type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with service='schedule' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "event": {
                  "type": "string",
                  "const": "cron-time",
                  "x-business-rules": [
                    "Fixed value (cron-time) identifies this specific root.definitions.automation_trigger.anyOf.2.anyOf.0.properties.event type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with event='cron-time' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid event value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "expression": {
                      "type": "string",
                      "x-business-rules": [
                        "Must be a valid cron expression (e.g., '0 9 * * 1' for every Monday at 9 AM)",
                        "Supports standard cron syntax with minute, hour, day of month, month, and day of week fields",
                        "Expression is evaluated in the specified timezone to ensure correct execution timing",
                        "Minimum interval between executions should be at least 1 minute to prevent excessive resource usage"
                      ],
                      "x-user-stories": [
                        "GIVEN template with variables WHEN action executes THEN variables should be substituted with trigger context data",
                        "GIVEN invalid template syntax WHEN validating automation THEN error should identify syntax issues",
                        "GIVEN template variables reference trigger data WHEN automation runs THEN correct values should be interpolated"
                      ]
                    },
                    "timeZone": {
                      "type": "string",
                      "x-business-rules": [
                        "Must be a valid IANA timezone identifier (e.g., 'America/New_York', 'Europe/Paris')",
                        "Timezone ensures cron expressions execute at correct local times regardless of server location",
                        "Handles daylight saving time transitions automatically based on timezone rules",
                        "Critical for business workflows that must run at specific local times (e.g., daily reports at 9 AM local time)"
                      ],
                      "x-user-stories": [
                        "GIVEN automation with timezone WHEN cron expression evaluates THEN execution should occur at correct local time",
                        "GIVEN invalid timezone identifier WHEN validating configuration THEN error should list valid IANA timezones",
                        "GIVEN timezone handles DST transitions WHEN schedule crosses DST boundary THEN execution should occur at correct wall-clock time"
                      ]
                    }
                  },
                  "required": ["expression", "timeZone"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related params properties for better organization and type-safe access"
                  ],
                  "x-user-stories": [
                    "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                    "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                  ]
                }
              },
              "required": ["service", "event", "params"],
              "additionalProperties": false,
              "x-business-rules": [
                "Object structure groups related cron time properties for better organization and type-safe access"
              ]
            }
          ],
          "x-user-stories": [
            "GIVEN I am working with a cron time WHEN I trigger the automation THEN it should complete successfully"
          ]
        },
        {
          "title": "Integration Trigger",
          "description": "Triggered by external service events",
          "anyOf": [
            {
              "title": "Calendly",
              "description": "Triggered by Calendly events",
              "anyOf": [
                {
                  "title": "Invite Created",
                  "description": "Triggered when a Calendly invite is created",
                  "type": "object",
                  "properties": {
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-business-rules": [
                        "References the Calendly connection ID configured in the connections section",
                        "Account must have valid OAuth credentials and webhook permissions",
                        "Supports both numeric IDs and string identifiers for flexibility"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "calendly",
                      "x-business-rules": [
                        "Fixed value (calendly) identifies this specific root.definitions.automation_trigger.anyOf.3.anyOf.0.anyOf.0.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='calendly' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "event": {
                      "type": "string",
                      "const": "invite-created",
                      "x-business-rules": [
                        "Fixed value (invite-created) identifies this specific root.definitions.automation_trigger.anyOf.3.anyOf.0.anyOf.0.properties.event type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with event='invite-created' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid event value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "organization": {
                          "description": "The organization of the trigger",
                          "default": "Current user organization",
                          "type": "string",
                          "x-business-rules": [
                            "Defaults to the authenticated user's organization if not specified",
                            "Filters webhook events to only invites within the specified organization",
                            "Must match a valid Calendly organization UUID accessible by the connected account"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides organization WHEN validating input THEN string value should be accepted",
                            "GIVEN organization is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "scope": {
                          "description": "The scope of the trigger",
                          "default": "user",
                          "type": "string",
                          "enum": ["user", "organization", "group"],
                          "x-business-rules": [
                            "User scope: triggers only for invites created by the authenticated user",
                            "Organization scope: triggers for all invites within the organization (requires org-level permissions)",
                            "Group scope: triggers for invites created by members of a specific group",
                            "Broader scopes require higher permission levels in the Calendly connection"
                          ],
                          "x-user-stories": [
                            "GIVEN user selects scope from valid options WHEN validating input THEN selection should be accepted",
                            "GIVEN user provides invalid scope value WHEN validating input THEN error should list valid options: user, organization, group",
                            "GIVEN scope is set to any valid enum value WHEN processing entity THEN appropriate behavior should execute"
                          ]
                        }
                      },
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["account", "service", "event"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related invite created properties for better organization and type-safe access"
                  ]
                }
              ]
            },
            {
              "title": "Airtable",
              "description": "Triggered by Airtable events",
              "anyOf": [
                {
                  "title": "Record Created",
                  "description": "Triggered when an Airtable record is created",
                  "type": "object",
                  "properties": {
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "airtable",
                      "x-business-rules": [
                        "Fixed value (airtable) identifies this specific root.definitions.automation_trigger.anyOf.3.anyOf.1.anyOf.0.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='airtable' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "event": {
                      "type": "string",
                      "const": "record-created",
                      "x-business-rules": [
                        "Fixed value (record-created) identifies this specific root.definitions.automation_trigger.anyOf.3.anyOf.1.anyOf.0.properties.event type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with event='record-created' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid event value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "baseId": {
                          "type": "string",
                          "x-business-rules": [
                            "Must be a valid Airtable base ID (format: 'appXXXXXXXXXXXXXX')",
                            "Base must be accessible by the connected Airtable account",
                            "Identifies which Airtable workspace/base to monitor for new records"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides baseId WHEN validating input THEN string value should be accepted",
                            "GIVEN baseId is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "tableId": {
                          "type": "string",
                          "x-business-rules": [
                            "Must be a valid Airtable table ID within the specified base",
                            "Table must exist and be accessible by the connected account",
                            "Triggers fire only for records created in this specific table, not other tables in the base"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides tableId WHEN validating input THEN string value should be accepted",
                            "GIVEN tableId is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        }
                      },
                      "required": ["baseId", "tableId"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["account", "service", "event", "params"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related record created properties for better organization and type-safe access"
                  ]
                }
              ]
            },
            {
              "title": "LinkedIn Ads",
              "description": "Triggered by LinkedIn lead events",
              "anyOf": [
                {
                  "title": "New Lead Gen Form Response",
                  "description": "Triggered when a new LinkedIn Lead Gen Form response is created",
                  "type": "object",
                  "properties": {
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "linkedin-ads",
                      "x-business-rules": [
                        "Fixed value (linkedin-ads) identifies this specific root.definitions.automation_trigger.anyOf.3.anyOf.2.anyOf.0.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='linkedin-ads' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "event": {
                      "type": "string",
                      "const": "new-lead-gen-form-response",
                      "x-business-rules": [
                        "Fixed value (new-lead-gen-form-response) identifies this specific root.definitions.automation_trigger.anyOf.3.anyOf.2.anyOf.0.properties.event type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with event='new-lead-gen-form-response' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid event value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "organizationId": {
                          "title": "LinkedIn Organization ID",
                          "description": "Required for non-sponsored lead forms",
                          "type": "string",
                          "x-business-rules": ["Required for non-sponsored lead forms"],
                          "x-user-stories": [
                            "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                            "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                            "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                          ]
                        },
                        "sponsoredAccountId": {
                          "title": "LinkedIn Sponsored Account ID",
                          "description": "Required for sponsored lead forms (leadType: SPONSORED)",
                          "type": "string",
                          "x-business-rules": [
                            "Required for sponsored lead forms (leadType: SPONSORED)"
                          ],
                          "x-user-stories": [
                            "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                            "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                            "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                          ]
                        },
                        "leadType": {
                          "default": "SPONSORED",
                          "description": "Type of lead form. SPONSORED requires sponsoredAccountId",
                          "type": "string",
                          "enum": ["SPONSORED"],
                          "x-business-rules": [
                            "Restricted to 1 allowed values (SPONSORED) to maintain type safety and enable clear validation error messages",
                            "Defaults to \"SPONSORED\" when not specified, providing sensible fallback behavior without requiring explicit configuration"
                          ],
                          "x-user-stories": [
                            "GIVEN user selects leadType from valid options WHEN validating input THEN selection should be accepted",
                            "GIVEN user provides invalid leadType value WHEN validating input THEN error should list valid options: SPONSORED",
                            "GIVEN leadType is set to any valid enum value WHEN processing entity THEN appropriate behavior should execute"
                          ]
                        }
                      },
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["account", "service", "event", "params"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related new lead gen form response properties for better organization and type-safe access"
                  ]
                }
              ],
              "x-user-stories": [
                "GIVEN the application is running WHEN I set up Facebook new lead trigger (subscribes page and app if needed) THEN it should work correctly"
              ]
            },
            {
              "title": "Facebook",
              "description": "Triggered by Facebook lead events",
              "anyOf": [
                {
                  "title": "New Lead",
                  "description": "Triggered when a new Facebook Lead Ad response is created",
                  "type": "object",
                  "properties": {
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "facebook-ads",
                      "x-business-rules": [
                        "Fixed value (facebook-ads) identifies this specific root.definitions.automation_trigger.anyOf.3.anyOf.3.anyOf.0.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='facebook-ads' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "event": {
                      "type": "string",
                      "const": "new-lead",
                      "x-business-rules": [
                        "Fixed value (new-lead) identifies this specific root.definitions.automation_trigger.anyOf.3.anyOf.3.anyOf.0.properties.event type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with event='new-lead' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid event value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "pageId": {
                          "title": "Facebook Page ID",
                          "description": "The ID of the Facebook page with lead forms",
                          "type": "string",
                          "x-business-rules": ["The ID of the Facebook page with lead forms"],
                          "x-user-stories": [
                            "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                            "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                            "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                          ]
                        },
                        "appId": {
                          "title": "Facebook App ID",
                          "description": "Your Facebook App ID from the developer console",
                          "type": "string",
                          "x-business-rules": ["Your Facebook App ID from the developer console"],
                          "x-user-stories": [
                            "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                            "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                            "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                          ]
                        },
                        "appSecret": {
                          "title": "Facebook App Secret",
                          "description": "Your Facebook App Secret from the developer console",
                          "type": "string",
                          "x-business-rules": [
                            "Your Facebook App Secret from the developer console"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides appSecret WHEN validating input THEN string value should be accepted",
                            "GIVEN appSecret is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "verifyToken": {
                          "title": "Webhook Verify Token",
                          "description": "Security token for webhook verification (auto-generated if not provided)",
                          "type": "string",
                          "x-business-rules": [
                            "System automatically generates webhook verify token to ensure consistency and prevent duplicate or invalid values"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides verifyToken WHEN validating input THEN string value should be accepted",
                            "GIVEN verifyToken is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        }
                      },
                      "required": ["pageId", "appId", "appSecret"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["account", "service", "event", "params"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related new lead properties for better organization and type-safe access"
                  ]
                }
              ],
              "x-user-stories": [
                "GIVEN I am working with known test vectors WHEN I compute challengeResponse correctly THEN it should complete successfully",
                "GIVEN the application is running WHEN I set up LinkedIn new lead gen response trigger (creates subscription if none) THEN it should work correctly"
              ]
            }
          ]
        }
      ]
    },
    "automation_action": {
      "title": "Action",
      "description": "Actions to perform when an automation is triggered. Actions execute sequentially in the order defined. Available action types: send-email (email notifications), create-record (insert data), update-record (modify data), delete-record (remove data), http-request (call external APIs), run-script (execute custom code). Each action type has specific configuration requirements and can reference trigger data using template variables.",
      "anyOf": [
        {
          "title": "HTTP Action",
          "description": "HTTP request action",
          "anyOf": [
            {
              "title": "GET Request",
              "description": "Make a GET HTTP request",
              "type": "object",
              "properties": {
                "name": {
                  "title": "Action Name",
                  "description": "Human-readable name for this action to identify it in automation logs",
                  "type": "string",
                  "minLength": 1,
                  "examples": ["Fetch user data", "Call external API", "Get weather info"],
                  "x-business-rules": [
                    "Human-readable name for this action to identify it in automation logs"
                  ],
                  "x-user-stories": [
                    "GIVEN user provides name with at least 1 characters WHEN validating input THEN value should be accepted",
                    "GIVEN user provides name shorter than 1 chars WHEN validating input THEN error should require minimum length"
                  ]
                },
                "service": {
                  "title": "Service Type",
                  "description": "The service this action uses",
                  "type": "string",
                  "const": "http",
                  "x-business-rules": [
                    "Fixed value (http) identifies this specific root.definitions.automation_action.anyOf.0.anyOf.0.properties.service type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with service='http' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "action": {
                  "title": "Action Type",
                  "description": "The specific HTTP action to perform",
                  "type": "string",
                  "const": "get",
                  "x-business-rules": [
                    "Fixed value (get) identifies this specific root.definitions.automation_action.anyOf.0.anyOf.0.properties.action type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with action='get' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "params": {
                  "title": "Action Parameters",
                  "description": "Configuration for the HTTP GET request",
                  "type": "object",
                  "properties": {
                    "url": {
                      "title": "URL",
                      "description": "The URL to send the GET request to (supports template variables like {{env.API_URL}})",
                      "type": "string",
                      "minLength": 1,
                      "examples": [
                        "https://api.example.com/users",
                        "{{env.API_URL}}/data",
                        "https://api.weather.com?city={{trigger.city}}"
                      ],
                      "x-business-rules": [
                        "The URL to send the GET request to (supports template variables like {{env"
                      ],
                      "x-user-stories": [
                        "GIVEN user provides url with at least 1 characters WHEN validating input THEN value should be accepted",
                        "GIVEN user provides url shorter than 1 chars WHEN validating input THEN error should require minimum length"
                      ]
                    },
                    "headers": {
                      "title": "HTTP Headers",
                      "description": "Custom HTTP headers to include in the request (supports template variables)",
                      "type": "object",
                      "propertyNames": {
                        "type": "string"
                      },
                      "additionalProperties": {
                        "type": "string"
                      },
                      "examples": [
                        {
                          "Authorization": "Bearer {{env.API_TOKEN}}",
                          "Content-Type": "application/json"
                        }
                      ],
                      "x-business-rules": [
                        "Object structure groups related http headers properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures headers WHEN validating input THEN value should meet schema requirements",
                        "GIVEN headers is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["url"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related action parameters properties for better organization and type-safe access"
                  ],
                  "x-user-stories": [
                    "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                    "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                  ]
                }
              },
              "required": ["name", "service", "action", "params"],
              "additionalProperties": false,
              "x-user-stories": [
                "GIVEN the application is running WHEN I run a get http action THEN it should work correctly",
                "GIVEN I am working with headers WHEN I run a get http action THEN it should complete successfully"
              ],
              "x-business-rules": [
                "Object structure groups related get request properties for better organization and type-safe access"
              ]
            },
            {
              "title": "POST Request",
              "description": "Make a POST HTTP request",
              "type": "object",
              "properties": {
                "name": {
                  "title": "Action Name",
                  "description": "Human-readable name for this action to identify it in automation logs",
                  "type": "string",
                  "minLength": 1,
                  "examples": ["Create user", "Send notification", "Post data to API"],
                  "x-business-rules": [
                    "Human-readable name for this action to identify it in automation logs"
                  ],
                  "x-user-stories": [
                    "GIVEN user provides name with at least 1 characters WHEN validating input THEN value should be accepted",
                    "GIVEN user provides name shorter than 1 chars WHEN validating input THEN error should require minimum length"
                  ]
                },
                "service": {
                  "title": "Service Type",
                  "description": "The service this action uses",
                  "type": "string",
                  "const": "http",
                  "x-business-rules": [
                    "Fixed value (http) identifies this specific root.definitions.automation_action.anyOf.0.anyOf.1.properties.service type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with service='http' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "action": {
                  "title": "Action Type",
                  "description": "The specific HTTP action to perform",
                  "type": "string",
                  "const": "post",
                  "x-business-rules": [
                    "Fixed value (post) identifies this specific root.definitions.automation_action.anyOf.0.anyOf.1.properties.action type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with action='post' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "params": {
                  "title": "Action Parameters",
                  "description": "Configuration for the HTTP POST request",
                  "type": "object",
                  "properties": {
                    "url": {
                      "title": "URL",
                      "description": "The URL to send the POST request to (supports template variables like {{env.API_URL}})",
                      "type": "string",
                      "minLength": 1,
                      "examples": [
                        "https://api.example.com/users",
                        "{{env.WEBHOOK_URL}}",
                        "https://api.service.com/events"
                      ],
                      "x-business-rules": [
                        "The URL to send the POST request to (supports template variables like {{env"
                      ],
                      "x-user-stories": [
                        "GIVEN user provides url with at least 1 characters WHEN validating input THEN value should be accepted",
                        "GIVEN user provides url shorter than 1 chars WHEN validating input THEN error should require minimum length"
                      ]
                    },
                    "headers": {
                      "title": "HTTP Headers",
                      "description": "Custom HTTP headers to include in the request (supports template variables)",
                      "type": "object",
                      "propertyNames": {
                        "type": "string"
                      },
                      "additionalProperties": {
                        "type": "string"
                      },
                      "examples": [
                        {
                          "Authorization": "Bearer {{env.API_TOKEN}}",
                          "Content-Type": "application/json"
                        }
                      ],
                      "x-business-rules": [
                        "Object structure groups related http headers properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures headers WHEN validating input THEN value should meet schema requirements",
                        "GIVEN headers is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "body": {
                      "title": "Request Body",
                      "description": "JSON object to send as the request body (supports template variables)",
                      "type": "object",
                      "propertyNames": {
                        "type": "string"
                      },
                      "additionalProperties": {},
                      "examples": [
                        {
                          "name": "{{trigger.name}}",
                          "email": "{{trigger.email}}",
                          "status": "active"
                        }
                      ],
                      "x-business-rules": [
                        "Object structure groups related request body properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures body WHEN validating input THEN value should meet schema requirements",
                        "GIVEN body is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["url"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related action parameters properties for better organization and type-safe access"
                  ],
                  "x-user-stories": [
                    "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                    "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                  ]
                }
              },
              "required": ["name", "service", "action", "params"],
              "additionalProperties": false,
              "x-user-stories": [
                "GIVEN the application is running WHEN I run a post http action THEN it should work correctly",
                "GIVEN I am working with headers WHEN I run a post http action THEN it should complete successfully",
                "GIVEN I am working with env headers WHEN I run a post http action THEN it should complete successfully",
                "GIVEN I am working with default env headers WHEN I run a post http action THEN it should complete successfully",
                "GIVEN I am working with body WHEN I run a post http action THEN it should complete successfully"
              ],
              "x-business-rules": [
                "Object structure groups related post request properties for better organization and type-safe access"
              ]
            },
            {
              "title": "HTTP Response",
              "description": "Send an HTTP response",
              "type": "object",
              "properties": {
                "name": {
                  "title": "Action Name",
                  "description": "Human-readable name for this action to identify it in automation logs",
                  "type": "string",
                  "minLength": 1,
                  "examples": ["Send response", "Return data", "Send webhook response"],
                  "x-business-rules": [
                    "Human-readable name for this action to identify it in automation logs"
                  ],
                  "x-user-stories": [
                    "GIVEN user provides name with at least 1 characters WHEN validating input THEN value should be accepted",
                    "GIVEN user provides name shorter than 1 chars WHEN validating input THEN error should require minimum length"
                  ]
                },
                "service": {
                  "title": "Service Type",
                  "description": "The service this action uses",
                  "type": "string",
                  "const": "http",
                  "x-business-rules": [
                    "Fixed value (http) identifies this specific root.definitions.automation_action.anyOf.0.anyOf.2.properties.service type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with service='http' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "action": {
                  "title": "Action Type",
                  "description": "The specific HTTP action to perform",
                  "type": "string",
                  "const": "response",
                  "x-business-rules": [
                    "Fixed value (response) identifies this specific root.definitions.automation_action.anyOf.0.anyOf.2.properties.action type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with action='response' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "params": {
                  "title": "Response Parameters",
                  "description": "Configuration for the HTTP response to send back to the requester",
                  "type": "object",
                  "properties": {
                    "headers": {
                      "title": "Response Headers",
                      "description": "HTTP headers to include in the response (supports template variables)",
                      "type": "object",
                      "propertyNames": {
                        "type": "string"
                      },
                      "additionalProperties": {
                        "type": "string"
                      },
                      "examples": [
                        {
                          "Content-Type": "application/json",
                          "X-Custom-Header": "{{trigger.id}}"
                        }
                      ],
                      "x-business-rules": [
                        "Object structure groups related response headers properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures headers WHEN validating input THEN value should meet schema requirements",
                        "GIVEN headers is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "body": {
                      "title": "Response Body",
                      "description": "The response body to send (can be JSON object or string, supports template variables)",
                      "anyOf": [
                        {
                          "type": "object",
                          "propertyNames": {
                            "type": "string"
                          },
                          "additionalProperties": {},
                          "x-business-rules": [
                            "Object structure groups related 0 properties for better organization and type-safe access"
                          ]
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "examples": [
                        {
                          "success": true,
                          "message": "Data received"
                        },
                        "OK",
                        "{{previous_action.result}}"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures body WHEN validating input THEN value should meet schema requirements",
                        "GIVEN body is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related response parameters properties for better organization and type-safe access"
                  ],
                  "x-user-stories": [
                    "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                    "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                  ]
                }
              },
              "required": ["name", "service", "action"],
              "additionalProperties": false,
              "x-user-stories": [
                "GIVEN the application is running WHEN I run a response http action THEN it should work correctly",
                "GIVEN I am working with body from a post request WHEN I run a response http action THEN it should complete successfully",
                "GIVEN I am working with body from a get request WHEN I run a response http action THEN it should complete successfully",
                "GIVEN I am working with previous error WHEN I run a response http action THEN it should complete successfully",
                "GIVEN I am working with previous action WHEN I run a response http action THEN it should complete successfully",
                "GIVEN I am working with headers WHEN I run a response http action THEN it should complete successfully"
              ],
              "x-business-rules": [
                "Object structure groups related http response properties for better organization and type-safe access"
              ]
            }
          ]
        },
        {
          "title": "Code Action",
          "description": "Execute custom code",
          "anyOf": [
            {
              "title": "Run TypeScript",
              "description": "Execute TypeScript code",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "x-user-stories": [
                    "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                    "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                  ]
                },
                "service": {
                  "type": "string",
                  "const": "code",
                  "x-business-rules": [
                    "Fixed value (code) identifies this specific root.definitions.automation_action.anyOf.1.anyOf.0.properties.service type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with service='code' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "action": {
                  "type": "string",
                  "const": "run-typescript",
                  "x-business-rules": [
                    "Fixed value (run-typescript) identifies this specific root.definitions.automation_action.anyOf.1.anyOf.0.properties.action type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with action='run-typescript' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "inputData": {
                      "default": {},
                      "type": "object",
                      "propertyNames": {
                        "type": "string"
                      },
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-business-rules": [
                        "Defaults to {} when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures inputData WHEN validating input THEN value should meet schema requirements",
                        "GIVEN inputData is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "code": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides code WHEN validating input THEN string value should be accepted",
                        "GIVEN code is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    }
                  },
                  "required": ["code"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related params properties for better organization and type-safe access"
                  ],
                  "x-user-stories": [
                    "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                    "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                  ]
                }
              },
              "required": ["name", "service", "action", "params"],
              "additionalProperties": false,
              "x-user-stories": [
                "GIVEN the application is running WHEN I run a TypeScript code THEN it should work correctly",
                "GIVEN I am working with input data WHEN I run a TypeScript code THEN it should complete successfully",
                "GIVEN the code throw an error WHEN I return an error THEN it should succeed",
                "GIVEN I am working with externals WHEN I run a TypeScript code THEN it should complete successfully",
                "GIVEN I am working with globals variables WHEN I run a TypeScript code THEN it should complete successfully",
                "GIVEN I am working with tables WHEN I run a TypeScript code THEN it should complete successfully",
                "GIVEN I am working with buckets WHEN I run a TypeScript code THEN it should complete successfully",
                "GIVEN the application is running WHEN I run a TypeScript code that return an array THEN it should work correctly",
                "GIVEN the application is running WHEN I filter a TypeScript code that return an empty array THEN it should work correctly",
                "GIVEN I am working with actions WHEN I run a TypeScript code THEN it should complete successfully"
              ],
              "x-business-rules": [
                "Object structure groups related run typescript properties for better organization and type-safe access"
              ]
            },
            {
              "title": "Run JavaScript",
              "description": "Execute JavaScript code",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "x-user-stories": [
                    "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                    "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                  ]
                },
                "service": {
                  "type": "string",
                  "const": "code",
                  "x-business-rules": [
                    "Fixed value (code) identifies this specific root.definitions.automation_action.anyOf.1.anyOf.1.properties.service type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with service='code' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "action": {
                  "type": "string",
                  "const": "run-javascript",
                  "x-business-rules": [
                    "Fixed value (run-javascript) identifies this specific root.definitions.automation_action.anyOf.1.anyOf.1.properties.action type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with action='run-javascript' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "inputData": {
                      "default": {},
                      "type": "object",
                      "propertyNames": {
                        "type": "string"
                      },
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-business-rules": [
                        "Defaults to {} when not specified, providing sensible fallback behavior without requiring explicit configuration"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures inputData WHEN validating input THEN value should meet schema requirements",
                        "GIVEN inputData is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "code": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides code WHEN validating input THEN string value should be accepted",
                        "GIVEN code is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    }
                  },
                  "required": ["code"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related params properties for better organization and type-safe access"
                  ],
                  "x-user-stories": [
                    "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                    "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                  ]
                }
              },
              "required": ["name", "service", "action", "params"],
              "additionalProperties": false,
              "x-user-stories": [
                "GIVEN the application is running WHEN I run a JavaScript code THEN it should work correctly",
                "GIVEN I am working with input data WHEN I run a JavaScript code THEN it should complete successfully",
                "GIVEN I am working with externals WHEN I run a JavaScript code THEN it should complete successfully",
                "GIVEN I am working with globals variables WHEN I run a JavaScript code THEN it should complete successfully",
                "GIVEN I am working with tables WHEN I run a JavaScript code THEN it should complete successfully",
                "GIVEN I am working with buckets WHEN I run a JavaScript code THEN it should complete successfully",
                "GIVEN the application is running WHEN I run a JavaScript code that return an array THEN it should work correctly",
                "GIVEN the application is running WHEN I filter a JavaScript code that return an empty array THEN it should work correctly",
                "GIVEN I am working with actions WHEN I run a JavaScript code THEN it should complete successfully"
              ],
              "x-business-rules": [
                "Object structure groups related run javascript properties for better organization and type-safe access"
              ]
            }
          ]
        },
        {
          "title": "Filter Action",
          "description": "Filter or branch automation flow",
          "anyOf": [
            {
              "title": "Only Continue If",
              "description": "Continue only if condition is met",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "x-user-stories": [
                    "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                    "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                  ]
                },
                "service": {
                  "type": "string",
                  "const": "filter",
                  "x-business-rules": [
                    "Fixed value (filter) identifies this specific root.definitions.automation_action.anyOf.2.anyOf.0.properties.service type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with service='filter' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "action": {
                  "type": "string",
                  "const": "only-continue-if",
                  "x-business-rules": [
                    "Fixed value (only-continue-if) identifies this specific root.definitions.automation_action.anyOf.2.anyOf.0.properties.action type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with action='only-continue-if' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "params": {
                  "$ref": "#/definitions/filter_condition",
                  "x-user-stories": [
                    "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                    "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                  ]
                }
              },
              "required": ["name", "service", "action", "params"],
              "additionalProperties": false,
              "x-user-stories": [
                "GIVEN the application is running WHEN I not run an action if the filter returns false THEN it should work correctly",
                "GIVEN the application is running WHEN I run an and filter action that returns true THEN it should work correctly",
                "GIVEN the application is running WHEN I run an and filter action that returns false THEN it should work correctly",
                "GIVEN the application is running WHEN I run an or filter action that returns true THEN it should work correctly",
                "GIVEN the application is running WHEN I run an or filter action that returns false THEN it should work correctly",
                "GIVEN the application is running WHEN I run an action if the filter returns true THEN it should work correctly",
                "GIVEN the application is running WHEN I run an exists filter action that returns true THEN it should work correctly",
                "GIVEN the application is running WHEN I run an exists filter action that returns false THEN it should work correctly",
                "GIVEN the application is running WHEN I run an does-not-exist filter action that returns true THEN it should work correctly",
                "GIVEN the application is running WHEN I run an does-not-exist filter action that returns false THEN it should work correctly",
                "GIVEN the application is running WHEN I run an is-true filter action that returns true THEN it should work correctly",
                "GIVEN the application is running WHEN I run an is-true filter action that returns false THEN it should work correctly",
                "GIVEN the application is running WHEN I run an is-false filter action that returns true THEN it should work correctly",
                "GIVEN the application is running WHEN I run an is-false filter action that returns false THEN it should work correctly",
                "GIVEN the application is running WHEN I run an contains filter action that returns true THEN it should work correctly",
                "GIVEN the application is running WHEN I run an contains filter action that returns false THEN it should work correctly",
                "GIVEN the application is running WHEN I run an does-not-contain filter action that returns true THEN it should work correctly",
                "GIVEN the application is running WHEN I run an does-not-contain filter action that returns false THEN it should work correctly"
              ],
              "x-business-rules": [
                "Object structure groups related only continue if properties for better organization and type-safe access"
              ]
            },
            {
              "title": "Split Into Paths",
              "description": "Branch automation into multiple paths",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "x-user-stories": [
                    "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                    "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                  ]
                },
                "service": {
                  "type": "string",
                  "const": "filter",
                  "x-business-rules": [
                    "Fixed value (filter) identifies this specific root.definitions.automation_action.anyOf.2.anyOf.1.properties.service type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with service='filter' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "action": {
                  "type": "string",
                  "const": "split-into-paths",
                  "x-business-rules": [
                    "Fixed value (split-into-paths) identifies this specific root.definitions.automation_action.anyOf.2.anyOf.1.properties.action type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with action='split-into-paths' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "params": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "x-user-stories": [
                          "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                          "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                        ]
                      },
                      "filter": {
                        "$ref": "#/definitions/filter_condition",
                        "x-user-stories": [
                          "GIVEN user configures filter WHEN validating input THEN value should meet schema requirements",
                          "GIVEN filter is set WHEN processing configuration THEN value should be used correctly"
                        ]
                      },
                      "actions": {
                        "type": "array",
                        "items": {
                          "$ref": "#/definitions/automation_action"
                        },
                        "x-business-rules": [
                          "Array enables multiple actions to be configured, supporting flexible workflows and batch operations"
                        ],
                        "x-user-stories": [
                          "GIVEN user provides actions array WHEN validating input THEN items should be processed in order",
                          "GIVEN actions array is empty WHEN validating input THEN behavior should follow optional/required rules"
                        ]
                      }
                    },
                    "required": ["name", "filter", "actions"],
                    "additionalProperties": false,
                    "x-business-rules": [
                      "Object structure groups related items properties for better organization and type-safe access"
                    ]
                  },
                  "x-business-rules": [
                    "Array enables multiple params to be configured, supporting flexible workflows and batch operations"
                  ],
                  "x-user-stories": [
                    "GIVEN user provides params array WHEN validating input THEN items should be processed in order",
                    "GIVEN params array is empty WHEN validating input THEN behavior should follow optional/required rules"
                  ]
                }
              },
              "required": ["name", "service", "action", "params"],
              "additionalProperties": false,
              "x-user-stories": [
                "GIVEN the application is running WHEN I run a split into paths paths action THEN it should work correctly",
                "GIVEN I am working with 2 valid paths WHEN I run a split into paths paths action THEN it should complete successfully",
                "GIVEN the application is running WHEN I run a split into paths paths action before another action THEN it should work correctly",
                "GIVEN I am working with an error WHEN I run a split into paths paths action THEN it should complete successfully"
              ],
              "x-business-rules": [
                "Object structure groups related split into paths properties for better organization and type-safe access"
              ]
            }
          ]
        },
        {
          "title": "Database Action",
          "description": "Database operations",
          "anyOf": [
            {
              "title": "Create Record",
              "description": "Create a record in a database table",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "x-user-stories": [
                    "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                    "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                  ]
                },
                "service": {
                  "type": "string",
                  "const": "database",
                  "x-business-rules": [
                    "Fixed value (database) identifies this specific root.definitions.automation_action.anyOf.3.anyOf.0.properties.service type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with service='database' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "action": {
                  "type": "string",
                  "const": "create-record",
                  "x-business-rules": [
                    "Fixed value (create-record) identifies this specific root.definitions.automation_action.anyOf.3.anyOf.0.properties.action type in discriminated unions and routing logic"
                  ],
                  "x-user-stories": [
                    "GIVEN entity with action='create-record' WHEN processing configuration THEN correct handler should be selected",
                    "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                  ]
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "table": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures table WHEN validating input THEN value should meet schema requirements",
                        "GIVEN table is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "fields": {
                      "type": "object",
                      "propertyNames": {
                        "type": "string"
                      },
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "boolean",
                            "x-business-rules": [
                              "Boolean flag enables/disables 2 functionality through simple true/false configuration"
                            ]
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "x-business-rules": [
                        "Object structure groups related fields properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures fields WHEN validating input THEN value should meet schema requirements",
                        "GIVEN fields is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["table", "fields"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related params properties for better organization and type-safe access"
                  ],
                  "x-user-stories": [
                    "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                    "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                  ]
                }
              },
              "required": ["name", "service", "action", "params"],
              "additionalProperties": false,
              "x-business-rules": [
                "Object structure groups related create record properties for better organization and type-safe access"
              ]
            }
          ],
          "x-user-stories": [
            "GIVEN the application is running WHEN I create a record from an automation THEN it should work correctly"
          ]
        },
        {
          "title": "Integration Action",
          "description": "Actions performed via external service integrations",
          "anyOf": [
            {
              "title": "Calendly",
              "description": "Actions for Calendly API",
              "anyOf": [
                {
                  "title": "List Webhook Subscriptions",
                  "description": "Lists the webhook subscriptions for a given organization",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                        "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "calendly",
                      "x-business-rules": [
                        "Fixed value (calendly) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.0.anyOf.0.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='calendly' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "const": "list-webhook-subscriptions",
                      "x-business-rules": [
                        "Fixed value (list-webhook-subscriptions) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.0.anyOf.0.properties.action type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with action='list-webhook-subscriptions' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "organization": {
                          "default": "Current user organisation",
                          "type": "string",
                          "x-business-rules": [
                            "Defaults to \"Current user organisation\" when not specified, providing sensible fallback behavior without requiring explicit configuration"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides organization WHEN validating input THEN string value should be accepted",
                            "GIVEN organization is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "scope": {
                          "default": "user",
                          "type": "string",
                          "enum": ["user", "organization", "group"],
                          "x-business-rules": [
                            "Restricted to 3 allowed values (user, organization, group) to maintain type safety and enable clear validation error messages",
                            "Defaults to \"user\" when not specified, providing sensible fallback behavior without requiring explicit configuration"
                          ],
                          "x-user-stories": [
                            "GIVEN user selects scope from valid options WHEN validating input THEN selection should be accepted",
                            "GIVEN user provides invalid scope value WHEN validating input THEN error should list valid options: user, organization, group",
                            "GIVEN scope is set to any valid enum value WHEN processing entity THEN appropriate behavior should execute"
                          ]
                        },
                        "count": {
                          "default": 20,
                          "type": "number",
                          "minimum": 1,
                          "maximum": 100,
                          "x-business-rules": [
                            "Numeric range (1-100) prevents overflow errors and ensures values stay within valid business bounds",
                            "Defaults to 20 when not specified, providing sensible fallback behavior without requiring explicit configuration"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides count between 1 and 100 WHEN validating input THEN value should be accepted",
                            "GIVEN user provides count below 1 WHEN validating input THEN error should enforce minimum value",
                            "GIVEN user provides count above 100 WHEN validating input THEN error should enforce maximum value"
                          ]
                        }
                      },
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["name", "account", "service", "action"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related list webhook subscriptions properties for better organization and type-safe access"
                  ]
                },
                {
                  "title": "Get Event Type",
                  "description": "Gets the event type for a given uuid",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                        "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "calendly",
                      "x-business-rules": [
                        "Fixed value (calendly) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.0.anyOf.1.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='calendly' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "const": "get-event-type",
                      "x-business-rules": [
                        "Fixed value (get-event-type) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.0.anyOf.1.properties.action type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with action='get-event-type' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN user provides uuid WHEN validating input THEN string value should be accepted",
                            "GIVEN uuid is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        }
                      },
                      "required": ["uuid"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["name", "account", "service", "action", "params"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related get event type properties for better organization and type-safe access"
                  ]
                }
              ],
              "x-user-stories": [
                "GIVEN the application is running WHEN I run a google sheets append values action THEN it should work correctly"
              ]
            },
            {
              "title": "Airtable",
              "description": "Actions for Airtable API",
              "anyOf": [
                {
                  "title": "List Webhook Payloads",
                  "description": "Lists the webhook payloads for a given webhook",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                        "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "airtable",
                      "x-business-rules": [
                        "Fixed value (airtable) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.1.anyOf.0.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='airtable' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "const": "list-webhook-payloads",
                      "x-business-rules": [
                        "Fixed value (list-webhook-payloads) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.1.anyOf.0.properties.action type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with action='list-webhook-payloads' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "baseId": {
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN user provides baseId WHEN validating input THEN string value should be accepted",
                            "GIVEN baseId is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "webhookId": {
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN user provides webhookId WHEN validating input THEN string value should be accepted",
                            "GIVEN webhookId is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "cursor": {
                          "type": "number",
                          "x-user-stories": [
                            "GIVEN user provides cursor WHEN validating input THEN numeric value should be accepted",
                            "GIVEN user provides non-numeric cursor WHEN validating input THEN error should require number"
                          ]
                        },
                        "limit": {
                          "type": "number",
                          "x-user-stories": [
                            "GIVEN user provides limit WHEN validating input THEN numeric value should be accepted",
                            "GIVEN user provides non-numeric limit WHEN validating input THEN error should require number"
                          ]
                        }
                      },
                      "required": ["baseId", "webhookId"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["name", "account", "service", "action", "params"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related list webhook payloads properties for better organization and type-safe access"
                  ]
                }
              ],
              "x-user-stories": [
                "GIVEN the application is running WHEN I run a google gmail send email action THEN it should work correctly"
              ]
            },
            {
              "title": "Google Sheets",
              "description": "Actions for Google Sheets API",
              "anyOf": [
                {
                  "title": "Append Values",
                  "description": "Appends values to a Google Sheets spreadsheet",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                        "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "google-sheets",
                      "x-business-rules": [
                        "Fixed value (google-sheets) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.2.anyOf.0.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='google-sheets' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "const": "append-values",
                      "x-business-rules": [
                        "Fixed value (append-values) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.2.anyOf.0.properties.action type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with action='append-values' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "spreadsheetId": {
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN user provides spreadsheetId WHEN validating input THEN string value should be accepted",
                            "GIVEN spreadsheetId is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "range": {
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN user provides range WHEN validating input THEN string value should be accepted",
                            "GIVEN range is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "values": {
                          "type": "array",
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-business-rules": [
                              "Array enables multiple items to be configured, supporting flexible workflows and batch operations"
                            ]
                          },
                          "x-business-rules": [
                            "Array enables multiple values to be configured, supporting flexible workflows and batch operations"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides values array WHEN validating input THEN items should be processed in order",
                            "GIVEN values array is empty WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        }
                      },
                      "required": ["spreadsheetId", "range", "values"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["name", "account", "service", "action", "params"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related append values properties for better organization and type-safe access"
                  ]
                }
              ],
              "x-user-stories": [
                "GIVEN the application is running WHEN I run a airtable list webhook payloads action THEN it should work correctly"
              ]
            },
            {
              "title": "Google Gmail",
              "description": "Actions for Google Gmail API",
              "anyOf": [
                {
                  "title": "Send Email",
                  "description": "Sends an email",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                        "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "google-gmail",
                      "x-business-rules": [
                        "Fixed value (google-gmail) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.3.anyOf.0.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='google-gmail' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "const": "send-email",
                      "x-business-rules": [
                        "Fixed value (send-email) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.3.anyOf.0.properties.action type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with action='send-email' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "from": {
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN user provides from WHEN validating input THEN string value should be accepted",
                            "GIVEN from is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "name": {
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                            "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "to": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "x-business-rules": [
                                "Array enables multiple 1 to be configured, supporting flexible workflows and batch operations"
                              ]
                            }
                          ],
                          "x-user-stories": [
                            "GIVEN user configures to WHEN validating input THEN value should meet schema requirements",
                            "GIVEN to is set WHEN processing configuration THEN value should be used correctly"
                          ]
                        },
                        "cc": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "x-business-rules": [
                                "Array enables multiple 1 to be configured, supporting flexible workflows and batch operations"
                              ]
                            }
                          ],
                          "x-user-stories": [
                            "GIVEN user configures cc WHEN validating input THEN value should meet schema requirements",
                            "GIVEN cc is set WHEN processing configuration THEN value should be used correctly"
                          ]
                        },
                        "bcc": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "x-business-rules": [
                                "Array enables multiple 1 to be configured, supporting flexible workflows and batch operations"
                              ]
                            }
                          ],
                          "x-user-stories": [
                            "GIVEN user configures bcc WHEN validating input THEN value should meet schema requirements",
                            "GIVEN bcc is set WHEN processing configuration THEN value should be used correctly"
                          ]
                        },
                        "subject": {
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN user provides subject WHEN validating input THEN string value should be accepted",
                            "GIVEN subject is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "html": {
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN user provides html WHEN validating input THEN string value should be accepted",
                            "GIVEN html is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "text": {
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN user provides text WHEN validating input THEN string value should be accepted",
                            "GIVEN text is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        }
                      },
                      "required": ["to", "subject", "html"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["name", "account", "service", "action", "params"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related send email properties for better organization and type-safe access"
                  ]
                }
              ],
              "x-user-stories": [
                "GIVEN the application is running WHEN I run a facebook get leadgen action THEN it should work correctly",
                "GIVEN the application is running WHEN I run a facebook list app subscriptions action THEN it should work correctly"
              ]
            },
            {
              "title": "LinkedIn Ads",
              "description": "Actions for LinkedIn Ads API",
              "anyOf": [
                {
                  "title": "Create Lead Notification Subscription",
                  "description": "Creates a LinkedIn Lead Notification subscription at owner level",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                        "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "linkedin-ads",
                      "x-business-rules": [
                        "Fixed value (linkedin-ads) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.4.anyOf.0.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='linkedin-ads' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "const": "create-lead-notification-subscription",
                      "x-business-rules": [
                        "Fixed value (create-lead-notification-subscription) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.4.anyOf.0.properties.action type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with action='create-lead-notification-subscription' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "webhook": {
                          "title": "Webhook URL",
                          "type": "string",
                          "format": "uri",
                          "x-business-rules": [
                            "Must be a valid URI to ensure external links function correctly without broken references"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides URL WHEN validating input THEN valid URLs should be accepted",
                            "GIVEN user provides invalid URL WHEN validating input THEN clear error message should be displayed",
                            "GIVEN URL is stored WHEN user accesses it THEN link should navigate to correct destination"
                          ]
                        },
                        "organizationId": {
                          "title": "LinkedIn Organization ID",
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                            "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                            "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                          ]
                        },
                        "leadType": {
                          "default": "SPONSORED",
                          "type": "string",
                          "enum": ["SPONSORED"],
                          "x-business-rules": [
                            "Restricted to 1 allowed values (SPONSORED) to maintain type safety and enable clear validation error messages",
                            "Defaults to \"SPONSORED\" when not specified, providing sensible fallback behavior without requiring explicit configuration"
                          ],
                          "x-user-stories": [
                            "GIVEN user selects leadType from valid options WHEN validating input THEN selection should be accepted",
                            "GIVEN user provides invalid leadType value WHEN validating input THEN error should list valid options: SPONSORED",
                            "GIVEN leadType is set to any valid enum value WHEN processing entity THEN appropriate behavior should execute"
                          ]
                        }
                      },
                      "required": ["webhook", "organizationId"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["name", "account", "service", "action", "params"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related create lead notification subscription properties for better organization and type-safe access"
                  ]
                },
                {
                  "title": "List Lead Notification Subscriptions",
                  "description": "Lists LinkedIn lead notification subscriptions for an organization",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                        "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "linkedin-ads",
                      "x-business-rules": [
                        "Fixed value (linkedin-ads) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.4.anyOf.1.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='linkedin-ads' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "const": "list-lead-notification-subscriptions",
                      "x-business-rules": [
                        "Fixed value (list-lead-notification-subscriptions) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.4.anyOf.1.properties.action type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with action='list-lead-notification-subscriptions' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "organizationId": {
                          "title": "LinkedIn Organization ID",
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                            "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                            "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                          ]
                        }
                      },
                      "required": ["organizationId"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["name", "account", "service", "action", "params"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related list lead notification subscriptions properties for better organization and type-safe access"
                  ]
                },
                {
                  "title": "Get Lead Form Response",
                  "description": "Retrieves a single LinkedIn Lead Form Response by its ID",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                        "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "linkedin-ads",
                      "x-business-rules": [
                        "Fixed value (linkedin-ads) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.4.anyOf.2.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='linkedin-ads' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "const": "get-lead-form-response",
                      "x-business-rules": [
                        "Fixed value (get-lead-form-response) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.4.anyOf.2.properties.action type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with action='get-lead-form-response' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "leadResponseId": {
                          "title": "Lead Response ID",
                          "description": "The unique identifier for the lead form response",
                          "type": "string",
                          "x-business-rules": [
                            "Uniqueness constraint prevents conflicts and ensures each lead response id can be unambiguously referenced"
                          ],
                          "x-user-stories": [
                            "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                            "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                            "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                          ]
                        }
                      },
                      "required": ["leadResponseId"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["name", "account", "service", "action", "params"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related get lead form response properties for better organization and type-safe access"
                  ]
                }
              ],
              "x-user-stories": [
                "GIVEN the application is running WHEN I run a calendly list webhook subscriptions action THEN it should work correctly",
                "GIVEN the application is running WHEN I run a calendly get event type action THEN it should work correctly",
                "GIVEN the application is running WHEN I run a calendly get event type action on invite created THEN it should work correctly"
              ]
            },
            {
              "title": "Facebook Ads",
              "description": "Actions for Facebook Ads API",
              "anyOf": [
                {
                  "title": "List App Subscriptions",
                  "description": "Lists subscriptions configured on the Facebook App",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                        "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "facebook-ads",
                      "x-business-rules": [
                        "Fixed value (facebook-ads) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.5.anyOf.0.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='facebook-ads' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "const": "list-app-subscriptions",
                      "x-business-rules": [
                        "Fixed value (list-app-subscriptions) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.5.anyOf.0.properties.action type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with action='list-app-subscriptions' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "appId": {
                          "title": "Facebook App ID",
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                            "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                            "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                          ]
                        },
                        "appSecret": {
                          "title": "Facebook App Secret",
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN user provides appSecret WHEN validating input THEN string value should be accepted",
                            "GIVEN appSecret is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        }
                      },
                      "required": ["appId", "appSecret"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["name", "account", "service", "action", "params"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related list app subscriptions properties for better organization and type-safe access"
                  ]
                },
                {
                  "title": "Get LeadGen",
                  "description": "Retrieves lead generation data using the leadgen_id from webhook",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                        "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "facebook-ads",
                      "x-business-rules": [
                        "Fixed value (facebook-ads) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.5.anyOf.1.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='facebook-ads' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "const": "get-leadgen",
                      "x-business-rules": [
                        "Fixed value (get-leadgen) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.5.anyOf.1.properties.action type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with action='get-leadgen' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "leadgenId": {
                          "title": "Leadgen ID",
                          "description": "The leadgen_id from Facebook webhook data",
                          "type": "string",
                          "x-business-rules": ["The leadgen_id from Facebook webhook data"],
                          "x-user-stories": [
                            "GIVEN a new entity is created WHEN the system assigns an ID THEN it should be unique within the parent collection",
                            "GIVEN an entity exists WHEN attempting to modify its ID THEN the system should prevent changes (read-only constraint)",
                            "GIVEN a client requests an entity by ID WHEN the ID is valid THEN the entity should be retrieved successfully"
                          ]
                        }
                      },
                      "required": ["leadgenId"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["name", "account", "service", "action", "params"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related get leadgen properties for better organization and type-safe access"
                  ]
                }
              ],
              "x-user-stories": [
                "GIVEN the application is running WHEN I run a linkedin list lead notification subscriptions action THEN it should work correctly",
                "GIVEN the application is running WHEN I run a linkedin get lead form response action THEN it should work correctly"
              ]
            },
            {
              "title": "Notion",
              "description": "Actions for Notion API",
              "anyOf": [
                {
                  "title": "Create Page",
                  "description": "Creates a new page in Notion",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                        "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "notion",
                      "x-business-rules": [
                        "Fixed value (notion) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.0.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='notion' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "const": "create-page",
                      "x-business-rules": [
                        "Fixed value (create-page) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.0.properties.action type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with action='create-page' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "parent": {
                          "description": "Parent of the new page",
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "const": "database_id",
                                  "x-business-rules": [
                                    "Fixed value (database_id) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.0.properties.params.properties.parent.anyOf.0.properties.type type in discriminated unions and routing logic"
                                  ],
                                  "x-user-stories": [
                                    "GIVEN entity with type='database_id' WHEN processing configuration THEN correct handler should be selected",
                                    "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                                  ]
                                },
                                "database_id": {
                                  "type": "string",
                                  "x-user-stories": [
                                    "GIVEN user provides database_id WHEN validating input THEN string value should be accepted",
                                    "GIVEN database_id is empty string WHEN validating input THEN behavior should follow optional/required rules"
                                  ]
                                }
                              },
                              "required": ["type", "database_id"],
                              "additionalProperties": false,
                              "x-business-rules": [
                                "Object structure groups related 0 properties for better organization and type-safe access"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "const": "page_id",
                                  "x-business-rules": [
                                    "Fixed value (page_id) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.0.properties.params.properties.parent.anyOf.1.properties.type type in discriminated unions and routing logic"
                                  ],
                                  "x-user-stories": [
                                    "GIVEN entity with type='page_id' WHEN processing configuration THEN correct handler should be selected",
                                    "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                                  ]
                                },
                                "page_id": {
                                  "type": "string",
                                  "x-user-stories": [
                                    "GIVEN user provides page_id WHEN validating input THEN string value should be accepted",
                                    "GIVEN page_id is empty string WHEN validating input THEN behavior should follow optional/required rules"
                                  ]
                                }
                              },
                              "required": ["type", "page_id"],
                              "additionalProperties": false,
                              "x-business-rules": [
                                "Object structure groups related 1 properties for better organization and type-safe access"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "const": "workspace",
                                  "x-business-rules": [
                                    "Fixed value (workspace) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.0.properties.params.properties.parent.anyOf.2.properties.type type in discriminated unions and routing logic"
                                  ],
                                  "x-user-stories": [
                                    "GIVEN entity with type='workspace' WHEN processing configuration THEN correct handler should be selected",
                                    "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                                  ]
                                },
                                "workspace": {
                                  "type": "boolean",
                                  "const": true,
                                  "x-business-rules": [
                                    "Fixed value (true) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.0.properties.params.properties.parent.anyOf.2.properties.workspace type in discriminated unions and routing logic"
                                  ],
                                  "x-user-stories": [
                                    "GIVEN workspace is true WHEN processing entity THEN corresponding behavior should be enforced",
                                    "GIVEN workspace is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                                    "GIVEN configuration with workspace WHEN validating settings THEN boolean value should be accepted"
                                  ]
                                }
                              },
                              "required": ["type", "workspace"],
                              "additionalProperties": false,
                              "x-business-rules": [
                                "Object structure groups related 2 properties for better organization and type-safe access"
                              ]
                            }
                          ],
                          "x-user-stories": [
                            "GIVEN user configures parent WHEN validating input THEN value should meet schema requirements",
                            "GIVEN parent is set WHEN processing configuration THEN value should be used correctly"
                          ]
                        },
                        "properties": {
                          "description": "Page properties",
                          "type": "object",
                          "propertyNames": {
                            "type": "string"
                          },
                          "additionalProperties": {},
                          "x-business-rules": [
                            "Object structure groups related properties properties for better organization and type-safe access"
                          ],
                          "x-user-stories": [
                            "GIVEN user configures properties WHEN validating input THEN value should meet schema requirements",
                            "GIVEN properties is set WHEN processing configuration THEN value should be used correctly"
                          ]
                        },
                        "children": {
                          "description": "Page content blocks",
                          "type": "array",
                          "items": {},
                          "x-business-rules": [
                            "Array enables multiple children to be configured, supporting flexible workflows and batch operations"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides children array WHEN validating input THEN items should be processed in order",
                            "GIVEN children array is empty WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "icon": {
                          "description": "Page icon",
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "const": "emoji",
                                  "x-business-rules": [
                                    "Fixed value (emoji) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.0.properties.params.properties.icon.anyOf.0.properties.type type in discriminated unions and routing logic"
                                  ],
                                  "x-user-stories": [
                                    "GIVEN entity with type='emoji' WHEN processing configuration THEN correct handler should be selected",
                                    "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                                  ]
                                },
                                "emoji": {
                                  "type": "string",
                                  "x-user-stories": [
                                    "GIVEN user provides emoji WHEN validating input THEN string value should be accepted",
                                    "GIVEN emoji is empty string WHEN validating input THEN behavior should follow optional/required rules"
                                  ]
                                }
                              },
                              "required": ["type", "emoji"],
                              "additionalProperties": false,
                              "x-business-rules": [
                                "Object structure groups related 0 properties for better organization and type-safe access"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "const": "external",
                                  "x-business-rules": [
                                    "Fixed value (external) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.0.properties.params.properties.icon.anyOf.1.properties.type type in discriminated unions and routing logic"
                                  ],
                                  "x-user-stories": [
                                    "GIVEN entity with type='external' WHEN processing configuration THEN correct handler should be selected",
                                    "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                                  ]
                                },
                                "external": {
                                  "type": "object",
                                  "properties": {
                                    "url": {
                                      "type": "string",
                                      "x-user-stories": [
                                        "GIVEN user provides url WHEN validating input THEN string value should be accepted",
                                        "GIVEN url is empty string WHEN validating input THEN behavior should follow optional/required rules"
                                      ]
                                    }
                                  },
                                  "required": ["url"],
                                  "additionalProperties": false,
                                  "x-business-rules": [
                                    "Object structure groups related external properties for better organization and type-safe access"
                                  ],
                                  "x-user-stories": [
                                    "GIVEN user configures external WHEN validating input THEN value should meet schema requirements",
                                    "GIVEN external is set WHEN processing configuration THEN value should be used correctly"
                                  ]
                                }
                              },
                              "required": ["type", "external"],
                              "additionalProperties": false,
                              "x-business-rules": [
                                "Object structure groups related 1 properties for better organization and type-safe access"
                              ]
                            }
                          ],
                          "x-user-stories": [
                            "GIVEN user configures icon WHEN validating input THEN value should meet schema requirements",
                            "GIVEN icon is set WHEN processing configuration THEN value should be used correctly"
                          ]
                        },
                        "cover": {
                          "description": "Page cover image",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "external",
                              "x-business-rules": [
                                "Fixed value (external) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.0.properties.params.properties.cover.properties.type type in discriminated unions and routing logic"
                              ],
                              "x-user-stories": [
                                "GIVEN entity with type='external' WHEN processing configuration THEN correct handler should be selected",
                                "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                              ]
                            },
                            "external": {
                              "type": "object",
                              "properties": {
                                "url": {
                                  "type": "string",
                                  "x-user-stories": [
                                    "GIVEN user provides url WHEN validating input THEN string value should be accepted",
                                    "GIVEN url is empty string WHEN validating input THEN behavior should follow optional/required rules"
                                  ]
                                }
                              },
                              "required": ["url"],
                              "additionalProperties": false,
                              "x-business-rules": [
                                "Object structure groups related external properties for better organization and type-safe access"
                              ],
                              "x-user-stories": [
                                "GIVEN user configures external WHEN validating input THEN value should meet schema requirements",
                                "GIVEN external is set WHEN processing configuration THEN value should be used correctly"
                              ]
                            }
                          },
                          "required": ["type", "external"],
                          "additionalProperties": false,
                          "x-business-rules": [
                            "Object structure groups related cover properties for better organization and type-safe access"
                          ],
                          "x-user-stories": [
                            "GIVEN user configures cover WHEN validating input THEN value should meet schema requirements",
                            "GIVEN cover is set WHEN processing configuration THEN value should be used correctly"
                          ]
                        }
                      },
                      "required": ["parent", "properties"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["name", "account", "service", "action", "params"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related create page properties for better organization and type-safe access"
                  ]
                },
                {
                  "title": "Get Page",
                  "description": "Retrieves a page from Notion",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                        "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "notion",
                      "x-business-rules": [
                        "Fixed value (notion) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.1.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='notion' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "const": "get-page",
                      "x-business-rules": [
                        "Fixed value (get-page) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.1.properties.action type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with action='get-page' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "pageId": {
                          "description": "The ID of the page to retrieve",
                          "type": "string",
                          "x-business-rules": ["The ID of the page to retrieve"],
                          "x-user-stories": [
                            "GIVEN user provides pageId WHEN validating input THEN string value should be accepted",
                            "GIVEN pageId is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "filterProperties": {
                          "description": "Properties to include in response",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-business-rules": [
                            "Array enables multiple filterproperties to be configured, supporting flexible workflows and batch operations"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides filterProperties array WHEN validating input THEN items should be processed in order",
                            "GIVEN filterProperties array is empty WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        }
                      },
                      "required": ["pageId"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["name", "account", "service", "action", "params"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related get page properties for better organization and type-safe access"
                  ]
                },
                {
                  "title": "Update Page",
                  "description": "Updates properties, icon, cover, or archived status of a Notion page",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                        "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "notion",
                      "x-business-rules": [
                        "Fixed value (notion) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.2.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='notion' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "const": "update-page",
                      "x-business-rules": [
                        "Fixed value (update-page) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.2.properties.action type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with action='update-page' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "pageId": {
                          "description": "The ID of the page to update",
                          "type": "string",
                          "x-business-rules": ["The ID of the page to update"],
                          "x-user-stories": [
                            "GIVEN user provides pageId WHEN validating input THEN string value should be accepted",
                            "GIVEN pageId is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "properties": {
                          "description": "Page properties to update",
                          "type": "object",
                          "propertyNames": {
                            "type": "string"
                          },
                          "additionalProperties": {},
                          "x-business-rules": [
                            "Object structure groups related properties properties for better organization and type-safe access"
                          ],
                          "x-user-stories": [
                            "GIVEN user configures properties WHEN validating input THEN value should meet schema requirements",
                            "GIVEN properties is set WHEN processing configuration THEN value should be used correctly"
                          ]
                        },
                        "icon": {
                          "description": "Page icon to set",
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "const": "emoji",
                                  "x-business-rules": [
                                    "Fixed value (emoji) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.2.properties.params.properties.icon.anyOf.0.properties.type type in discriminated unions and routing logic"
                                  ],
                                  "x-user-stories": [
                                    "GIVEN entity with type='emoji' WHEN processing configuration THEN correct handler should be selected",
                                    "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                                  ]
                                },
                                "emoji": {
                                  "type": "string",
                                  "x-user-stories": [
                                    "GIVEN user provides emoji WHEN validating input THEN string value should be accepted",
                                    "GIVEN emoji is empty string WHEN validating input THEN behavior should follow optional/required rules"
                                  ]
                                }
                              },
                              "required": ["type", "emoji"],
                              "additionalProperties": false,
                              "x-business-rules": [
                                "Object structure groups related 0 properties for better organization and type-safe access"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "const": "external",
                                  "x-business-rules": [
                                    "Fixed value (external) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.2.properties.params.properties.icon.anyOf.1.properties.type type in discriminated unions and routing logic"
                                  ],
                                  "x-user-stories": [
                                    "GIVEN entity with type='external' WHEN processing configuration THEN correct handler should be selected",
                                    "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                                  ]
                                },
                                "external": {
                                  "type": "object",
                                  "properties": {
                                    "url": {
                                      "type": "string",
                                      "x-user-stories": [
                                        "GIVEN user provides url WHEN validating input THEN string value should be accepted",
                                        "GIVEN url is empty string WHEN validating input THEN behavior should follow optional/required rules"
                                      ]
                                    }
                                  },
                                  "required": ["url"],
                                  "additionalProperties": false,
                                  "x-business-rules": [
                                    "Object structure groups related external properties for better organization and type-safe access"
                                  ],
                                  "x-user-stories": [
                                    "GIVEN user configures external WHEN validating input THEN value should meet schema requirements",
                                    "GIVEN external is set WHEN processing configuration THEN value should be used correctly"
                                  ]
                                }
                              },
                              "required": ["type", "external"],
                              "additionalProperties": false,
                              "x-business-rules": [
                                "Object structure groups related 1 properties for better organization and type-safe access"
                              ]
                            }
                          ],
                          "x-user-stories": [
                            "GIVEN user configures icon WHEN validating input THEN value should meet schema requirements",
                            "GIVEN icon is set WHEN processing configuration THEN value should be used correctly"
                          ]
                        },
                        "cover": {
                          "description": "Page cover image to set",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "external",
                              "x-business-rules": [
                                "Fixed value (external) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.2.properties.params.properties.cover.properties.type type in discriminated unions and routing logic"
                              ],
                              "x-user-stories": [
                                "GIVEN entity with type='external' WHEN processing configuration THEN correct handler should be selected",
                                "GIVEN invalid type value WHEN validating configuration THEN clear error message should identify the issue"
                              ]
                            },
                            "external": {
                              "type": "object",
                              "properties": {
                                "url": {
                                  "type": "string",
                                  "x-user-stories": [
                                    "GIVEN user provides url WHEN validating input THEN string value should be accepted",
                                    "GIVEN url is empty string WHEN validating input THEN behavior should follow optional/required rules"
                                  ]
                                }
                              },
                              "required": ["url"],
                              "additionalProperties": false,
                              "x-business-rules": [
                                "Object structure groups related external properties for better organization and type-safe access"
                              ],
                              "x-user-stories": [
                                "GIVEN user configures external WHEN validating input THEN value should meet schema requirements",
                                "GIVEN external is set WHEN processing configuration THEN value should be used correctly"
                              ]
                            }
                          },
                          "required": ["type", "external"],
                          "additionalProperties": false,
                          "x-business-rules": [
                            "Object structure groups related cover properties for better organization and type-safe access"
                          ],
                          "x-user-stories": [
                            "GIVEN user configures cover WHEN validating input THEN value should meet schema requirements",
                            "GIVEN cover is set WHEN processing configuration THEN value should be used correctly"
                          ]
                        },
                        "archived": {
                          "description": "Whether to archive/unarchive the page",
                          "type": "boolean",
                          "x-business-rules": [
                            "Boolean flag enables/disables archived functionality through simple true/false configuration"
                          ],
                          "x-user-stories": [
                            "GIVEN archived is true WHEN processing entity THEN corresponding behavior should be enforced",
                            "GIVEN archived is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
                            "GIVEN configuration with archived WHEN validating settings THEN boolean value should be accepted"
                          ]
                        }
                      },
                      "required": ["pageId"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["name", "account", "service", "action", "params"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related update page properties for better organization and type-safe access"
                  ]
                },
                {
                  "title": "Delete Page",
                  "description": "Deletes (archives) a page in Notion",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                        "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "notion",
                      "x-business-rules": [
                        "Fixed value (notion) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.3.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='notion' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "const": "delete-page",
                      "x-business-rules": [
                        "Fixed value (delete-page) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.3.properties.action type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with action='delete-page' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "pageId": {
                          "description": "The ID of the page to delete",
                          "type": "string",
                          "x-business-rules": ["The ID of the page to delete"],
                          "x-user-stories": [
                            "GIVEN user provides pageId WHEN validating input THEN string value should be accepted",
                            "GIVEN pageId is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        }
                      },
                      "required": ["pageId"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["name", "account", "service", "action", "params"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related delete page properties for better organization and type-safe access"
                  ]
                },
                {
                  "title": "List Pages",
                  "description": "Lists pages from a Notion database",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                        "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "notion",
                      "x-business-rules": [
                        "Fixed value (notion) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.4.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='notion' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "const": "list-pages",
                      "x-business-rules": [
                        "Fixed value (list-pages) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.4.properties.action type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with action='list-pages' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "databaseId": {
                          "description": "The ID of the database to query",
                          "type": "string",
                          "x-business-rules": ["The ID of the database to query"],
                          "x-user-stories": [
                            "GIVEN user provides databaseId WHEN validating input THEN string value should be accepted",
                            "GIVEN databaseId is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "filter": {
                          "description": "Filter conditions for the query",
                          "x-user-stories": [
                            "GIVEN user configures filter WHEN validating input THEN value should meet schema requirements",
                            "GIVEN filter is set WHEN processing configuration THEN value should be used correctly"
                          ]
                        },
                        "sorts": {
                          "description": "Sort conditions for the query",
                          "type": "array",
                          "items": {},
                          "x-business-rules": [
                            "Array enables multiple sorts to be configured, supporting flexible workflows and batch operations"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides sorts array WHEN validating input THEN items should be processed in order",
                            "GIVEN sorts array is empty WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "startCursor": {
                          "description": "Pagination cursor",
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN user provides startCursor WHEN validating input THEN string value should be accepted",
                            "GIVEN startCursor is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "pageSize": {
                          "description": "Number of results per page",
                          "type": "number",
                          "minimum": 1,
                          "maximum": 100,
                          "x-business-rules": [
                            "Numeric range (1-100) prevents overflow errors and ensures values stay within valid business bounds"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides pageSize between 1 and 100 WHEN validating input THEN value should be accepted",
                            "GIVEN user provides pageSize below 1 WHEN validating input THEN error should enforce minimum value",
                            "GIVEN user provides pageSize above 100 WHEN validating input THEN error should enforce maximum value"
                          ]
                        }
                      },
                      "required": ["databaseId"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["name", "account", "service", "action", "params"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related list pages properties for better organization and type-safe access"
                  ]
                },
                {
                  "title": "Search Pages",
                  "description": "Searches for pages in Notion",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                        "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "notion",
                      "x-business-rules": [
                        "Fixed value (notion) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.5.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='notion' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "const": "search-pages",
                      "x-business-rules": [
                        "Fixed value (search-pages) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.6.anyOf.5.properties.action type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with action='search-pages' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "query": {
                          "description": "Search query text",
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN user provides query WHEN validating input THEN string value should be accepted",
                            "GIVEN query is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "filter": {
                          "description": "Optional filter for search results",
                          "type": "object",
                          "properties": {
                            "property": {
                              "type": "string",
                              "x-user-stories": [
                                "GIVEN automation with filter condition WHEN condition evaluates to true THEN subsequent actions should execute",
                                "GIVEN automation with filter condition WHEN condition evaluates to false THEN subsequent actions should be skipped",
                                "GIVEN filter uses template variables WHEN evaluating condition THEN variables should resolve from trigger context"
                              ]
                            },
                            "value": {
                              "type": "string",
                              "x-user-stories": [
                                "GIVEN automation with filter condition WHEN condition evaluates to true THEN subsequent actions should execute",
                                "GIVEN automation with filter condition WHEN condition evaluates to false THEN subsequent actions should be skipped",
                                "GIVEN filter uses template variables WHEN evaluating condition THEN variables should resolve from trigger context"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "x-business-rules": [
                            "Object structure groups related filter properties for better organization and type-safe access"
                          ],
                          "x-user-stories": [
                            "GIVEN user configures filter WHEN validating input THEN value should meet schema requirements",
                            "GIVEN filter is set WHEN processing configuration THEN value should be used correctly"
                          ]
                        }
                      },
                      "required": ["query"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["name", "account", "service", "action", "params"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related search pages properties for better organization and type-safe access"
                  ]
                }
              ]
            },
            {
              "title": "Qonto",
              "description": "Actions for Qonto API",
              "anyOf": [
                {
                  "title": "Create Client",
                  "description": "Creates a new client in Qonto",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                        "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "qonto",
                      "x-business-rules": [
                        "Fixed value (qonto) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.7.anyOf.0.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='qonto' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "const": "create-client",
                      "x-business-rules": [
                        "Fixed value (create-client) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.7.anyOf.0.properties.action type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with action='create-client' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Client name",
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                            "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "email": {
                          "description": "Client email",
                          "type": "string",
                          "format": "email",
                          "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$",
                          "x-business-rules": [
                            "Pattern constraint enforces data format consistency and error prevention, rejecting invalid formats before they cause system errors",
                            "Email format validation prevents delivery failures and ensures communication channels are properly configured"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides email matching pattern WHEN validating input THEN value should be accepted",
                            "GIVEN user provides email not matching pattern WHEN validating input THEN clear error message should explain format requirement",
                            "GIVEN email is stored WHEN retrieved later THEN original format should be preserved"
                          ]
                        },
                        "phone": {
                          "description": "Client phone number",
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN user provides phone WHEN validating input THEN string value should be accepted",
                            "GIVEN phone is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "address": {
                          "description": "Client address",
                          "type": "object",
                          "properties": {
                            "street": {
                              "description": "Street address",
                              "type": "string",
                              "x-user-stories": [
                                "GIVEN user provides street WHEN validating input THEN string value should be accepted",
                                "GIVEN street is empty string WHEN validating input THEN behavior should follow optional/required rules"
                              ]
                            },
                            "city": {
                              "description": "City",
                              "type": "string",
                              "x-user-stories": [
                                "GIVEN user provides city WHEN validating input THEN string value should be accepted",
                                "GIVEN city is empty string WHEN validating input THEN behavior should follow optional/required rules"
                              ]
                            },
                            "postal_code": {
                              "description": "Postal code",
                              "type": "string",
                              "x-user-stories": [
                                "GIVEN user provides postal_code WHEN validating input THEN string value should be accepted",
                                "GIVEN postal_code is empty string WHEN validating input THEN behavior should follow optional/required rules"
                              ]
                            },
                            "country": {
                              "description": "Country",
                              "type": "string",
                              "x-user-stories": [
                                "GIVEN user provides country WHEN validating input THEN string value should be accepted",
                                "GIVEN country is empty string WHEN validating input THEN behavior should follow optional/required rules"
                              ]
                            }
                          },
                          "required": ["street", "city", "postal_code", "country"],
                          "additionalProperties": false,
                          "x-business-rules": [
                            "Object structure groups related address properties for better organization and type-safe access"
                          ],
                          "x-user-stories": [
                            "GIVEN user configures address WHEN validating input THEN value should meet schema requirements",
                            "GIVEN address is set WHEN processing configuration THEN value should be used correctly"
                          ]
                        },
                        "vat_number": {
                          "description": "VAT number",
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN user provides vat_number WHEN validating input THEN string value should be accepted",
                            "GIVEN vat_number is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        }
                      },
                      "required": ["name"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["name", "account", "service", "action", "params"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related create client properties for better organization and type-safe access"
                  ]
                },
                {
                  "title": "Create Invoice",
                  "description": "Creates a new invoice in Qonto",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "x-user-stories": [
                        "GIVEN user provides name WHEN validating input THEN string value should be accepted",
                        "GIVEN name is empty string WHEN validating input THEN behavior should follow optional/required rules"
                      ]
                    },
                    "account": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-user-stories": [
                        "GIVEN user configures account WHEN validating input THEN value should meet schema requirements",
                        "GIVEN account is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    },
                    "service": {
                      "type": "string",
                      "const": "qonto",
                      "x-business-rules": [
                        "Fixed value (qonto) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.7.anyOf.1.properties.service type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with service='qonto' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid service value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "const": "create-invoice",
                      "x-business-rules": [
                        "Fixed value (create-invoice) identifies this specific root.definitions.automation_action.anyOf.4.anyOf.7.anyOf.1.properties.action type in discriminated unions and routing logic"
                      ],
                      "x-user-stories": [
                        "GIVEN entity with action='create-invoice' WHEN processing configuration THEN correct handler should be selected",
                        "GIVEN invalid action value WHEN validating configuration THEN clear error message should identify the issue"
                      ]
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "client_id": {
                          "description": "ID of the client for this invoice",
                          "type": "string",
                          "x-business-rules": ["ID of the client for this invoice"],
                          "x-user-stories": [
                            "GIVEN a user connects external service WHEN providing OAuth client ID THEN authentication should succeed with valid credentials",
                            "GIVEN invalid OAuth client ID WHEN attempting authentication THEN system should return clear error message",
                            "GIVEN automation needs external API access WHEN executing action THEN stored OAuth tokens should be used for authentication"
                          ]
                        },
                        "amount": {
                          "description": "Invoice total amount",
                          "type": "number",
                          "exclusiveMinimum": 0,
                          "x-user-stories": [
                            "GIVEN user provides amount WHEN validating input THEN numeric value should be accepted",
                            "GIVEN user provides non-numeric amount WHEN validating input THEN error should require number"
                          ]
                        },
                        "currency": {
                          "description": "Invoice currency",
                          "default": "EUR",
                          "type": "string",
                          "x-business-rules": [
                            "Defaults to \"EUR\" when not specified, providing sensible fallback behavior without requiring explicit configuration"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides currency WHEN validating input THEN string value should be accepted",
                            "GIVEN currency is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "due_date": {
                          "description": "Invoice due date (ISO 8601 format)",
                          "type": "string",
                          "x-business-rules": ["Invoice due date (ISO 8601 format)"],
                          "x-user-stories": [
                            "GIVEN user provides due_date WHEN validating input THEN string value should be accepted",
                            "GIVEN due_date is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "items": {
                          "description": "Invoice line items",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "description": "Item description",
                                "type": "string",
                                "x-user-stories": [
                                  "GIVEN user provides description WHEN validating input THEN string value should be accepted",
                                  "GIVEN description is empty string WHEN validating input THEN behavior should follow optional/required rules"
                                ]
                              },
                              "quantity": {
                                "description": "Quantity",
                                "type": "number",
                                "exclusiveMinimum": 0,
                                "x-user-stories": [
                                  "GIVEN user provides quantity WHEN validating input THEN numeric value should be accepted",
                                  "GIVEN user provides non-numeric quantity WHEN validating input THEN error should require number"
                                ]
                              },
                              "unit_price": {
                                "description": "Unit price",
                                "type": "number",
                                "exclusiveMinimum": 0,
                                "x-user-stories": [
                                  "GIVEN user provides unit_price WHEN validating input THEN numeric value should be accepted",
                                  "GIVEN user provides non-numeric unit_price WHEN validating input THEN error should require number"
                                ]
                              }
                            },
                            "required": ["description", "quantity", "unit_price"],
                            "additionalProperties": false,
                            "x-business-rules": [
                              "Object structure groups related items properties for better organization and type-safe access"
                            ]
                          },
                          "x-business-rules": [
                            "Array enables multiple items to be configured, supporting flexible workflows and batch operations"
                          ],
                          "x-user-stories": [
                            "GIVEN user provides items array WHEN validating input THEN items should be processed in order",
                            "GIVEN items array is empty WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "reference": {
                          "description": "Invoice reference number",
                          "type": "string",
                          "x-business-rules": ["Invoice reference number"],
                          "x-user-stories": [
                            "GIVEN user provides reference WHEN validating input THEN string value should be accepted",
                            "GIVEN reference is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        },
                        "notes": {
                          "description": "Additional notes",
                          "type": "string",
                          "x-user-stories": [
                            "GIVEN user provides notes WHEN validating input THEN string value should be accepted",
                            "GIVEN notes is empty string WHEN validating input THEN behavior should follow optional/required rules"
                          ]
                        }
                      },
                      "required": ["client_id", "amount", "currency", "due_date", "items"],
                      "additionalProperties": false,
                      "x-business-rules": [
                        "Object structure groups related params properties for better organization and type-safe access"
                      ],
                      "x-user-stories": [
                        "GIVEN user configures params WHEN validating input THEN value should meet schema requirements",
                        "GIVEN params is set WHEN processing configuration THEN value should be used correctly"
                      ]
                    }
                  },
                  "required": ["name", "account", "service", "action", "params"],
                  "additionalProperties": false,
                  "x-business-rules": [
                    "Object structure groups related create invoice properties for better organization and type-safe access"
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    "filter_condition": {
      "title": "Filter Condition",
      "anyOf": [
        {
          "title": "String Comparison Filter",
          "description": "Filter based on string contains/does-not-contain operations",
          "type": "object",
          "properties": {
            "target": {
              "title": "Target Field",
              "description": "The field path to filter on (e.g., 'status', 'user.email', 'trigger.data.name')",
              "type": "string",
              "minLength": 1,
              "examples": ["status", "email", "name", "trigger.data.subject"],
              "x-business-rules": ["The field path to filter on (e"],
              "x-user-stories": [
                "GIVEN automation with filter condition WHEN condition evaluates to true THEN subsequent actions should execute",
                "GIVEN automation with filter condition WHEN condition evaluates to false THEN subsequent actions should be skipped",
                "GIVEN filter uses template variables WHEN evaluating condition THEN variables should resolve from trigger context"
              ]
            },
            "operator": {
              "title": "Comparison Operator",
              "description": "String comparison operation to perform",
              "type": "string",
              "enum": ["contains", "does-not-contain"],
              "x-business-rules": [
                "Restricted to 2 allowed values (contains, does-not-contain) to maintain type safety and enable clear validation error messages"
              ],
              "x-user-stories": [
                "GIVEN user selects operator from valid options WHEN validating input THEN selection should be accepted",
                "GIVEN user provides invalid operator value WHEN validating input THEN error should list valid options: contains, does-not-contain",
                "GIVEN operator is set to any valid enum value WHEN processing entity THEN appropriate behavior should execute"
              ]
            },
            "value": {
              "title": "Comparison Value",
              "description": "The value to compare against (supports template variables like {{field_name}})",
              "type": "string",
              "examples": ["active", "john@example.com", "{{trigger.email}}", "{{env.DOMAIN}}"],
              "x-business-rules": [
                "The value to compare against (supports template variables like {{field_name}})"
              ],
              "x-user-stories": [
                "GIVEN automation with filter condition WHEN condition evaluates to true THEN subsequent actions should execute",
                "GIVEN automation with filter condition WHEN condition evaluates to false THEN subsequent actions should be skipped",
                "GIVEN filter uses template variables WHEN evaluating condition THEN variables should resolve from trigger context"
              ]
            }
          },
          "required": ["target", "operator", "value"],
          "additionalProperties": false,
          "x-business-rules": [
            "Object structure groups related string comparison filter properties for better organization and type-safe access"
          ]
        },
        {
          "title": "Existence/Boolean Filter",
          "description": "Filter based on field existence or boolean value",
          "type": "object",
          "properties": {
            "target": {
              "title": "Target Field",
              "description": "The field path to filter on (e.g., 'verified', 'user.name', 'trigger.error')",
              "type": "string",
              "minLength": 1,
              "examples": ["verified", "user.email", "trigger.error", "previous_action.result"],
              "x-business-rules": ["The field path to filter on (e"],
              "x-user-stories": [
                "GIVEN automation with filter condition WHEN condition evaluates to true THEN subsequent actions should execute",
                "GIVEN automation with filter condition WHEN condition evaluates to false THEN subsequent actions should be skipped",
                "GIVEN filter uses template variables WHEN evaluating condition THEN variables should resolve from trigger context"
              ]
            },
            "operator": {
              "title": "Existence/Boolean Operator",
              "description": "Check if field exists, doesn't exist, is true, or is false",
              "type": "string",
              "enum": ["exists", "does-not-exist", "is-true", "is-false"],
              "x-business-rules": [
                "Restricted to 4 allowed values (exists, does-not-exist, is-true, ...) to maintain type safety and enable clear validation error messages"
              ],
              "x-user-stories": [
                "GIVEN user selects operator from valid options WHEN validating input THEN selection should be accepted",
                "GIVEN user provides invalid operator value WHEN validating input THEN error should list valid options: exists, does-not-exist, is-true",
                "GIVEN operator is set to any valid enum value WHEN processing entity THEN appropriate behavior should execute"
              ]
            }
          },
          "required": ["target", "operator"],
          "additionalProperties": false,
          "x-business-rules": [
            "Object structure groups related existence/boolean filter properties for better organization and type-safe access"
          ]
        },
        {
          "title": "AND Filter",
          "description": "Combine multiple conditions with AND logic (all must be true)",
          "type": "object",
          "properties": {
            "and": {
              "title": "AND Conditions",
              "description": "Array of filter conditions that must all evaluate to true",
              "type": "array",
              "items": {
                "$ref": "#/definitions/filter_condition"
              },
              "minItems": 2,
              "examples": [
                [
                  {
                    "target": "status",
                    "operator": "contains",
                    "value": "active"
                  },
                  {
                    "target": "verified",
                    "operator": "is-true"
                  }
                ]
              ],
              "x-business-rules": [
                "Array enables multiple and conditions to be configured, supporting flexible workflows and batch operations"
              ],
              "x-user-stories": [
                "GIVEN automation with filter condition WHEN condition evaluates to true THEN subsequent actions should execute",
                "GIVEN automation with filter condition WHEN condition evaluates to false THEN subsequent actions should be skipped",
                "GIVEN filter uses template variables WHEN evaluating condition THEN variables should resolve from trigger context"
              ]
            }
          },
          "required": ["and"],
          "additionalProperties": false,
          "x-business-rules": [
            "Object structure groups related and filter properties for better organization and type-safe access"
          ]
        },
        {
          "title": "OR Filter",
          "description": "Combine multiple conditions with OR logic (at least one must be true)",
          "type": "object",
          "properties": {
            "or": {
              "title": "OR Conditions",
              "description": "Array of filter conditions where at least one must evaluate to true",
              "type": "array",
              "items": {
                "$ref": "#/definitions/filter_condition"
              },
              "minItems": 2,
              "examples": [
                [
                  {
                    "target": "status",
                    "operator": "contains",
                    "value": "pending"
                  },
                  {
                    "target": "status",
                    "operator": "contains",
                    "value": "processing"
                  }
                ]
              ],
              "x-business-rules": [
                "Array enables multiple or conditions to be configured, supporting flexible workflows and batch operations"
              ],
              "x-user-stories": [
                "GIVEN automation with filter condition WHEN condition evaluates to true THEN subsequent actions should execute",
                "GIVEN automation with filter condition WHEN condition evaluates to false THEN subsequent actions should be skipped",
                "GIVEN filter uses template variables WHEN evaluating condition THEN variables should resolve from trigger context"
              ]
            }
          },
          "required": ["or"],
          "additionalProperties": false,
          "x-business-rules": [
            "Object structure groups related or filter properties for better organization and type-safe access"
          ]
        }
      ],
      "description": "Filter conditions for querying and filtering data in table views, automations, and reports. Specify field to filter on, comparison operator (equals, not equals, contains, greater than, less than, is empty, is not empty), and comparison value. Conditions can be combined with AND/OR logic. Supports dynamic values from other fields, current user, or system variables. Used throughout the application for data filtering and conditional logic."
    },
    "json_schema": {
      "title": "JSON Schema",
      "description": "JSON Schema definition (Draft 07 compatible) for validating structured data in JSON fields. Define the expected structure, types, required properties, constraints, and validation rules. Used to ensure JSON field data conforms to a specific schema. Supports all JSON Schema features: types, properties, required, patterns, enums, nested objects, arrays, and custom validation. Useful for API configurations, structured metadata, and flexible data models with enforced structure.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "description": "The data type(s) this schema validates. Can be a single type or array of types.",
          "anyOf": [
            {
              "type": "string",
              "enum": ["string", "number", "integer", "boolean", "object", "array", "null"],
              "x-business-rules": [
                "Restricted to 7 allowed values (string, number, integer, ...) to maintain type safety and enable clear validation error messages"
              ]
            },
            {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["string", "number", "integer", "boolean", "object", "array", "null"],
                "x-business-rules": [
                  "Restricted to 7 allowed values (string, number, integer, ...) to maintain type safety and enable clear validation error messages"
                ]
              },
              "x-business-rules": [
                "Array enables multiple 1 to be configured, supporting flexible workflows and batch operations"
              ]
            }
          ],
          "examples": ["string", "number", ["string", "null"], ["number", "integer"]],
          "x-user-stories": [
            "GIVEN user configures type WHEN validating input THEN value should meet schema requirements",
            "GIVEN type is set WHEN processing configuration THEN value should be used correctly"
          ]
        },
        "properties": {
          "title": "Properties",
          "description": "Object property definitions. Each key defines a property name with its schema.",
          "type": "object",
          "propertyNames": {
            "type": "string"
          },
          "additionalProperties": {
            "anyOf": [
              {
                "$ref": "#/definitions/json_schema"
              },
              {
                "type": "boolean",
                "x-business-rules": [
                  "Boolean flag enables/disables 1 functionality through simple true/false configuration"
                ]
              }
            ]
          },
          "examples": [
            {
              "name": {
                "type": "string"
              },
              "age": {
                "type": "integer"
              }
            }
          ],
          "x-business-rules": [
            "Object structure groups related properties properties for better organization and type-safe access"
          ],
          "x-user-stories": [
            "GIVEN user configures properties WHEN validating input THEN value should meet schema requirements",
            "GIVEN properties is set WHEN processing configuration THEN value should be used correctly"
          ]
        },
        "required": {
          "title": "Required Properties",
          "description": "Array of property names that must be present in the object",
          "type": "array",
          "items": {
            "type": "string"
          },
          "examples": [["name", "email"], ["id"]],
          "x-business-rules": [
            "Array enables multiple required properties to be configured, supporting flexible workflows and batch operations"
          ],
          "x-user-stories": [
            "GIVEN user provides required array WHEN validating input THEN items should be processed in order",
            "GIVEN required array is empty WHEN validating input THEN behavior should follow optional/required rules"
          ]
        },
        "items": {
          "title": "Array Items",
          "description": "Schema for array elements. Can be a single schema (all items) or array of schemas (tuple)",
          "anyOf": [
            {
              "anyOf": [
                {
                  "$ref": "#/definitions/json_schema"
                },
                {
                  "type": "boolean",
                  "x-business-rules": [
                    "Boolean flag enables/disables 1 functionality through simple true/false configuration"
                  ]
                }
              ]
            },
            {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/json_schema"
                  },
                  {
                    "type": "boolean",
                    "x-business-rules": [
                      "Boolean flag enables/disables 1 functionality through simple true/false configuration"
                    ]
                  }
                ]
              },
              "x-business-rules": [
                "Array enables multiple 1 to be configured, supporting flexible workflows and batch operations"
              ]
            }
          ],
          "examples": [
            {
              "type": "string"
            },
            [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          ],
          "x-user-stories": [
            "GIVEN user configures items WHEN validating input THEN value should meet schema requirements",
            "GIVEN items is set WHEN processing configuration THEN value should be used correctly"
          ]
        },
        "additionalProperties": {
          "title": "Additional Properties",
          "description": "Whether to allow properties not defined in 'properties'. Can be boolean or schema.",
          "anyOf": [
            {
              "anyOf": [
                {
                  "$ref": "#/definitions/json_schema"
                },
                {
                  "type": "boolean",
                  "x-business-rules": [
                    "Boolean flag enables/disables 1 functionality through simple true/false configuration"
                  ]
                }
              ]
            },
            {
              "type": "boolean",
              "x-business-rules": [
                "Boolean flag enables/disables 1 functionality through simple true/false configuration"
              ]
            }
          ],
          "examples": [
            false,
            true,
            {
              "type": "string"
            }
          ],
          "x-user-stories": [
            "GIVEN user configures additionalProperties WHEN validating input THEN value should meet schema requirements",
            "GIVEN additionalProperties is set WHEN processing configuration THEN value should be used correctly"
          ]
        },
        "enum": {
          "title": "Enum",
          "description": "Array of allowed values. Value must match one of these exactly.",
          "type": "array",
          "items": {},
          "examples": [
            ["active", "inactive", "pending"],
            [1, 2, 3],
            [true, false]
          ],
          "x-business-rules": [
            "Array enables multiple enum to be configured, supporting flexible workflows and batch operations"
          ],
          "x-user-stories": [
            "GIVEN user provides enum array WHEN validating input THEN items should be processed in order",
            "GIVEN enum array is empty WHEN validating input THEN behavior should follow optional/required rules"
          ]
        },
        "const": {
          "title": "Const",
          "description": "Single allowed value. Value must match this exactly.",
          "examples": ["active", 42, true, null],
          "x-user-stories": [
            "GIVEN user configures const WHEN validating input THEN value should meet schema requirements",
            "GIVEN const is set WHEN processing configuration THEN value should be used correctly"
          ]
        },
        "title": {
          "title": "Title",
          "description": "Human-readable title for this schema property",
          "type": "string",
          "examples": ["User Name", "Email Address", "Age"],
          "x-business-rules": ["Human-readable title for this schema property"],
          "x-user-stories": [
            "GIVEN user provides title WHEN validating input THEN string value should be accepted",
            "GIVEN title is empty string WHEN validating input THEN behavior should follow optional/required rules"
          ]
        },
        "description": {
          "title": "Description",
          "description": "Detailed description of this schema property",
          "type": "string",
          "examples": ["The user's full name", "Must be a valid email address"],
          "x-business-rules": ["Detailed description of this schema property"],
          "x-user-stories": [
            "GIVEN user provides description WHEN validating input THEN string value should be accepted",
            "GIVEN description is empty string WHEN validating input THEN behavior should follow optional/required rules"
          ]
        },
        "default": {
          "title": "Default",
          "description": "Default value when not provided",
          "examples": ["", 0, false, null, {}, []],
          "x-user-stories": [
            "GIVEN user configures default WHEN validating input THEN value should meet schema requirements",
            "GIVEN default is set WHEN processing configuration THEN value should be used correctly"
          ]
        },
        "minimum": {
          "title": "Minimum",
          "description": "Minimum numeric value (inclusive)",
          "type": "number",
          "examples": [0, 1, 18, -100],
          "x-business-rules": ["Minimum numeric value (inclusive)"],
          "x-user-stories": [
            "GIVEN user provides minimum WHEN validating input THEN numeric value should be accepted",
            "GIVEN user provides non-numeric minimum WHEN validating input THEN error should require number"
          ]
        },
        "maximum": {
          "title": "Maximum",
          "description": "Maximum numeric value (inclusive)",
          "type": "number",
          "examples": [100, 999, 150],
          "x-business-rules": ["Maximum numeric value (inclusive)"],
          "x-user-stories": [
            "GIVEN user provides maximum WHEN validating input THEN numeric value should be accepted",
            "GIVEN user provides non-numeric maximum WHEN validating input THEN error should require number"
          ]
        },
        "multipleOf": {
          "title": "Multiple Of",
          "description": "Number must be a multiple of this value",
          "type": "number",
          "examples": [1, 5, 0.01, 10],
          "x-business-rules": ["Number must be a multiple of this value"],
          "x-user-stories": [
            "GIVEN user provides multipleOf WHEN validating input THEN numeric value should be accepted",
            "GIVEN user provides non-numeric multipleOf WHEN validating input THEN error should require number"
          ]
        },
        "minLength": {
          "title": "Minimum Length",
          "description": "Minimum string length (characters)",
          "type": "number",
          "examples": [1, 3, 8],
          "x-business-rules": ["Minimum string length (characters)"],
          "x-user-stories": [
            "GIVEN user provides minLength WHEN validating input THEN numeric value should be accepted",
            "GIVEN user provides non-numeric minLength WHEN validating input THEN error should require number"
          ]
        },
        "maxLength": {
          "title": "Maximum Length",
          "description": "Maximum string length (characters)",
          "type": "number",
          "examples": [100, 255, 1000],
          "x-business-rules": ["Maximum string length (characters)"],
          "x-user-stories": [
            "GIVEN user provides maxLength WHEN validating input THEN numeric value should be accepted",
            "GIVEN user provides non-numeric maxLength WHEN validating input THEN error should require number"
          ]
        },
        "pattern": {
          "title": "Pattern",
          "description": "Regular expression pattern the string must match",
          "type": "string",
          "examples": ["^[a-z]+$", "^\\d{3}-\\d{4}$", "^[A-Z][a-z]+$"],
          "x-business-rules": ["Regular expression pattern the string must match"],
          "x-user-stories": [
            "GIVEN user provides pattern WHEN validating input THEN string value should be accepted",
            "GIVEN pattern is empty string WHEN validating input THEN behavior should follow optional/required rules"
          ]
        },
        "minItems": {
          "title": "Minimum Items",
          "description": "Minimum array length",
          "type": "number",
          "examples": [1, 2, 5],
          "x-user-stories": [
            "GIVEN user provides minItems WHEN validating input THEN numeric value should be accepted",
            "GIVEN user provides non-numeric minItems WHEN validating input THEN error should require number"
          ]
        },
        "maxItems": {
          "title": "Maximum Items",
          "description": "Maximum array length",
          "type": "number",
          "examples": [10, 100, 1000],
          "x-user-stories": [
            "GIVEN user provides maxItems WHEN validating input THEN numeric value should be accepted",
            "GIVEN user provides non-numeric maxItems WHEN validating input THEN error should require number"
          ]
        },
        "uniqueItems": {
          "title": "Unique Items",
          "description": "Whether array items must be unique",
          "type": "boolean",
          "examples": [true, false],
          "x-business-rules": [
            "Uniqueness constraint prevents conflicts and ensures each unique items can be unambiguously referenced"
          ],
          "x-user-stories": [
            "GIVEN uniqueItems is true WHEN processing entity THEN corresponding behavior should be enforced",
            "GIVEN uniqueItems is false (default: False) WHEN processing entity THEN corresponding behavior should not be enforced",
            "GIVEN configuration with uniqueItems WHEN validating settings THEN boolean value should be accepted"
          ]
        },
        "allOf": {
          "title": "All Of",
          "description": "Must validate against all of these schemas (AND logic)",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/json_schema"
              },
              {
                "type": "boolean",
                "x-business-rules": [
                  "Boolean flag enables/disables 1 functionality through simple true/false configuration"
                ]
              }
            ]
          },
          "examples": [
            [
              {
                "type": "object"
              },
              {
                "required": ["name"]
              }
            ]
          ],
          "x-business-rules": [
            "Array enables multiple all of to be configured, supporting flexible workflows and batch operations"
          ],
          "x-user-stories": [
            "GIVEN user provides allOf array WHEN validating input THEN items should be processed in order",
            "GIVEN allOf array is empty WHEN validating input THEN behavior should follow optional/required rules"
          ]
        },
        "anyOf": {
          "title": "Any Of",
          "description": "Must validate against at least one of these schemas (OR logic)",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/json_schema"
              },
              {
                "type": "boolean",
                "x-business-rules": [
                  "Boolean flag enables/disables 1 functionality through simple true/false configuration"
                ]
              }
            ]
          },
          "examples": [
            [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          ],
          "x-business-rules": [
            "Array enables multiple any of to be configured, supporting flexible workflows and batch operations"
          ],
          "x-user-stories": [
            "GIVEN user provides anyOf array WHEN validating input THEN items should be processed in order",
            "GIVEN anyOf array is empty WHEN validating input THEN behavior should follow optional/required rules"
          ]
        },
        "oneOf": {
          "title": "One Of",
          "description": "Must validate against exactly one of these schemas (XOR logic)",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/json_schema"
              },
              {
                "type": "boolean",
                "x-business-rules": [
                  "Boolean flag enables/disables 1 functionality through simple true/false configuration"
                ]
              }
            ]
          },
          "examples": [
            [
              {
                "type": "string",
                "minLength": 5
              },
              {
                "type": "number"
              }
            ]
          ],
          "x-business-rules": [
            "Array enables multiple one of to be configured, supporting flexible workflows and batch operations"
          ],
          "x-user-stories": [
            "GIVEN user provides oneOf array WHEN validating input THEN items should be processed in order",
            "GIVEN oneOf array is empty WHEN validating input THEN behavior should follow optional/required rules"
          ]
        },
        "not": {
          "title": "Not",
          "description": "Must NOT validate against this schema",
          "anyOf": [
            {
              "$ref": "#/definitions/json_schema"
            },
            {
              "type": "boolean",
              "x-business-rules": [
                "Boolean flag enables/disables 1 functionality through simple true/false configuration"
              ]
            }
          ],
          "examples": [
            {
              "type": "null"
            },
            {
              "enum": ["admin"]
            }
          ],
          "x-user-stories": [
            "GIVEN user configures not WHEN validating input THEN value should meet schema requirements",
            "GIVEN not is set WHEN processing configuration THEN value should be used correctly"
          ]
        }
      },
      "additionalProperties": false,
      "x-business-rules": [
        "Object structure groups related json schema properties for better organization and type-safe access"
      ]
    }
  }
}
