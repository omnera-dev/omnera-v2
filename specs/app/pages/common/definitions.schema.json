{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "definitions.schema.json",
  "title": "Common Definitions",
  "description": "Shared type definitions used across page schemas",
  "definitions": {
    "nonEmptyString": {
      "type": "string",
      "minLength": 1,
      "description": "A non-empty string value"
    },
    "kebabCase": {
      "type": "string",
      "pattern": "^[a-z][a-z0-9]*(-[a-z0-9]+)*$",
      "description": "Lowercase kebab-case identifier (e.g., 'my-component')"
    },
    "variableName": {
      "type": "string",
      "pattern": "^[a-zA-Z][a-zA-Z0-9]*$",
      "description": "Valid variable name (e.g., 'myVariable')"
    },
    "variableReference": {
      "type": "string",
      "pattern": ".*\\$[a-zA-Z][a-zA-Z0-9]*.*",
      "description": "String containing variable references (e.g., 'Text with $variable')"
    },
    "hexColor": {
      "type": "string",
      "pattern": "^#[0-9A-Fa-f]{6}$",
      "description": "6-digit hex color code (e.g., '#FF0000')"
    },
    "url": {
      "type": "string",
      "format": "uri",
      "pattern": "^https?://",
      "description": "Valid HTTP or HTTPS URL"
    },
    "relativePath": {
      "type": "string",
      "pattern": "^\\.{1,2}/",
      "description": "Relative file path (e.g., './public/logo.svg', '../images/hero.jpg')"
    },
    "emailAddress": {
      "type": "string",
      "format": "email",
      "description": "Valid email address"
    },
    "className": {
      "type": "string",
      "description": "Tailwind CSS class names"
    },
    "iconName": {
      "type": "string",
      "enum": [
        "arrow-right",
        "arrow-left",
        "arrow-up",
        "arrow-down",
        "check",
        "check-circle",
        "x",
        "x-circle",
        "plus",
        "minus",
        "search",
        "filter",
        "menu",
        "settings",
        "user",
        "users",
        "heart",
        "star",
        "bookmark",
        "share",
        "clock",
        "calendar",
        "map-pin",
        "globe",
        "mail",
        "phone",
        "message",
        "chat",
        "home",
        "building",
        "briefcase",
        "shopping-cart",
        "download",
        "upload",
        "file",
        "folder",
        "lock",
        "unlock",
        "shield",
        "key",
        "eye",
        "eye-off",
        "edit",
        "trash",
        "play",
        "pause",
        "stop",
        "skip",
        "volume",
        "mic",
        "camera",
        "image",
        "sun",
        "moon",
        "cloud",
        "lightning",
        "gift",
        "trophy",
        "flag",
        "bell",
        "help-circle",
        "info",
        "alert-circle",
        "alert-triangle",
        "chevron-right",
        "chevron-left",
        "chevron-up",
        "chevron-down",
        "external-link",
        "link",
        "code",
        "terminal",
        "graduation-cap",
        "book",
        "lightbulb",
        "target",
        "hand",
        "vote",
        "gem",
        "sprout"
      ],
      "description": "Icon name from the icon library"
    },
    "dimensions": {
      "type": "object",
      "properties": {
        "width": {
          "type": "integer",
          "minimum": 1,
          "description": "Width in pixels"
        },
        "height": {
          "type": "integer",
          "minimum": 1,
          "description": "Height in pixels"
        }
      },
      "required": ["width", "height"]
    }
  },
  "specs": [
    {
      "id": "APP-PAGES-DEFINITIONS-001",
      "given": "a non-empty string",
      "when": "value is 'hello'",
      "then": "it should validate as nonEmptyString"
    },
    {
      "id": "APP-PAGES-DEFINITIONS-002",
      "given": "a kebab-case string",
      "when": "value is 'my-component-name'",
      "then": "it should validate as kebabCase pattern"
    },
    {
      "id": "APP-PAGES-DEFINITIONS-003",
      "given": "a variable name",
      "when": "value is 'myVariable123'",
      "then": "it should validate as variableName pattern"
    },
    {
      "id": "APP-PAGES-DEFINITIONS-004",
      "given": "a string with variable reference",
      "when": "value is 'Welcome to $siteName'",
      "then": "it should validate as variableReference pattern"
    },
    {
      "id": "APP-PAGES-DEFINITIONS-005",
      "given": "a 6-digit hex color",
      "when": "value is '#FF5733'",
      "then": "it should validate as hexColor pattern"
    },
    {
      "id": "APP-PAGES-DEFINITIONS-006",
      "given": "an HTTP URL",
      "when": "value is 'https://example.com/path'",
      "then": "it should validate as url with http/https protocol"
    },
    {
      "id": "APP-PAGES-DEFINITIONS-007",
      "given": "a relative path",
      "when": "value is './public/logo.svg'",
      "then": "it should validate as relativePath pattern"
    },
    {
      "id": "APP-PAGES-DEFINITIONS-008",
      "given": "an email address",
      "when": "value is 'user@example.com'",
      "then": "it should validate as emailAddress format"
    },
    {
      "id": "APP-PAGES-DEFINITIONS-009",
      "given": "Tailwind CSS classes",
      "when": "value is 'text-center bg-blue-500 p-4'",
      "then": "it should validate as className"
    },
    {
      "id": "APP-PAGES-DEFINITIONS-010",
      "given": "an icon from the icon library",
      "when": "value is 'arrow-right'",
      "then": "it should validate as iconName enum"
    },
    {
      "id": "APP-PAGES-DEFINITIONS-011",
      "given": "dimensions with width and height",
      "when": "value is { width: 800, height: 600 }",
      "then": "it should validate as dimensions object"
    },
    {
      "id": "APP-PAGES-DEFINITIONS-012",
      "given": "multiple icon names in the library",
      "when": "70+ icon names are defined (arrow-right, check, user, star, etc.)",
      "then": "it should provide comprehensive icon set for all UI needs"
    }
  ]
}
