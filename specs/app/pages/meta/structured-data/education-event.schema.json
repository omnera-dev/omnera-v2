{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "education-event.schema.json",
  "title": "Education Event Schema",
  "description": "Schema.org EducationEvent structured data",
  "type": "object",
  "properties": {
    "@type": {
      "type": "string",
      "const": "EducationEvent",
      "description": "Schema.org type"
    },
    "name": {
      "type": "string",
      "description": "Event name"
    },
    "description": {
      "type": "string",
      "description": "Event description"
    },
    "startDate": {
      "type": "string",
      "format": "date-time",
      "description": "Event start date/time (ISO 8601)"
    },
    "endDate": {
      "type": "string",
      "format": "date-time",
      "description": "Event end date/time (ISO 8601)"
    },
    "eventAttendanceMode": {
      "type": "string",
      "enum": [
        "https://schema.org/OfflineEventAttendanceMode",
        "https://schema.org/OnlineEventAttendanceMode",
        "https://schema.org/MixedEventAttendanceMode"
      ],
      "description": "Attendance mode"
    },
    "eventStatus": {
      "type": "string",
      "enum": [
        "https://schema.org/EventScheduled",
        "https://schema.org/EventCancelled",
        "https://schema.org/EventPostponed",
        "https://schema.org/EventRescheduled"
      ],
      "description": "Event status"
    },
    "location": {
      "type": "object",
      "properties": {
        "@type": {
          "const": "Place"
        },
        "name": {
          "type": "string"
        },
        "address": {
          "$ref": "./postal-address.schema.json"
        }
      }
    },
    "organizer": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "enum": ["Organization", "Person"]
        },
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string",
          "format": "uri"
        }
      }
    },
    "offers": {
      "type": "object",
      "properties": {
        "@type": {
          "const": "Offer"
        },
        "price": {
          "type": ["string", "number"]
        },
        "priceCurrency": {
          "type": "string",
          "pattern": "^[A-Z]{3}$"
        },
        "availability": {
          "type": "string",
          "enum": [
            "https://schema.org/InStock",
            "https://schema.org/OutOfStock",
            "https://schema.org/PreOrder",
            "https://schema.org/SoldOut"
          ]
        },
        "url": {
          "type": "string",
          "format": "uri"
        }
      }
    },
    "maximumAttendeeCapacity": {
      "type": "integer",
      "minimum": 1
    },
    "minimumAttendeeCapacity": {
      "type": "integer",
      "minimum": 1
    }
  },
  "required": ["@type", "name", "startDate"],
  "additionalProperties": false,
  "x-specs": [
    {
      "id": "APP-PAGES-EDUCATIONEVENT-001",
      "given": "EducationEvent with required properties",
      "when": "@type is 'EducationEvent', name and startDate are provided",
      "then": "it should validate minimal EducationEvent structured data"
    },
    {
      "id": "APP-PAGES-EDUCATIONEVENT-002",
      "given": "EducationEvent with name and description",
      "when": "name and description describe the educational event",
      "then": "it should provide event identity"
    },
    {
      "id": "APP-PAGES-EDUCATIONEVENT-003",
      "given": "EducationEvent with startDate",
      "when": "startDate is ISO 8601 date-time",
      "then": "it should specify when event begins"
    },
    {
      "id": "APP-PAGES-EDUCATIONEVENT-004",
      "given": "EducationEvent with endDate",
      "when": "endDate is ISO 8601 date-time",
      "then": "it should specify when event ends"
    },
    {
      "id": "APP-PAGES-EDUCATIONEVENT-005",
      "given": "EducationEvent with eventAttendanceMode",
      "when": "eventAttendanceMode is OfflineEventAttendanceMode, OnlineEventAttendanceMode, or MixedEventAttendanceMode",
      "then": "it should specify whether event is in-person, online, or hybrid"
    },
    {
      "id": "APP-PAGES-EDUCATIONEVENT-006",
      "given": "EducationEvent with eventStatus",
      "when": "eventStatus is EventScheduled, EventCancelled, EventPostponed, or EventRescheduled",
      "then": "it should communicate event status"
    },
    {
      "id": "APP-PAGES-EDUCATIONEVENT-007",
      "given": "EducationEvent with location",
      "when": "location is object with @type 'Place', name, and address",
      "then": "it should provide event venue information"
    },
    {
      "id": "APP-PAGES-EDUCATIONEVENT-008",
      "given": "EducationEvent with organizer",
      "when": "organizer is object with @type 'Organization' or 'Person', name, and url",
      "then": "it should identify event organizer"
    },
    {
      "id": "APP-PAGES-EDUCATIONEVENT-009",
      "given": "EducationEvent with offers",
      "when": "offers has @type 'Offer', price, priceCurrency, availability, url",
      "then": "it should provide ticket pricing and availability"
    },
    {
      "id": "APP-PAGES-EDUCATIONEVENT-010",
      "given": "EducationEvent with price and priceCurrency",
      "when": "price is '0' or '29.99' and priceCurrency is 'EUR' (ISO 4217)",
      "then": "it should specify event ticket price"
    },
    {
      "id": "APP-PAGES-EDUCATIONEVENT-011",
      "given": "EducationEvent with availability enum",
      "when": "availability is InStock, OutOfStock, PreOrder, or SoldOut",
      "then": "it should indicate ticket availability status"
    },
    {
      "id": "APP-PAGES-EDUCATIONEVENT-012",
      "given": "EducationEvent with capacity",
      "when": "maximumAttendeeCapacity and minimumAttendeeCapacity are integers",
      "then": "it should specify event capacity limits"
    },
    {
      "id": "APP-PAGES-EDUCATIONEVENT-013",
      "given": "EducationEvent for rich results",
      "when": "complete event data with dates, location, and offers is provided",
      "then": "it should enable Google Events rich results"
    },
    {
      "id": "APP-PAGES-EDUCATIONEVENT-014",
      "given": "EducationEvent for event discovery",
      "when": "EducationEvent structured data is included in page metadata",
      "then": "it should display event in Google Search, Maps, and event discovery features"
    }
  ]
}
