{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "organization.schema.json",
  "title": "Organization Schema",
  "description": "Schema.org Organization structured data",
  "type": "object",
  "properties": {
    "@context": {
      "type": "string",
      "const": "https://schema.org",
      "description": "Schema.org context"
    },
    "@type": {
      "type": "string",
      "const": "Organization",
      "description": "Schema.org type"
    },
    "name": {
      "type": "string",
      "description": "Organization name"
    },
    "description": {
      "type": "string",
      "description": "Organization description"
    },
    "url": {
      "type": "string",
      "format": "uri",
      "description": "Organization website URL"
    },
    "logo": {
      "type": "string",
      "format": "uri",
      "description": "Organization logo URL"
    },
    "image": {
      "oneOf": [
        { "type": "string", "format": "uri" },
        { "type": "array", "items": { "type": "string", "format": "uri" } }
      ],
      "description": "Organization image(s)"
    },
    "email": {
      "type": "string",
      "format": "email",
      "description": "Contact email"
    },
    "telephone": {
      "type": "string",
      "description": "Contact phone number"
    },
    "address": {
      "$ref": "./postal-address.schema.json"
    },
    "sameAs": {
      "type": "array",
      "items": {
        "type": "string",
        "format": "uri"
      },
      "description": "Social media profile URLs",
      "examples": [["https://facebook.com/myorg", "https://twitter.com/myorg"]]
    },
    "founder": {
      "type": "string",
      "description": "Organization founder name"
    },
    "foundingDate": {
      "type": "string",
      "format": "date",
      "description": "Date organization was founded"
    },
    "employees": {
      "type": "integer",
      "minimum": 1,
      "description": "Number of employees"
    },
    "event": {
      "$ref": "./education-event.schema.json"
    }
  },
  "required": ["@context", "@type", "name"],
  "additionalProperties": false,
  "specs": [
    {
      "id": "APP-PAGES-ORGANIZATION-001",
      "given": "Organization with required properties",
      "when": "@context is 'https://schema.org', @type is 'Organization', and name is provided",
      "then": "it should validate minimal Organization structured data"
    },
    {
      "id": "APP-PAGES-ORGANIZATION-002",
      "given": "Organization with @context",
      "when": "@context is 'https://schema.org' (const)",
      "then": "it should specify Schema.org vocabulary"
    },
    {
      "id": "APP-PAGES-ORGANIZATION-003",
      "given": "Organization with @type",
      "when": "@type is 'Organization' (const)",
      "then": "it should identify entity as Organization"
    },
    {
      "id": "APP-PAGES-ORGANIZATION-004",
      "given": "Organization with name",
      "when": "name is 'My Company'",
      "then": "it should provide organization name"
    },
    {
      "id": "APP-PAGES-ORGANIZATION-005",
      "given": "Organization with url",
      "when": "url is 'https://example.com'",
      "then": "it should provide organization website URL"
    },
    {
      "id": "APP-PAGES-ORGANIZATION-006",
      "given": "Organization with logo",
      "when": "logo is URL to organization logo",
      "then": "it should provide logo for search results"
    },
    {
      "id": "APP-PAGES-ORGANIZATION-007",
      "given": "Organization with image",
      "when": "image is string URL or array of URLs",
      "then": "it should support single or multiple organization images"
    },
    {
      "id": "APP-PAGES-ORGANIZATION-008",
      "given": "Organization with contact info",
      "when": "email and telephone are provided",
      "then": "it should provide contact information"
    },
    {
      "id": "APP-PAGES-ORGANIZATION-009",
      "given": "Organization with address",
      "when": "address references postal-address.schema.json",
      "then": "it should include PostalAddress structured data"
    },
    {
      "id": "APP-PAGES-ORGANIZATION-010",
      "given": "Organization with social profiles",
      "when": "sameAs is array of social media URLs (Facebook, Twitter, LinkedIn)",
      "then": "it should link organization to social profiles"
    },
    {
      "id": "APP-PAGES-ORGANIZATION-011",
      "given": "Organization with founder info",
      "when": "founder name and foundingDate are provided",
      "then": "it should provide organization history"
    },
    {
      "id": "APP-PAGES-ORGANIZATION-012",
      "given": "Organization with employees count",
      "when": "employees is integer minimum 1",
      "then": "it should indicate organization size"
    },
    {
      "id": "APP-PAGES-ORGANIZATION-013",
      "given": "Organization with event",
      "when": "event references education-event.schema.json",
      "then": "it should link organization to hosted events"
    },
    {
      "id": "APP-PAGES-ORGANIZATION-014",
      "given": "Organization for knowledge graph",
      "when": "complete organization data is provided",
      "then": "it should enable Google Knowledge Graph panel in search results"
    }
  ]
}
