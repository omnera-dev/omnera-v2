{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "meta.schema.json",
  "title": "Page Metadata",
  "description": "Comprehensive page metadata including SEO, social media, structured data, performance, and analytics",
  "type": "object",
  "properties": {
    "lang": {
      "type": "string",
      "pattern": "^[a-z]{2}(-[A-Z]{2})?$",
      "default": "en-US",
      "description": "Page language code (ISO 639-1 with optional country)",
      "examples": ["en-US", "fr-FR", "es-ES", "de-DE"]
    },
    "title": {
      "type": "string",
      "maxLength": 60,
      "description": "Page title for browser tab and SEO (max 60 characters for optimal display)"
    },
    "description": {
      "type": "string",
      "maxLength": 160,
      "description": "Page description for SEO and social sharing (max 160 characters)"
    },
    "keywords": {
      "type": "string",
      "description": "Comma-separated keywords for SEO"
    },
    "author": {
      "type": "string",
      "description": "Page author or organization name"
    },
    "canonical": {
      "type": "string",
      "format": "uri",
      "description": "Canonical URL to prevent duplicate content issues"
    },
    "favicon": {
      "$ref": "./favicons/favicon.schema.json"
    },
    "favicons": {
      "$ref": "./favicons/favicon-set.schema.json"
    },
    "stylesheet": {
      "type": "string",
      "description": "Path to the main stylesheet"
    },
    "googleFonts": {
      "type": "string",
      "format": "uri",
      "description": "Google Fonts URL"
    },
    "socialImage": {
      "type": "string",
      "format": "uri",
      "description": "Default image for social media sharing"
    },
    "openGraph": {
      "$ref": "./social/open-graph.schema.json"
    },
    "twitter": {
      "$ref": "./social/twitter-card.schema.json"
    },
    "schema": {
      "$ref": "./structured-data/structured-data.schema.json"
    },
    "preload": {
      "$ref": "./performance/preload.schema.json"
    },
    "dnsPrefetch": {
      "$ref": "./performance/dns-prefetch.schema.json"
    },
    "analytics": {
      "$ref": "./analytics/analytics.schema.json"
    },
    "customElements": {
      "$ref": "./custom-elements/custom-elements.schema.json"
    }
  },
  "required": ["lang", "title", "description"],
  "additionalProperties": false,
  "specs": [
    {
      "id": "APP-PAGES-META-001",
      "given": "page metadata with required properties",
      "when": "lang is 'en-US', title is 'My Page', description is 'Page description'",
      "then": "it should validate minimal metadata configuration",
      "x-validation": {
        "setup": {
          "meta": {
            "lang": "en-US",
            "title": "My Page",
            "description": "Page description"
          }
        },
        "assertions": [
          "Required properties: lang, title, description",
          "Minimal valid metadata",
          "lang: ISO 639-1 language code",
          "title: browser tab and SEO",
          "description: SEO and social sharing"
        ]
      },
      "x-application": {
        "meta": {
          "lang": "en-US",
          "title": "My Page",
          "description": "Page description"
        },
        "expectedDOM": "<html lang=\"en-US\" data-testid=\"html-root\"><head><title>My Page</title><meta name=\"description\" content=\"Page description\" /></head></html>",
        "assertions": [
          "html lang='en-US' sets document language",
          "<title>My Page</title> in browser tab",
          "<meta name='description'> for search engines",
          "Minimal SEO requirements met"
        ]
      }
    },
    {
      "id": "APP-PAGES-META-002",
      "given": "page metadata with title maxLength",
      "when": "title has 60 characters max for optimal SEO display",
      "then": "it should enforce title length constraint",
      "x-validation": {
        "setup": {
          "valid": {
            "title": "Short Page Title for SEO - Fits in Search Results"
          },
          "invalid": {
            "title": "This is an extremely long page title that exceeds the recommended sixty character limit for optimal SEO display in search engine results"
          }
        },
        "assertions": [
          "maxLength: 60 characters",
          "Valid: 50 characters (fits in SERP)",
          "Invalid: 131 characters (truncated in SERP)",
          "Optimal title length for Google search results"
        ]
      },
      "x-application": {
        "meta": {
          "title": "Short Page Title for SEO - Fits in Search Results"
        },
        "googleSERP": {
          "displayed": "Short Page Title for SEO - Fits in Search Results",
          "truncated": false
        },
        "assertions": [
          "Title length: 50 characters (within 60 limit)",
          "Google displays full title (no truncation)",
          "Optimal user experience in search results",
          "Best practice: 50-60 characters"
        ]
      }
    },
    {
      "id": "APP-PAGES-META-003",
      "given": "page metadata with description maxLength",
      "when": "description has 160 characters max for SEO snippets",
      "then": "it should enforce description length constraint",
      "x-validation": {
        "setup": {
          "valid": {
            "description": "This is a compelling page description that fits within the 160 character limit recommended for optimal display in search engine result snippets."
          },
          "invalid": {
            "description": "This is an overly verbose page description that significantly exceeds the recommended one hundred sixty character limit, resulting in truncation in search engine result pages and a poor user experience for searchers trying to understand the page content before clicking through to the website."
          }
        },
        "assertions": [
          "maxLength: 160 characters",
          "Valid: 151 characters (fits in SERP snippet)",
          "Invalid: 286 characters (truncated with '...')",
          "Optimal description for Google snippets"
        ]
      },
      "x-application": {
        "meta": {
          "description": "This is a compelling page description that fits within the 160 character limit recommended for optimal display in search engine result snippets."
        },
        "googleSERP": {
          "displayed": "This is a compelling page description that fits within the 160 character limit recommended for optimal display in search engine result snippets.",
          "truncated": false
        },
        "assertions": [
          "Description length: 151 characters (within 160 limit)",
          "Google displays full description (no '...' truncation)",
          "Optimal snippet in search results",
          "Best practice: 150-160 characters"
        ]
      }
    },
    {
      "id": "APP-PAGES-META-004",
      "given": "page metadata with keywords",
      "when": "keywords is comma-separated list for SEO",
      "then": "it should accept keyword string",
      "x-validation": {
        "setup": {
          "meta": {
            "keywords": "web development, react, typescript, seo optimization, page builder"
          }
        },
        "assertions": [
          "Comma-separated keyword list",
          "5 keywords for page topic",
          "Used by some search engines (limited impact)",
          "Helps categorize content"
        ]
      },
      "x-application": {
        "meta": {
          "keywords": "web development, react, typescript, seo optimization, page builder"
        },
        "expectedDOM": "<meta name=\"keywords\" content=\"web development, react, typescript, seo optimization, page builder\" />",
        "assertions": [
          "<meta name='keywords'> in <head>",
          "5 relevant keywords for page",
          "Limited SEO impact (most engines ignore)",
          "Still useful for internal search/categorization"
        ]
      }
    },
    {
      "id": "APP-PAGES-META-005",
      "given": "page metadata with canonical URL",
      "when": "canonical prevents duplicate content issues",
      "then": "it should define canonical URL",
      "x-validation": {
        "setup": {
          "meta": {
            "canonical": "https://example.com/products/widget"
          },
          "pages": [
            "https://example.com/products/widget",
            "https://example.com/products/widget?utm_source=email",
            "https://example.com/products/widget?ref=twitter"
          ]
        },
        "assertions": [
          "Canonical URL: single source of truth",
          "Prevents duplicate content penalties",
          "Multiple URLs point to same canonical",
          "Essential for SEO with query parameters"
        ]
      },
      "x-application": {
        "meta": {
          "canonical": "https://example.com/products/widget"
        },
        "urls": {
          "original": "https://example.com/products/widget?utm_source=email",
          "canonical": "https://example.com/products/widget"
        },
        "expectedDOM": "<link rel=\"canonical\" href=\"https://example.com/products/widget\" />",
        "assertions": [
          "User visits: https://example.com/products/widget?utm_source=email",
          "Canonical tag: <link rel='canonical' href='https://example.com/products/widget' />",
          "Search engines index canonical URL (without query params)",
          "Avoids duplicate content issues from tracking parameters"
        ]
      }
    },
    {
      "id": "APP-PAGES-META-006",
      "given": "page metadata with favicon and favicons",
      "when": "favicon is simple icon, favicons is complete set",
      "then": "it should support both single and multi-favicon configurations",
      "x-validation": {
        "setup": {
          "simple": {
            "favicon": "/favicon.ico"
          },
          "complete": {
            "favicons": {
              "icon": "/icon.svg",
              "appleTouchIcon": "/apple-touch-icon.png",
              "sizes": [
                {
                  "size": "32x32",
                  "href": "/favicon-32x32.png"
                },
                {
                  "size": "16x16",
                  "href": "/favicon-16x16.png"
                }
              ]
            }
          }
        },
        "assertions": [
          "favicon: simple single .ico file",
          "favicons: complete set (SVG, PNG, Apple)",
          "Both options supported",
          "favicons provides better multi-device support"
        ]
      },
      "x-application": {
        "meta": {
          "favicons": {
            "icon": "/icon.svg",
            "appleTouchIcon": "/apple-touch-icon.png",
            "sizes": [
              {
                "size": "32x32",
                "href": "/favicon-32x32.png"
              }
            ]
          }
        },
        "expectedDOM": "<link rel=\"icon\" type=\"image/svg+xml\" href=\"/icon.svg\" /><link rel=\"apple-touch-icon\" href=\"/apple-touch-icon.png\" /><link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/favicon-32x32.png\" />",
        "assertions": [
          "SVG icon: modern browsers (vector, scalable)",
          "Apple Touch Icon: iOS home screen",
          "PNG 32x32: fallback for older browsers",
          "Multi-device favicon support"
        ]
      }
    },
    {
      "id": "APP-PAGES-META-007",
      "given": "page metadata with stylesheet and googleFonts",
      "when": "stylesheet and font URLs are provided",
      "then": "it should include CSS and font resources",
      "x-validation": {
        "setup": {
          "meta": {
            "stylesheet": "/styles/main.css",
            "googleFonts": "https://fonts.googleapis.com/css2?family=Inter:wght@400;700&display=swap"
          }
        },
        "assertions": [
          "stylesheet: path to main CSS file",
          "googleFonts: Google Fonts API URL",
          "Both resources loaded in <head>",
          "Fonts with display=swap for performance"
        ]
      },
      "x-application": {
        "meta": {
          "stylesheet": "/styles/main.css",
          "googleFonts": "https://fonts.googleapis.com/css2?family=Inter:wght@400;700&display=swap"
        },
        "expectedDOM": "<link rel=\"stylesheet\" href=\"/styles/main.css\" /><link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" /><link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin /><link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;700&display=swap\" />",
        "assertions": [
          "Main stylesheet: /styles/main.css",
          "Google Fonts: Inter (400, 700 weights)",
          "Preconnect to fonts.googleapis.com (performance)",
          "display=swap prevents FOIT (Flash of Invisible Text)"
        ]
      }
    },
    {
      "id": "APP-PAGES-META-008",
      "given": "page metadata with social media integration",
      "when": "openGraph and twitter properties are configured",
      "then": "it should enable rich social sharing",
      "x-validation": {
        "setup": {
          "meta": {
            "openGraph": {
              "title": "Amazing Product Launch",
              "description": "Revolutionary new product",
              "image": "https://example.com/og-image.jpg",
              "url": "https://example.com/products/new"
            },
            "twitter": {
              "card": "summary_large_image",
              "title": "Amazing Product Launch",
              "description": "Revolutionary new product",
              "image": "https://example.com/twitter-image.jpg"
            }
          }
        },
        "assertions": [
          "openGraph: Facebook, LinkedIn sharing",
          "twitter: Twitter/X card format",
          "Rich preview with image + title + description",
          "Essential for social media marketing"
        ]
      },
      "x-application": {
        "meta": {
          "openGraph": {
            "title": "Amazing Product Launch",
            "description": "Revolutionary new product",
            "image": "https://example.com/og-image.jpg",
            "url": "https://example.com/products/new"
          },
          "twitter": {
            "card": "summary_large_image",
            "title": "Amazing Product Launch",
            "description": "Revolutionary new product",
            "image": "https://example.com/twitter-image.jpg"
          }
        },
        "socialSharing": {
          "facebook": "Rich preview: large image + title + description",
          "twitter": "Large image card with title + description",
          "linkedin": "Professional preview with Open Graph data"
        },
        "assertions": [
          "User shares URL on Facebook/Twitter",
          "Rich card displays: image, title, description",
          "openGraph for Facebook/LinkedIn",
          "Twitter Card for Twitter/X",
          "Higher engagement from visual previews"
        ]
      }
    },
    {
      "id": "APP-PAGES-META-009",
      "given": "page metadata with structured data",
      "when": "schema property contains Schema.org markup",
      "then": "it should provide search engine understanding",
      "x-validation": {
        "setup": {
          "meta": {
            "schema": {
              "@context": "https://schema.org",
              "@type": "Organization",
              "name": "Acme Inc",
              "url": "https://example.com",
              "logo": "https://example.com/logo.png"
            }
          }
        },
        "assertions": [
          "Schema.org structured data",
          "JSON-LD format in <script> tag",
          "Helps search engines understand content",
          "Rich results in Google (logo, name, etc.)"
        ]
      },
      "x-application": {
        "meta": {
          "schema": {
            "@context": "https://schema.org",
            "@type": "Organization",
            "name": "Acme Inc",
            "url": "https://example.com",
            "logo": "https://example.com/logo.png"
          }
        },
        "expectedDOM": "<script type=\"application/ld+json\">{\"@context\":\"https://schema.org\",\"@type\":\"Organization\",\"name\":\"Acme Inc\",\"url\":\"https://example.com\",\"logo\":\"https://example.com/logo.png\"}</script>",
        "googleResult": {
          "knowledgePanel": "Acme Inc with logo",
          "richSnippet": "Organization details in search"
        },
        "assertions": [
          "Structured data in JSON-LD format",
          "Google understands: Organization with name + logo",
          "May appear in Knowledge Panel",
          "Better search result presentation"
        ]
      }
    },
    {
      "id": "APP-PAGES-META-010",
      "given": "page metadata with performance optimizations",
      "when": "preload and dnsPrefetch are configured",
      "then": "it should optimize page load performance",
      "x-validation": {
        "setup": {
          "meta": {
            "preload": [
              {
                "href": "/fonts/Inter-Regular.woff2",
                "as": "font",
                "type": "font/woff2",
                "crossorigin": true
              }
            ],
            "dnsPrefetch": ["https://fonts.googleapis.com", "https://analytics.google.com"]
          }
        },
        "assertions": [
          "preload: critical resources loaded early",
          "dnsPrefetch: DNS resolution before requests",
          "Reduces page load time",
          "Critical for web performance"
        ]
      },
      "x-application": {
        "meta": {
          "preload": [
            {
              "href": "/fonts/Inter-Regular.woff2",
              "as": "font",
              "type": "font/woff2",
              "crossorigin": true
            }
          ],
          "dnsPrefetch": ["https://fonts.googleapis.com", "https://analytics.google.com"]
        },
        "expectedDOM": "<link rel=\"preload\" href=\"/fonts/Inter-Regular.woff2\" as=\"font\" type=\"font/woff2\" crossorigin /><link rel=\"dns-prefetch\" href=\"https://fonts.googleapis.com\" /><link rel=\"dns-prefetch\" href=\"https://analytics.google.com\" />",
        "performance": {
          "preload": "Font loaded before CSS parsed (faster text render)",
          "dnsPrefetch": "DNS resolved for fonts.googleapis.com and analytics.google.com early"
        },
        "assertions": [
          "Preload: Inter font loaded immediately (no FOIT)",
          "DNS Prefetch: fonts.googleapis.com and analytics.google.com resolved early",
          "Faster page load (reduced blocking time)",
          "Better Core Web Vitals (LCP, CLS)"
        ]
      }
    },
    {
      "id": "APP-PAGES-META-011",
      "given": "page metadata with analytics",
      "when": "analytics property configures tracking providers",
      "then": "it should enable visitor analytics",
      "x-validation": {
        "setup": {
          "meta": {
            "analytics": {
              "googleAnalytics": "G-XXXXXXXXXX",
              "googleTagManager": "GTM-XXXXXXX",
              "facebookPixel": "123456789012345"
            }
          }
        },
        "assertions": [
          "Multiple analytics providers supported",
          "Google Analytics: GA4 measurement ID",
          "Google Tag Manager: container ID",
          "Facebook Pixel: pixel ID",
          "Visitor tracking and conversion measurement"
        ]
      },
      "x-application": {
        "meta": {
          "analytics": {
            "googleAnalytics": "G-XXXXXXXXXX",
            "googleTagManager": "GTM-XXXXXXX"
          }
        },
        "expectedDOM": "<script async src=\"https://www.googletagmanager.com/gtag/js?id=G-XXXXXXXXXX\"></script><script>window.dataLayer=window.dataLayer||[];function gtag(){dataLayer.push(arguments);}gtag('js',new Date());gtag('config','G-XXXXXXXXXX');</script><script async src=\"https://www.googletagmanager.com/gtm.js?id=GTM-XXXXXXX\"></script>",
        "tracking": {
          "googleAnalytics": "Page views, events, conversions tracked",
          "googleTagManager": "Tags fired based on triggers"
        },
        "assertions": [
          "Google Analytics: tracks page views, events",
          "Google Tag Manager: manages all tags centrally",
          "User behavior data sent to analytics platforms",
          "Enables data-driven decision making"
        ]
      }
    },
    {
      "id": "APP-PAGES-META-012",
      "given": "page metadata orchestrating all sub-schemas",
      "when": "metadata includes SEO, social, structured data, performance, analytics",
      "then": "it should provide comprehensive page metadata management",
      "x-validation": {
        "setup": {
          "meta": {
            "lang": "en-US",
            "title": "Complete Page Metadata Example",
            "description": "Comprehensive metadata with SEO, social, structured data, performance, and analytics.",
            "keywords": "metadata, seo, social media, structured data",
            "canonical": "https://example.com/complete",
            "favicons": {
              "icon": "/icon.svg"
            },
            "openGraph": {
              "title": "Complete Page Metadata Example"
            },
            "twitter": {
              "card": "summary"
            },
            "schema": {
              "@type": "WebPage"
            },
            "preload": [],
            "dnsPrefetch": ["https://fonts.googleapis.com"],
            "analytics": {
              "googleAnalytics": "G-XXXXXXXXXX"
            }
          }
        },
        "assertions": [
          "All metadata categories included",
          "SEO: title, description, keywords, canonical",
          "Social: openGraph, twitter",
          "Structured data: schema",
          "Performance: preload, dnsPrefetch",
          "Analytics: tracking providers",
          "Comprehensive metadata orchestration"
        ]
      },
      "x-application": {
        "meta": {
          "lang": "en-US",
          "title": "Complete Page Metadata Example",
          "description": "Comprehensive metadata with SEO, social, structured data, performance, and analytics.",
          "keywords": "metadata, seo, social media, structured data",
          "canonical": "https://example.com/complete",
          "favicons": {
            "icon": "/icon.svg"
          },
          "openGraph": {
            "title": "Complete Page Metadata Example",
            "description": "Comprehensive metadata with SEO, social, structured data, performance, and analytics."
          },
          "twitter": {
            "card": "summary",
            "title": "Complete Page Metadata Example"
          },
          "schema": {
            "@context": "https://schema.org",
            "@type": "WebPage",
            "name": "Complete Page Metadata Example"
          },
          "dnsPrefetch": ["https://fonts.googleapis.com"],
          "analytics": {
            "googleAnalytics": "G-XXXXXXXXXX"
          }
        },
        "benefits": {
          "seo": "Optimal search engine ranking",
          "social": "Rich sharing on Facebook, Twitter, LinkedIn",
          "structuredData": "Enhanced Google search results",
          "performance": "Fast page load with preload/prefetch",
          "analytics": "Data-driven insights"
        },
        "assertions": [
          "SEO: Title in SERP, description in snippet, canonical URL",
          "Social: Rich previews on all platforms",
          "Structured Data: Schema.org JSON-LD for Google",
          "Performance: DNS prefetch for external domains",
          "Analytics: Google Analytics tracking",
          "All metadata categories work together for optimal web presence"
        ]
      }
    }
  ]
}
