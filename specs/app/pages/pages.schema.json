{
  "$id": "pages.schema.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Pages",
  "description": "Marketing and content pages with server-side rendering support. Pages use a block-based layout system with reusable components for building landing pages, about pages, pricing pages, and other public-facing content. Supports comprehensive metadata, theming, and structured data for SEO optimization.",
  "type": "array",
  "minItems": 1,
  "default": [],
  "blocks": {
    "hero": {
      "type": "object",
      "properties": {
        "type": {
          "const": "section"
        },
        "props": {
          "type": "object",
          "properties": {
            "id": {
              "const": "hero"
            },
            "className": {
              "type": "string"
            }
          }
        },
        "children": {
          "type": "array"
        }
      }
    },
    "cta": {
      "type": "object",
      "properties": {
        "type": {
          "const": "section"
        },
        "children": {
          "type": "array"
        }
      }
    },
    "features": {
      "type": "object",
      "properties": {
        "type": {
          "const": "section"
        },
        "children": {
          "type": "array"
        }
      }
    }
  },
  "items": {
    "title": "Page",
    "description": "A complete page configuration with metadata, theme, blocks, layout, and content sections",
    "type": "object",
    "properties": {
      "id": {
        "$ref": "./id/id.schema.json"
      },
      "name": {
        "$ref": "./name/name.schema.json"
      },
      "path": {
        "$ref": "./path/path.schema.json"
      },
      "meta": {
        "$ref": "./meta/meta.schema.json"
      },
      "layout": {
        "$ref": "./layout/layout.schema.json"
      },
      "sections": {
        "$ref": "./sections/sections.schema.json"
      },
      "scripts": {
        "$ref": "./scripts/scripts.schema.json"
      }
    },
    "required": ["name", "path", "meta", "sections"],
    "additionalProperties": false,
    "examples": [
      {
        "name": "Home Page",
        "path": "/",
        "meta": {
          "lang": "en-US",
          "title": "Welcome to Our Platform",
          "description": "The best platform for your needs"
        },
        "layout": {
          "navigation": {
            "logo": "./logo.svg",
            "links": {
              "desktop": [
                {
                  "label": "Home",
                  "href": "/"
                },
                {
                  "label": "About",
                  "href": "/about"
                }
              ]
            }
          }
        },
        "sections": [
          {
            "type": "section",
            "props": {
              "id": "hero"
            },
            "children": []
          }
        ]
      }
    ]
  },
  "x-notes": [
    "Pages now support comprehensive metadata beyond basic SEO",
    "⚠️ Theme is defined at app level (app.theme{}) - NOT in individual pages. See app.schema.json and theme.schema.json",
    "⚠️ Blocks are defined at app level (app.blocks[]) - NOT in individual pages. See app.schema.json and blocks.schema.json",
    "Sections can reference blocks using $ref syntax with variable substitution. See sections.schema.json and block-reference.schema.json",
    "Pages cannot override theme - app.theme{} applies globally to all pages",
    "For page-specific styling, use sections[].props.className with Tailwind utilities"
  ],
  "x-specs": [
    {
      "id": "APP-PAGES-001",
      "given": "a pages array with single page",
      "when": "array contains one complete page configuration",
      "then": "it should validate as pages array with minimum 1 item",
      "validation": {
        "setup": {
          "pages": [
            {
              "name": "Home",
              "path": "/",
              "meta": {
                "lang": "en-US",
                "title": "Home Page"
              },
              "sections": []
            }
          ]
        },
        "assertions": [
          "Array length: 1 page",
          "minItems: 1 (at least one page required)",
          "Valid single-page site"
        ]
      }
    },
    {
      "id": "APP-PAGES-002",
      "given": "a page with required properties only",
      "when": "page has name, path, meta, and sections",
      "then": "it should validate with minimal configuration",
      "validation": {
        "setup": {
          "page": {
            "name": "About",
            "path": "/about",
            "meta": {
              "lang": "en-US",
              "title": "About Us"
            },
            "sections": []
          }
        },
        "assertions": [
          "Required: name, path, meta, sections",
          "Optional properties omitted: id, layout, scripts",
          "Minimal valid page configuration"
        ]
      },
      "application": {
        "page": {
          "name": "About",
          "path": "/about",
          "meta": {
            "lang": "en-US",
            "title": "About Us",
            "description": "Learn about our company"
          },
          "sections": []
        },
        "component": "page",
        "expectedDOM": "<html lang=\"en-US\"><head><title>About Us</title><meta name=\"description\" content=\"Learn about our company\" /></head><body><main data-testid=\"page-about\"></main></body></html>",
        "assertions": [
          "HTML lang attribute from meta.lang",
          "Page title in <title> tag",
          "Meta description in <meta> tag",
          "Main content area with data-testid",
          "Empty sections render empty main"
        ]
      }
    },
    {
      "id": "APP-PAGES-003",
      "given": "a page with all optional properties",
      "when": "page includes id, layout, and scripts",
      "then": "it should accept complete page configuration",
      "validation": {
        "setup": {
          "page": {
            "id": "homepage",
            "name": "Home",
            "path": "/",
            "meta": {
              "lang": "en-US",
              "title": "Welcome"
            },
            "layout": {
              "navigation": {
                "logo": "/logo.svg"
              }
            },
            "sections": [],
            "scripts": {
              "features": {
                "analytics": true
              }
            }
          }
        },
        "assertions": [
          "All properties present: id, name, path, meta, layout, sections, scripts",
          "Complete page configuration",
          "All optional properties accepted"
        ]
      }
    },
    {
      "id": "APP-PAGES-004",
      "given": "a page with home path",
      "when": "path is '/'",
      "then": "it should accept root path for homepage",
      "validation": {
        "setup": {
          "page": {
            "name": "Home",
            "path": "/",
            "meta": {
              "lang": "en-US",
              "title": "Home"
            },
            "sections": []
          }
        },
        "assertions": ["Path: '/' (root)", "Homepage route", "Matches domain root URL"]
      },
      "application": {
        "page": {
          "name": "Home",
          "path": "/",
          "meta": {
            "lang": "en-US",
            "title": "Welcome Home"
          },
          "sections": []
        },
        "routing": {
          "url": "https://example.com/",
          "matched": true
        },
        "component": "page",
        "assertions": [
          "Route: / matches homepage",
          "URL: https://example.com/ (root)",
          "Homepage accessible at domain root"
        ]
      }
    },
    {
      "id": "APP-PAGES-005",
      "given": "a page with nested path",
      "when": "path is '/products/pricing'",
      "then": "it should accept nested URL paths",
      "validation": {
        "setup": {
          "page": {
            "name": "Pricing",
            "path": "/products/pricing",
            "meta": {
              "lang": "en-US",
              "title": "Pricing"
            },
            "sections": []
          }
        },
        "assertions": [
          "Path: '/products/pricing' (nested)",
          "2 levels deep",
          "URL segment structure supported"
        ]
      },
      "application": {
        "page": {
          "name": "Pricing",
          "path": "/products/pricing",
          "meta": {
            "lang": "en-US",
            "title": "Product Pricing"
          },
          "sections": []
        },
        "routing": {
          "url": "https://example.com/products/pricing",
          "matched": true
        },
        "component": "page",
        "assertions": [
          "Route: /products/pricing matches page",
          "URL: https://example.com/products/pricing",
          "Nested paths support hierarchical structure"
        ]
      }
    },
    {
      "id": "APP-PAGES-006",
      "given": "a page with sections containing direct components",
      "when": "sections has type, props, and children",
      "then": "it should support direct component definitions in sections",
      "validation": {
        "setup": {
          "page": {
            "name": "Simple Page",
            "path": "/simple",
            "meta": {
              "lang": "en-US",
              "title": "Simple"
            },
            "sections": [
              {
                "type": "section",
                "props": {
                  "id": "hero"
                },
                "children": [
                  {
                    "type": "h1",
                    "props": {},
                    "children": ["Welcome"]
                  }
                ]
              }
            ]
          }
        },
        "assertions": [
          "Direct component definition: { type, props, children }",
          "No block references",
          "Inline component structure"
        ]
      }
    },
    {
      "id": "APP-PAGES-007",
      "given": "a page with sections containing block references",
      "when": "sections references blocks with variable substitution",
      "then": "it should support block references with $variable syntax",
      "validation": {
        "setup": {
          "page": {
            "name": "Landing",
            "path": "/landing",
            "meta": {
              "lang": "en-US",
              "title": "Landing"
            },
            "sections": [
              {
                "$ref": "#/blocks/hero",
                "$vars": {
                  "title": "Welcome to Our Platform"
                }
              }
            ]
          }
        },
        "assertions": [
          "Block reference: $ref: '#/blocks/hero'",
          "Variable substitution: $vars with title",
          "Reusable blocks via JSON references"
        ]
      },
      "application": {
        "blocks": {
          "hero": {
            "type": "section",
            "props": {
              "id": "hero"
            },
            "children": [
              {
                "type": "h1",
                "children": ["$title"]
              }
            ]
          }
        },
        "page": {
          "sections": [
            {
              "$ref": "#/blocks/hero",
              "$vars": {
                "title": "Welcome"
              }
            }
          ]
        },
        "component": "page",
        "expectedDOM": "<main><section id=\"hero\"><h1>Welcome</h1></section></main>",
        "assertions": [
          "Block reference resolved: hero block inserted",
          "Variable substitution: $title → 'Welcome'",
          "Reusable block with dynamic content",
          "DRY principle: define once, use everywhere"
        ]
      }
    },
    {
      "id": "APP-PAGES-008",
      "given": "a page with layout configuration",
      "when": "layout includes navigation, banner, footer, and sidebar",
      "then": "it should orchestrate global layout components",
      "validation": {
        "setup": {
          "page": {
            "name": "Full Layout",
            "path": "/full",
            "meta": {
              "lang": "en-US",
              "title": "Full Layout"
            },
            "layout": {
              "banner": {
                "message": "New feature available!"
              },
              "navigation": {
                "logo": "/logo.svg"
              },
              "footer": {
                "copyright": "© 2025 Company"
              },
              "sidebar": {
                "position": "left"
              }
            },
            "sections": []
          }
        },
        "assertions": [
          "Layout orchestrates: banner, navigation, footer, sidebar",
          "Global layout components",
          "All layout properties optional"
        ]
      },
      "application": {
        "page": {
          "layout": {
            "banner": {
              "message": "Sale now on!"
            },
            "navigation": {
              "logo": "/logo.svg"
            },
            "footer": {
              "copyright": "© 2025"
            }
          },
          "sections": []
        },
        "component": "page",
        "expectedDOM": "<div data-testid=\"banner\">Sale now on!</div><nav data-testid=\"navigation\"><img src=\"/logo.svg\" /></nav><main>...</main><footer data-testid=\"footer\">© 2025</footer>",
        "assertions": [
          "Layout components wrap main content",
          "Banner appears above navigation",
          "Navigation above main",
          "Footer below main",
          "Consistent layout structure across all pages"
        ]
      }
    },
    {
      "id": "APP-PAGES-009",
      "given": "a page with scripts configuration",
      "when": "scripts includes features, external scripts, and config",
      "then": "it should manage client-side scripts and features",
      "validation": {
        "setup": {
          "page": {
            "name": "Interactive",
            "path": "/interactive",
            "meta": {
              "lang": "en-US",
              "title": "Interactive"
            },
            "scripts": {
              "features": {
                "analytics": true,
                "chatWidget": true
              },
              "external": [
                {
                  "src": "https://cdn.example.com/script.js",
                  "async": true
                }
              ],
              "config": {
                "apiKey": "abc123"
              }
            },
            "sections": []
          }
        },
        "assertions": [
          "Scripts orchestrate: features, external scripts, config",
          "Feature flags: analytics, chatWidget",
          "External script loading",
          "Client-side configuration"
        ]
      },
      "application": {
        "page": {
          "scripts": {
            "features": {
              "analytics": true
            },
            "external": [
              {
                "src": "https://cdn.example.com/analytics.js",
                "async": true
              }
            ]
          }
        },
        "component": "page",
        "expectedDOM": "<html><head><script src=\"https://cdn.example.com/analytics.js\" async></script></head><body>...</body></html>",
        "assertions": [
          "External script injected in <head>",
          "async attribute for non-blocking load",
          "Features control which scripts load",
          "Client-side functionality management"
        ]
      }
    },
    {
      "id": "APP-PAGES-010",
      "given": "multiple pages in array",
      "when": "pages array contains [homepage, about, pricing, contact]",
      "then": "it should support multiple page configurations",
      "validation": {
        "setup": {
          "pages": [
            {
              "name": "Home",
              "path": "/",
              "meta": {
                "lang": "en-US",
                "title": "Home"
              },
              "sections": []
            },
            {
              "name": "About",
              "path": "/about",
              "meta": {
                "lang": "en-US",
                "title": "About"
              },
              "sections": []
            },
            {
              "name": "Pricing",
              "path": "/pricing",
              "meta": {
                "lang": "en-US",
                "title": "Pricing"
              },
              "sections": []
            },
            {
              "name": "Contact",
              "path": "/contact",
              "meta": {
                "lang": "en-US",
                "title": "Contact"
              },
              "sections": []
            }
          ]
        },
        "assertions": [
          "4 pages defined",
          "Each page has unique path",
          "Multi-page site configuration",
          "Array supports any number of pages"
        ]
      },
      "application": {
        "pages": [
          {
            "path": "/"
          },
          {
            "path": "/about"
          },
          {
            "path": "/pricing"
          }
        ],
        "routing": {
          "/": "matched",
          "/about": "matched",
          "/pricing": "matched",
          "/unknown": "404"
        },
        "assertions": [
          "All defined paths accessible",
          "Router matches paths to pages",
          "Undefined paths return 404",
          "Complete site structure"
        ]
      }
    },
    {
      "id": "APP-PAGES-011",
      "given": "a page supporting reusable blocks",
      "when": "blocks are defined at app level and referenced in sections",
      "then": "it should enable block reusability across pages via $ref",
      "validation": {
        "setup": {
          "app": {
            "blocks": [
              {
                "id": "cta",
                "type": "section",
                "children": [
                  {
                    "type": "button",
                    "children": ["$label"]
                  }
                ]
              }
            ],
            "pages": [
              {
                "name": "Home",
                "path": "/",
                "meta": {
                  "lang": "en-US",
                  "title": "Home"
                },
                "sections": [
                  {
                    "$ref": "#/blocks/cta",
                    "$vars": {
                      "label": "Get Started"
                    }
                  }
                ]
              },
              {
                "name": "Pricing",
                "path": "/pricing",
                "meta": {
                  "lang": "en-US",
                  "title": "Pricing"
                },
                "sections": [
                  {
                    "$ref": "#/blocks/cta",
                    "$vars": {
                      "label": "Buy Now"
                    }
                  }
                ]
              }
            ]
          }
        },
        "assertions": [
          "Blocks defined at app.blocks[] (app level)",
          "Pages reference blocks via $ref",
          "Block reused across multiple pages (Home, Pricing)",
          "Variable substitution makes blocks dynamic",
          "DRY: define once, use everywhere with different content"
        ]
      },
      "application": {
        "blocks": {
          "cta": {
            "type": "section",
            "children": [
              {
                "type": "button",
                "children": ["$label"]
              }
            ]
          }
        },
        "pages": [
          {
            "path": "/",
            "sections": [
              {
                "$ref": "#/blocks/cta",
                "$vars": {
                  "label": "Get Started"
                }
              }
            ]
          },
          {
            "path": "/pricing",
            "sections": [
              {
                "$ref": "#/blocks/cta",
                "$vars": {
                  "label": "Buy Now"
                }
              }
            ]
          }
        ],
        "expectedDOM": {
          "/": "<main><section><button>Get Started</button></section></main>",
          "/pricing": "<main><section><button>Buy Now</button></section></main>"
        },
        "assertions": [
          "Same block structure on both pages",
          "Different button labels: 'Get Started' vs 'Buy Now'",
          "Block reusability reduces duplication",
          "Consistent design, dynamic content",
          "Update block once, changes everywhere"
        ]
      }
    },
    {
      "id": "APP-PAGES-012",
      "given": "a page with comprehensive metadata",
      "when": "meta includes SEO, social, structured data, and analytics",
      "then": "it should support complete metadata configuration beyond basic SEO",
      "validation": {
        "setup": {
          "page": {
            "name": "Product Page",
            "path": "/product",
            "meta": {
              "lang": "en-US",
              "title": "Amazing Product",
              "description": "The best product ever",
              "openGraph": {
                "title": "Amazing Product",
                "image": "/og-image.jpg"
              },
              "twitterCard": {
                "card": "summary_large_image",
                "image": "/twitter-image.jpg"
              },
              "structuredData": {
                "@type": "Product",
                "name": "Amazing Product",
                "offers": {
                  "price": "99.99",
                  "priceCurrency": "USD"
                }
              },
              "analytics": {
                "googleAnalytics": {
                  "id": "G-XXXXXXXXXX"
                }
              }
            },
            "sections": []
          }
        },
        "assertions": [
          "Basic SEO: title, description",
          "Social: Open Graph, Twitter Card",
          "Structured data: Product schema",
          "Analytics: Google Analytics",
          "Comprehensive metadata for discoverability and engagement"
        ]
      },
      "application": {
        "page": {
          "meta": {
            "title": "Amazing Product",
            "description": "Best product",
            "openGraph": {
              "title": "Amazing Product",
              "image": "/og.jpg"
            },
            "structuredData": {
              "@type": "Product",
              "name": "Amazing Product"
            }
          }
        },
        "component": "page",
        "expectedDOM": "<html><head><title>Amazing Product</title><meta name=\"description\" content=\"Best product\" /><meta property=\"og:title\" content=\"Amazing Product\" /><meta property=\"og:image\" content=\"/og.jpg\" /><script type=\"application/ld+json\">{\"@type\":\"Product\",\"name\":\"Amazing Product\"}</script></head><body>...</body></html>",
        "assertions": [
          "SEO: <title> and <meta name=\"description\">",
          "Open Graph: <meta property=\"og:...\">",
          "Structured Data: <script type=\"application/ld+json\">",
          "Complete <head> metadata for SEO, social sharing, rich snippets",
          "Search engines and social platforms consume metadata"
        ]
      }
    },
    {
      "id": "APP-PAGES-INTEGRATION-001",
      "given": "a page with theme integration",
      "when": "page sections use app.theme colors, typography, and spacing via className",
      "then": "it should apply global theme to page elements without page-level theme config",
      "validation": {
        "setup": {
          "app": {
            "theme": {
              "colors": {
                "primary": "#3B82F6",
                "secondary": "#10B981"
              },
              "typography": {
                "fontFamily": {
                  "sans": "Inter, system-ui, sans-serif"
                },
                "fontSize": {
                  "h1": "3rem"
                }
              },
              "spacing": {
                "container": {
                  "padding": "1rem"
                }
              }
            },
            "pages": [
              {
                "name": "Home",
                "path": "/",
                "meta": {
                  "lang": "en-US",
                  "title": "Home"
                },
                "sections": [
                  {
                    "type": "section",
                    "props": {
                      "className": "bg-primary text-white py-container-padding"
                    },
                    "children": [
                      {
                        "type": "h1",
                        "props": {
                          "className": "font-sans text-h1"
                        },
                        "children": ["Welcome"]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        },
        "assertions": [
          "Theme defined at app level (app.theme{})",
          "Pages CANNOT define theme property",
          "Sections use className with theme tokens: bg-primary, text-h1, py-container-padding",
          "Theme applies globally to all pages",
          "Page-specific styling via className, not page.theme"
        ]
      },
      "application": {
        "app": {
          "theme": {
            "colors": {
              "primary": "#3B82F6",
              "background": "#FFFFFF",
              "text": "#111827"
            },
            "typography": {
              "fontFamily": {
                "sans": "Inter, system-ui, sans-serif"
              }
            }
          },
          "pages": [
            {
              "path": "/",
              "sections": [
                {
                  "type": "section",
                  "props": {
                    "className": "bg-primary text-white"
                  },
                  "children": [
                    {
                      "type": "h1",
                      "props": {
                        "className": "font-sans"
                      },
                      "children": ["Welcome"]
                    }
                  ]
                }
              ]
            }
          ]
        },
        "expectedDOM": "<section class=\"bg-primary text-white\" style=\"background-color: #3B82F6; color: #FFFFFF;\"><h1 class=\"font-sans\" style=\"font-family: Inter, system-ui, sans-serif;\">Welcome</h1></section>",
        "cssVariables": {
          ":root": {
            "--color-primary": "#3B82F6",
            "--color-background": "#FFFFFF",
            "--color-text": "#111827",
            "--font-sans": "Inter, system-ui, sans-serif"
          }
        },
        "useCases": [
          "Global rebrand: Change app.theme.colors.primary → all pages update instantly",
          "Dark mode: Toggle theme.colors → all pages switch colors",
          "Typography: Update font → consistent across all pages",
          "Design system: Theme ensures consistency without per-page config"
        ],
        "assertions": [
          "Theme tokens compiled to CSS variables (--color-primary, --font-sans)",
          "className utilities reference theme tokens (bg-primary → var(--color-primary))",
          "Pages consume theme via className, no page.theme property",
          "Single source of truth: app.theme{} applies to all pages",
          "Real-world: Stripe uses global theme, pages use utility classes"
        ]
      }
    },
    {
      "id": "APP-PAGES-INTEGRATION-002",
      "given": "a page with language integration",
      "when": "page uses app.languages for i18n with meta.lang and locale-specific content",
      "then": "it should adapt page content based on selected language without page-level translations",
      "validation": {
        "setup": {
          "app": {
            "languages": {
              "default": "en",
              "supported": ["en", "fr", "es"],
              "translations": {
                "en": {
                  "nav.home": "Home",
                  "hero.title": "Welcome to Our Platform"
                },
                "fr": {
                  "nav.home": "Accueil",
                  "hero.title": "Bienvenue sur notre plateforme"
                },
                "es": {
                  "nav.home": "Inicio",
                  "hero.title": "Bienvenido a nuestra plataforma"
                }
              }
            },
            "pages": [
              {
                "name": "Home",
                "path": "/",
                "meta": {
                  "lang": "en",
                  "title": "$t:hero.title"
                },
                "sections": [
                  {
                    "type": "h1",
                    "children": ["$t:hero.title"]
                  }
                ]
              },
              {
                "name": "Home (French)",
                "path": "/fr",
                "meta": {
                  "lang": "fr",
                  "title": "$t:hero.title"
                },
                "sections": [
                  {
                    "type": "h1",
                    "children": ["$t:hero.title"]
                  }
                ]
              }
            ]
          }
        },
        "assertions": [
          "Languages defined at app level (app.languages{})",
          "Pages reference translations via $t: syntax",
          "meta.lang specifies page locale (en, fr, es)",
          "Same page structure, different language content",
          "Translation keys resolve based on meta.lang"
        ]
      },
      "application": {
        "app": {
          "languages": {
            "default": "en",
            "supported": ["en", "fr"],
            "translations": {
              "en": {
                "hero.title": "Welcome",
                "hero.cta": "Get Started"
              },
              "fr": {
                "hero.title": "Bienvenue",
                "hero.cta": "Commencer"
              }
            }
          },
          "pages": [
            {
              "path": "/",
              "meta": {
                "lang": "en"
              },
              "sections": [
                {
                  "type": "h1",
                  "children": ["$t:hero.title"]
                },
                {
                  "type": "button",
                  "children": ["$t:hero.cta"]
                }
              ]
            },
            {
              "path": "/fr",
              "meta": {
                "lang": "fr"
              },
              "sections": [
                {
                  "type": "h1",
                  "children": ["$t:hero.title"]
                },
                {
                  "type": "button",
                  "children": ["$t:hero.cta"]
                }
              ]
            }
          ]
        },
        "expectedDOM": {
          "/": "<h1>Welcome</h1><button>Get Started</button>",
          "/fr": "<h1>Bienvenue</h1><button>Commencer</button>"
        },
        "routing": {
          "/": "English (default locale)",
          "/fr": "French (explicit locale)",
          "/es": "404 (unsupported locale)"
        },
        "useCases": [
          "Stripe: /en, /fr, /ja pages with same structure, different content",
          "Vercel: /docs (en), /docs/de (German) with locale switcher",
          "Notion: Auto-detect browser locale, show appropriate page",
          "GitHub: /en/about, /ja/about with translated content"
        ],
        "assertions": [
          "$t:key syntax resolves to app.languages.translations[meta.lang][key]",
          "Same page structure across locales (DRY)",
          "meta.lang sets HTML lang attribute + translation context",
          "Language switcher changes meta.lang → content updates",
          "Real-world: 60% of SaaS apps support 2+ languages"
        ]
      }
    },
    {
      "id": "APP-PAGES-INTEGRATION-003",
      "given": "a page with blocks integration",
      "when": "page sections reference app.blocks[] via $ref with $vars substitution",
      "then": "it should compose pages from reusable blocks without duplicating block definitions",
      "validation": {
        "setup": {
          "app": {
            "blocks": [
              {
                "id": "hero",
                "type": "section",
                "props": {
                  "className": "py-20"
                },
                "children": [
                  {
                    "type": "h1",
                    "children": ["$title"]
                  },
                  {
                    "type": "p",
                    "children": ["$description"]
                  },
                  {
                    "type": "button",
                    "children": ["$ctaLabel"]
                  }
                ]
              },
              {
                "id": "features",
                "type": "section",
                "children": [
                  {
                    "type": "div",
                    "children": ["$feature1"]
                  },
                  {
                    "type": "div",
                    "children": ["$feature2"]
                  }
                ]
              }
            ],
            "pages": [
              {
                "name": "Home",
                "path": "/",
                "meta": {
                  "lang": "en-US",
                  "title": "Home"
                },
                "sections": [
                  {
                    "$ref": "#/blocks/hero",
                    "$vars": {
                      "title": "Welcome Home",
                      "description": "Your journey starts here",
                      "ctaLabel": "Get Started"
                    }
                  },
                  {
                    "$ref": "#/blocks/features",
                    "$vars": {
                      "feature1": "Fast",
                      "feature2": "Secure"
                    }
                  }
                ]
              },
              {
                "name": "Pricing",
                "path": "/pricing",
                "meta": {
                  "lang": "en-US",
                  "title": "Pricing"
                },
                "sections": [
                  {
                    "$ref": "#/blocks/hero",
                    "$vars": {
                      "title": "Simple Pricing",
                      "description": "Choose your plan",
                      "ctaLabel": "Buy Now"
                    }
                  }
                ]
              }
            ]
          }
        },
        "assertions": [
          "Blocks defined at app level (app.blocks[])",
          "Pages reference blocks via $ref: '#/blocks/{id}'",
          "Variable substitution via $vars object",
          "Same block structure, different content per page",
          "DRY: Define block once, use across multiple pages"
        ]
      },
      "application": {
        "app": {
          "blocks": [
            {
              "id": "hero",
              "type": "section",
              "children": [
                {
                  "type": "h1",
                  "children": ["$title"]
                },
                {
                  "type": "button",
                  "children": ["$cta"]
                }
              ]
            }
          ],
          "pages": [
            {
              "path": "/",
              "sections": [
                {
                  "$ref": "#/blocks/hero",
                  "$vars": {
                    "title": "Welcome",
                    "cta": "Get Started"
                  }
                }
              ]
            },
            {
              "path": "/pricing",
              "sections": [
                {
                  "$ref": "#/blocks/hero",
                  "$vars": {
                    "title": "Pricing",
                    "cta": "Buy Now"
                  }
                }
              ]
            }
          ]
        },
        "expectedDOM": {
          "/": "<section><h1>Welcome</h1><button>Get Started</button></section>",
          "/pricing": "<section><h1>Pricing</h1><button>Buy Now</button></section>"
        },
        "benefits": {
          "reusability": "Define hero block once → use on 10+ pages",
          "consistency": "Update block → all pages get changes",
          "maintenance": "Change button style → updates everywhere",
          "performance": "Block definitions cached, not duplicated"
        },
        "useCases": [
          "Stripe: hero, pricing-table, faq blocks reused across pages",
          "Vercel: feature-grid, testimonials blocks on multiple pages",
          "Linear: cta, stats blocks with different content per page",
          "GitHub: code-example, feature-showcase reusable blocks"
        ],
        "assertions": [
          "$ref resolves block from app.blocks[] by id",
          "$vars substitutes $title, $cta in block children",
          "Same block structure ensures design consistency",
          "Variable substitution enables dynamic content",
          "Real-world: 80% of landing pages reuse 5-10 core blocks"
        ]
      }
    },
    {
      "id": "APP-PAGES-INTEGRATION-004",
      "given": "a page with responsive integration",
      "when": "page layout adapts across mobile, tablet, and desktop viewports",
      "then": "it should support responsive design via className utilities without separate mobile pages",
      "validation": {
        "setup": {
          "page": {
            "name": "Responsive",
            "path": "/responsive",
            "meta": {
              "lang": "en-US",
              "title": "Responsive"
            },
            "sections": [
              {
                "type": "section",
                "props": {
                  "className": "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4"
                },
                "children": [
                  {
                    "type": "div",
                    "props": {
                      "className": "text-sm md:text-base lg:text-lg"
                    },
                    "children": ["Responsive Text"]
                  }
                ]
              }
            ],
            "layout": {
              "navigation": {
                "logo": "/logo.svg",
                "links": {
                  "desktop": [
                    {
                      "label": "Home",
                      "href": "/"
                    }
                  ],
                  "mobile": [
                    {
                      "label": "Menu",
                      "href": "#"
                    }
                  ]
                }
              },
              "sidebar": {
                "enabled": true,
                "collapsible": true,
                "defaultCollapsed": false,
                "responsive": {
                  "mobile": "collapsed",
                  "tablet": "collapsed",
                  "desktop": "expanded"
                }
              }
            }
          }
        },
        "assertions": [
          "Responsive utilities: grid-cols-1 (mobile), md:grid-cols-2 (tablet), lg:grid-cols-3 (desktop)",
          "Text sizing: text-sm (mobile) → text-base (tablet) → text-lg (desktop)",
          "Navigation: Different links for mobile vs desktop",
          "Sidebar: Responsive behavior (collapsed on mobile/tablet, expanded on desktop)",
          "Single page adapts to all viewports"
        ]
      },
      "application": {
        "page": {
          "sections": [
            {
              "type": "section",
              "props": {
                "className": "flex flex-col md:flex-row gap-4 p-4 md:p-8 lg:p-12"
              },
              "children": [
                {
                  "type": "div",
                  "props": {
                    "className": "w-full md:w-1/2 text-base md:text-lg lg:text-xl"
                  },
                  "children": ["Content"]
                }
              ]
            }
          ],
          "layout": {
            "navigation": {
              "links": {
                "desktop": ["Home", "About", "Pricing", "Contact"],
                "mobile": ["Menu"]
              }
            }
          }
        },
        "viewports": {
          "mobile": {
            "width": "375px",
            "layout": "flex-col (vertical stack)",
            "padding": "p-4 (1rem)",
            "text": "text-base (1rem)",
            "navigation": "Mobile menu (hamburger icon)"
          },
          "tablet": {
            "width": "768px",
            "layout": "md:flex-row (horizontal)",
            "padding": "md:p-8 (2rem)",
            "text": "md:text-lg (1.125rem)",
            "navigation": "Full navigation (all links visible)"
          },
          "desktop": {
            "width": "1280px",
            "layout": "lg:flex-row (horizontal)",
            "padding": "lg:p-12 (3rem)",
            "text": "lg:text-xl (1.25rem)",
            "navigation": "Full navigation + additional links"
          }
        },
        "useCases": [
          "Stripe: Single pricing page, grid adapts (1 col mobile → 3 cols desktop)",
          "Vercel: Navigation collapses to hamburger on mobile",
          "Linear: Sidebar auto-collapses on mobile, expands on desktop",
          "GitHub: Content stacks vertically on mobile, side-by-side on desktop"
        ],
        "assertions": [
          "Responsive utilities in className (sm:, md:, lg:, xl: prefixes)",
          "Mobile-first design: base styles for mobile, breakpoints for larger screens",
          "Single page definition adapts to all viewports",
          "Layout components (navigation, sidebar) have responsive config",
          "Real-world: 60% of traffic is mobile, responsive is required"
        ]
      }
    },
    {
      "id": "APP-PAGES-INTEGRATION-005",
      "given": "a complete app with pages, theme, blocks, languages, and responsive",
      "when": "all systems work together in a full-stack configuration",
      "then": "it should demonstrate end-to-end integration of all page-building features",
      "validation": {
        "setup": {
          "app": {
            "theme": {
              "colors": {
                "primary": "#3B82F6",
                "secondary": "#10B981"
              },
              "typography": {
                "fontFamily": {
                  "sans": "Inter, sans-serif"
                }
              }
            },
            "languages": {
              "default": "en",
              "supported": ["en", "fr"],
              "translations": {
                "en": {
                  "hero.title": "Welcome",
                  "hero.cta": "Get Started"
                },
                "fr": {
                  "hero.title": "Bienvenue",
                  "hero.cta": "Commencer"
                }
              }
            },
            "blocks": [
              {
                "id": "hero",
                "type": "section",
                "props": {
                  "className": "bg-primary text-white py-12 md:py-20"
                },
                "children": [
                  {
                    "type": "h1",
                    "props": {
                      "className": "font-sans text-2xl md:text-4xl"
                    },
                    "children": ["$title"]
                  },
                  {
                    "type": "button",
                    "props": {
                      "className": "bg-secondary px-4 py-2 md:px-6 md:py-3"
                    },
                    "children": ["$cta"]
                  }
                ]
              }
            ],
            "pages": [
              {
                "name": "Home (English)",
                "path": "/",
                "meta": {
                  "lang": "en",
                  "title": "$t:hero.title"
                },
                "sections": [
                  {
                    "$ref": "#/blocks/hero",
                    "$vars": {
                      "title": "$t:hero.title",
                      "cta": "$t:hero.cta"
                    }
                  }
                ]
              },
              {
                "name": "Home (French)",
                "path": "/fr",
                "meta": {
                  "lang": "fr",
                  "title": "$t:hero.title"
                },
                "sections": [
                  {
                    "$ref": "#/blocks/hero",
                    "$vars": {
                      "title": "$t:hero.title",
                      "cta": "$t:hero.cta"
                    }
                  }
                ]
              }
            ]
          }
        },
        "assertions": [
          "Theme: Global colors (primary, secondary) and typography (font-sans)",
          "Languages: English (/), French (/fr) with $t: translations",
          "Blocks: Reusable hero block with $vars substitution",
          "Responsive: Adapts spacing (py-12 → py-20) and text (text-2xl → text-4xl)",
          "Pages: Same structure, theme applied, translations resolved, responsive"
        ]
      },
      "application": {
        "app": {
          "theme": {
            "colors": {
              "primary": "#3B82F6",
              "secondary": "#10B981"
            }
          },
          "languages": {
            "translations": {
              "en": {
                "hero.title": "Welcome"
              },
              "fr": {
                "hero.title": "Bienvenue"
              }
            }
          },
          "blocks": [
            {
              "id": "hero",
              "props": {
                "className": "bg-primary text-2xl md:text-4xl"
              },
              "children": [
                {
                  "type": "h1",
                  "children": ["$title"]
                }
              ]
            }
          ],
          "pages": [
            {
              "path": "/",
              "meta": {
                "lang": "en"
              },
              "sections": [
                {
                  "$ref": "#/blocks/hero",
                  "$vars": {
                    "title": "$t:hero.title"
                  }
                }
              ]
            },
            {
              "path": "/fr",
              "meta": {
                "lang": "fr"
              },
              "sections": [
                {
                  "$ref": "#/blocks/hero",
                  "$vars": {
                    "title": "$t:hero.title"
                  }
                }
              ]
            }
          ]
        },
        "renderPipeline": {
          "step1": "Resolve page by path (/ or /fr)",
          "step2": "Resolve $ref to block (hero from app.blocks[])",
          "step3": "Substitute $vars ($title → $t:hero.title)",
          "step4": "Resolve $t: translations based on meta.lang",
          "step5": "Apply theme tokens (bg-primary → #3B82F6)",
          "step6": "Apply responsive utilities (text-2xl on mobile, text-4xl on desktop)",
          "step7": "Render final HTML with all integrations"
        },
        "expectedDOM": {
          "/ (mobile)": "<section class=\"bg-primary text-2xl\" style=\"background-color: #3B82F6; font-size: 1.5rem;\"><h1>Welcome</h1></section>",
          "/ (desktop)": "<section class=\"bg-primary text-4xl\" style=\"background-color: #3B82F6; font-size: 2.25rem;\"><h1>Welcome</h1></section>",
          "/fr (mobile)": "<section class=\"bg-primary text-2xl\" style=\"background-color: #3B82F6; font-size: 1.5rem;\"><h1>Bienvenue</h1></section>",
          "/fr (desktop)": "<section class=\"bg-primary text-4xl\" style=\"background-color: #3B82F6; font-size: 2.25rem;\"><h1>Bienvenue</h1></section>"
        },
        "benefits": {
          "theme": "Consistent design across all pages (update theme → all pages change)",
          "languages": "Multi-locale support without duplicating blocks",
          "blocks": "Reusable components (define once, use everywhere)",
          "responsive": "Single source adapts to all devices",
          "integration": "All systems compose seamlessly"
        },
        "realWorld": {
          "stripe": "app.theme (design system) + app.blocks (hero, pricing) + responsive + i18n",
          "vercel": "app.blocks (features, testimonials) + app.languages (en, de, ja) + theme",
          "linear": "app.theme (brand colors) + app.blocks (CTAs, stats) + responsive",
          "github": "app.blocks (code-example, feature) + app.languages (15+ locales) + theme"
        },
        "assertions": [
          "Full integration: theme + languages + blocks + responsive + pages",
          "Single source of truth: app.theme{}, app.languages{}, app.blocks[]",
          "Pages compose from global config without duplication",
          "Render pipeline resolves: $ref → $vars → $t: → theme → responsive",
          "Real-world: All major SaaS platforms use this architecture",
          "Result: Maintainable, scalable, consistent page-building system"
        ]
      }
    }
  ]
}
