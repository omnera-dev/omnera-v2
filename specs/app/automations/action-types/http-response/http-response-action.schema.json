{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "HTTP Response",
  "description": "Send an HTTP response",
  "type": "object",
  "properties": {
    "name": {
      "title": "Action Name",
      "description": "Human-readable name for this action to identify it in automation logs",
      "type": "string",
      "minLength": 1,
      "examples": ["Send response", "Return data", "Send webhook response"]
    },
    "service": {
      "title": "Service Type",
      "description": "The service this action uses",
      "type": "string",
      "const": "http"
    },
    "action": {
      "title": "Action Type",
      "description": "The specific HTTP action to perform",
      "type": "string",
      "const": "response"
    },
    "params": {
      "title": "Response Parameters",
      "description": "Configuration for the HTTP response to send back to the requester",
      "type": "object",
      "properties": {
        "headers": {
          "title": "Response Headers",
          "description": "HTTP headers to include in the response (supports template variables)",
          "type": "object",
          "propertyNames": {
            "type": "string"
          },
          "additionalProperties": {
            "type": "string"
          },
          "examples": [
            {
              "Content-Type": "application/json",
              "X-Custom-Header": "{{trigger.id}}"
            }
          ]
        },
        "body": {
          "title": "Response Body",
          "description": "The response body to send (can be JSON object or string, supports template variables)",
          "anyOf": [
            {
              "type": "object",
              "propertyNames": {
                "type": "string"
              },
              "additionalProperties": {}
            },
            {
              "type": "string"
            }
          ],
          "examples": [
            {
              "success": true,
              "message": "Data received"
            },
            "OK",
            "{{previous_action.result}}"
          ]
        }
      },
      "additionalProperties": false
    }
  },
  "required": ["name", "service", "action"],
  "additionalProperties": false,
  "$id": "http-response-action.schema.json",
  "x-specs": [
    {
      "id": "APP-HTTP-RESPONSE-001",
      "given": "the application is running",
      "when": "I run a response http action",
      "then": "it should work correctly"
    },
    {
      "id": "APP-HTTP-RESPONSE-002",
      "given": "I am working with body from a post request",
      "when": "I run a response http action",
      "then": "it should complete successfully"
    },
    {
      "id": "APP-HTTP-RESPONSE-003",
      "given": "I am working with body from a get request",
      "when": "I run a response http action",
      "then": "it should complete successfully"
    },
    {
      "id": "APP-HTTP-RESPONSE-004",
      "given": "I am working with previous error",
      "when": "I run a response http action",
      "then": "it should complete successfully"
    },
    {
      "id": "APP-HTTP-RESPONSE-005",
      "given": "I am working with previous action",
      "when": "I run a response http action",
      "then": "it should complete successfully"
    },
    {
      "id": "APP-HTTP-RESPONSE-006",
      "given": "I am working with headers",
      "when": "I run a response http action",
      "then": "it should complete successfully"
    },
    {
      "id": "APP-HTTP-RESPONSE-007",
      "given": "user provides name with at least 1 characters",
      "when": "validating input",
      "then": "value should be accepted"
    },
    {
      "id": "APP-HTTP-RESPONSE-008",
      "given": "user provides name shorter than 1 chars",
      "when": "validating input",
      "then": "error should require minimum length"
    },
    {
      "id": "APP-HTTP-RESPONSE-009",
      "given": "entity with service='http'",
      "when": "processing configuration",
      "then": "correct handler should be selected"
    },
    {
      "id": "APP-HTTP-RESPONSE-010",
      "given": "invalid service value",
      "when": "validating configuration",
      "then": "clear error message should identify the issue"
    },
    {
      "id": "APP-HTTP-RESPONSE-011",
      "given": "entity with action='response'",
      "when": "processing configuration",
      "then": "correct handler should be selected"
    },
    {
      "id": "APP-HTTP-RESPONSE-012",
      "given": "invalid action value",
      "when": "validating configuration",
      "then": "clear error message should identify the issue"
    },
    {
      "id": "APP-HTTP-RESPONSE-013",
      "given": "user configures params",
      "when": "validating input",
      "then": "value should meet schema requirements"
    },
    {
      "id": "APP-HTTP-RESPONSE-014",
      "given": "params is set",
      "when": "processing configuration",
      "then": "value should be used correctly"
    },
    {
      "id": "APP-HTTP-RESPONSE-015",
      "given": "user configures headers",
      "when": "validating input",
      "then": "value should meet schema requirements"
    },
    {
      "id": "APP-HTTP-RESPONSE-016",
      "given": "headers is set",
      "when": "processing configuration",
      "then": "value should be used correctly"
    },
    {
      "id": "APP-HTTP-RESPONSE-017",
      "given": "user configures body",
      "when": "validating input",
      "then": "value should meet schema requirements"
    },
    {
      "id": "APP-HTTP-RESPONSE-018",
      "given": "body is set",
      "when": "processing configuration",
      "then": "value should be used correctly"
    }
  ]
}
