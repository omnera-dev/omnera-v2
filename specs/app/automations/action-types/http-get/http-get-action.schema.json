{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "GET Request",
  "description": "Make a GET HTTP request",
  "type": "object",
  "properties": {
    "name": {
      "title": "Action Name",
      "description": "Human-readable name for this action to identify it in automation logs",
      "type": "string",
      "minLength": 1,
      "examples": ["Fetch user data", "Call external API", "Get weather info"]
    },
    "service": {
      "title": "Service Type",
      "description": "The service this action uses",
      "type": "string",
      "const": "http"
    },
    "action": {
      "title": "Action Type",
      "description": "The specific HTTP action to perform",
      "type": "string",
      "const": "get"
    },
    "params": {
      "title": "Action Parameters",
      "description": "Configuration for the HTTP GET request",
      "type": "object",
      "properties": {
        "url": {
          "title": "URL",
          "description": "The URL to send the GET request to (supports template variables like {{env.API_URL}})",
          "type": "string",
          "minLength": 1,
          "examples": [
            "https://api.example.com/users",
            "{{env.API_URL}}/data",
            "https://api.weather.com?city={{trigger.city}}"
          ]
        },
        "headers": {
          "title": "HTTP Headers",
          "description": "Custom HTTP headers to include in the request (supports template variables)",
          "type": "object",
          "propertyNames": {
            "type": "string"
          },
          "additionalProperties": {
            "type": "string"
          },
          "examples": [
            {
              "Authorization": "Bearer {{env.API_TOKEN}}",
              "Content-Type": "application/json"
            }
          ]
        }
      },
      "required": ["url"],
      "additionalProperties": false
    }
  },
  "required": ["name", "service", "action", "params"],
  "additionalProperties": false,
  "specs": [
    {
      "id": "SPEC-001",
      "given": "the application is running",
      "when": "I run a get http action",
      "then": "it should work correctly"
    },
    {
      "id": "SPEC-002",
      "given": "I am working with headers",
      "when": "I run a get http action",
      "then": "it should complete successfully"
    },
    {
      "id": "SPEC-003",
      "given": "user provides name with at least 1 characters",
      "when": "validating input",
      "then": "value should be accepted"
    },
    {
      "id": "SPEC-004",
      "given": "user provides name shorter than 1 chars",
      "when": "validating input",
      "then": "error should require minimum length"
    },
    {
      "id": "SPEC-005",
      "given": "entity with service='http'",
      "when": "processing configuration",
      "then": "correct handler should be selected"
    },
    {
      "id": "SPEC-006",
      "given": "invalid service value",
      "when": "validating configuration",
      "then": "clear error message should identify the issue"
    },
    {
      "id": "SPEC-007",
      "given": "entity with action='get'",
      "when": "processing configuration",
      "then": "correct handler should be selected"
    },
    {
      "id": "SPEC-008",
      "given": "invalid action value",
      "when": "validating configuration",
      "then": "clear error message should identify the issue"
    },
    {
      "id": "SPEC-009",
      "given": "user configures params",
      "when": "validating input",
      "then": "value should meet schema requirements"
    },
    {
      "id": "SPEC-010",
      "given": "params is set",
      "when": "processing configuration",
      "then": "value should be used correctly"
    },
    {
      "id": "SPEC-011",
      "given": "user provides url with at least 1 characters",
      "when": "validating input",
      "then": "value should be accepted"
    },
    {
      "id": "SPEC-012",
      "given": "user provides url shorter than 1 chars",
      "when": "validating input",
      "then": "error should require minimum length"
    },
    {
      "id": "SPEC-013",
      "given": "user configures headers",
      "when": "validating input",
      "then": "value should meet schema requirements"
    },
    {
      "id": "SPEC-014",
      "given": "headers is set",
      "when": "processing configuration",
      "then": "value should be used correctly"
    }
  ],
  "$id": "http-get-action.schema.json"
}
