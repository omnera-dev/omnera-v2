{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "List Pages",
  "description": "Lists pages from a Notion database",
  "type": "object",
  "properties": {
    "name": {
      "type": "string"
    },
    "account": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "type": "string"
        }
      ]
    },
    "service": {
      "type": "string",
      "const": "notion"
    },
    "action": {
      "type": "string",
      "const": "list-pages"
    },
    "params": {
      "type": "object",
      "properties": {
        "databaseId": {
          "description": "The ID of the database to query",
          "type": "string"
        },
        "filter": {
          "description": "Filter conditions for the query"
        },
        "sorts": {
          "description": "Sort conditions for the query",
          "type": "array",
          "items": {}
        },
        "startCursor": {
          "description": "Pagination cursor",
          "type": "string"
        },
        "pageSize": {
          "description": "Number of results per page",
          "type": "number",
          "minimum": 1,
          "maximum": 100
        }
      },
      "required": ["databaseId"],
      "additionalProperties": false
    }
  },
  "required": ["name", "account", "service", "action", "params"],
  "additionalProperties": false,
  "$id": "notion-list-pages-action.schema.json",
  "x-specs": [
    {
      "id": "APP-NOTION-LIST-PAGES-001",
      "given": "user provides name",
      "when": "validating input",
      "then": "string value should be accepted"
    },
    {
      "id": "APP-NOTION-LIST-PAGES-002",
      "given": "name is empty string",
      "when": "validating input",
      "then": "behavior should follow optional/required rules"
    },
    {
      "id": "APP-NOTION-LIST-PAGES-003",
      "given": "user configures account",
      "when": "validating input",
      "then": "value should meet schema requirements"
    },
    {
      "id": "APP-NOTION-LIST-PAGES-004",
      "given": "account is set",
      "when": "processing configuration",
      "then": "value should be used correctly"
    },
    {
      "id": "APP-NOTION-LIST-PAGES-005",
      "given": "entity with service='notion'",
      "when": "processing configuration",
      "then": "correct handler should be selected"
    },
    {
      "id": "APP-NOTION-LIST-PAGES-006",
      "given": "invalid service value",
      "when": "validating configuration",
      "then": "clear error message should identify the issue"
    },
    {
      "id": "APP-NOTION-LIST-PAGES-007",
      "given": "entity with action='list-pages'",
      "when": "processing configuration",
      "then": "correct handler should be selected"
    },
    {
      "id": "APP-NOTION-LIST-PAGES-008",
      "given": "invalid action value",
      "when": "validating configuration",
      "then": "clear error message should identify the issue"
    },
    {
      "id": "APP-NOTION-LIST-PAGES-009",
      "given": "user configures params",
      "when": "validating input",
      "then": "value should meet schema requirements"
    },
    {
      "id": "APP-NOTION-LIST-PAGES-010",
      "given": "params is set",
      "when": "processing configuration",
      "then": "value should be used correctly"
    },
    {
      "id": "APP-NOTION-LIST-PAGES-011",
      "given": "user provides databaseId",
      "when": "validating input",
      "then": "string value should be accepted"
    },
    {
      "id": "APP-NOTION-LIST-PAGES-012",
      "given": "databaseId is empty string",
      "when": "validating input",
      "then": "behavior should follow optional/required rules"
    },
    {
      "id": "APP-NOTION-LIST-PAGES-013",
      "given": "user configures filter",
      "when": "validating input",
      "then": "value should meet schema requirements"
    },
    {
      "id": "APP-NOTION-LIST-PAGES-014",
      "given": "filter is set",
      "when": "processing configuration",
      "then": "value should be used correctly"
    },
    {
      "id": "APP-NOTION-LIST-PAGES-015",
      "given": "user provides sorts array",
      "when": "validating input",
      "then": "items should be processed in order"
    },
    {
      "id": "APP-NOTION-LIST-PAGES-016",
      "given": "sorts array is empty",
      "when": "validating input",
      "then": "behavior should follow optional/required rules"
    },
    {
      "id": "APP-NOTION-LIST-PAGES-017",
      "given": "user provides startCursor",
      "when": "validating input",
      "then": "string value should be accepted"
    },
    {
      "id": "APP-NOTION-LIST-PAGES-018",
      "given": "startCursor is empty string",
      "when": "validating input",
      "then": "behavior should follow optional/required rules"
    },
    {
      "id": "APP-NOTION-LIST-PAGES-019",
      "given": "user provides pageSize between 1 and 100",
      "when": "validating input",
      "then": "value should be accepted"
    },
    {
      "id": "APP-NOTION-LIST-PAGES-020",
      "given": "user provides pageSize below 1",
      "when": "validating input",
      "then": "error should enforce minimum value"
    },
    {
      "id": "APP-NOTION-LIST-PAGES-021",
      "given": "user provides pageSize above 100",
      "when": "validating input",
      "then": "error should enforce maximum value"
    }
  ]
}
