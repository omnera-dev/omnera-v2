{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Run TypeScript",
  "description": "Execute TypeScript code",
  "type": "object",
  "properties": {
    "name": {
      "type": "string"
    },
    "service": {
      "type": "string",
      "const": "code"
    },
    "action": {
      "type": "string",
      "const": "run-typescript"
    },
    "params": {
      "type": "object",
      "properties": {
        "inputData": {
          "default": {},
          "type": "object",
          "propertyNames": {
            "type": "string"
          },
          "additionalProperties": {
            "type": "string"
          }
        },
        "code": {
          "type": "string"
        }
      },
      "required": ["code"],
      "additionalProperties": false
    }
  },
  "required": ["name", "service", "action", "params"],
  "additionalProperties": false,
  "specs": [
    {
      "id": "SPEC-001",
      "given": "the application is running",
      "when": "I run a TypeScript code",
      "then": "it should work correctly"
    },
    {
      "id": "SPEC-002",
      "given": "I am working with input data",
      "when": "I run a TypeScript code",
      "then": "it should complete successfully"
    },
    {
      "id": "SPEC-003",
      "given": "the code throw an error",
      "when": "I return an error",
      "then": "it should succeed"
    },
    {
      "id": "SPEC-004",
      "given": "I am working with externals",
      "when": "I run a TypeScript code",
      "then": "it should complete successfully"
    },
    {
      "id": "SPEC-005",
      "given": "I am working with globals variables",
      "when": "I run a TypeScript code",
      "then": "it should complete successfully"
    },
    {
      "id": "SPEC-006",
      "given": "I am working with tables",
      "when": "I run a TypeScript code",
      "then": "it should complete successfully"
    },
    {
      "id": "SPEC-007",
      "given": "I am working with buckets",
      "when": "I run a TypeScript code",
      "then": "it should complete successfully"
    },
    {
      "id": "SPEC-008",
      "given": "the application is running",
      "when": "I run a TypeScript code that return an array",
      "then": "it should work correctly"
    },
    {
      "id": "SPEC-009",
      "given": "the application is running",
      "when": "I filter a TypeScript code that return an empty array",
      "then": "it should work correctly"
    },
    {
      "id": "SPEC-010",
      "given": "I am working with actions",
      "when": "I run a TypeScript code",
      "then": "it should complete successfully"
    },
    {
      "id": "SPEC-011",
      "given": "user provides name",
      "when": "validating input",
      "then": "string value should be accepted"
    },
    {
      "id": "SPEC-012",
      "given": "name is empty string",
      "when": "validating input",
      "then": "behavior should follow optional/required rules"
    },
    {
      "id": "SPEC-013",
      "given": "entity with service='code'",
      "when": "processing configuration",
      "then": "correct handler should be selected"
    },
    {
      "id": "SPEC-014",
      "given": "invalid service value",
      "when": "validating configuration",
      "then": "clear error message should identify the issue"
    },
    {
      "id": "SPEC-015",
      "given": "entity with action='run-typescript'",
      "when": "processing configuration",
      "then": "correct handler should be selected"
    },
    {
      "id": "SPEC-016",
      "given": "invalid action value",
      "when": "validating configuration",
      "then": "clear error message should identify the issue"
    },
    {
      "id": "SPEC-017",
      "given": "user configures params",
      "when": "validating input",
      "then": "value should meet schema requirements"
    },
    {
      "id": "SPEC-018",
      "given": "params is set",
      "when": "processing configuration",
      "then": "value should be used correctly"
    },
    {
      "id": "SPEC-019",
      "given": "user configures inputData",
      "when": "validating input",
      "then": "value should meet schema requirements"
    },
    {
      "id": "SPEC-020",
      "given": "inputData is set",
      "when": "processing configuration",
      "then": "value should be used correctly"
    },
    {
      "id": "SPEC-021",
      "given": "user provides code",
      "when": "validating input",
      "then": "string value should be accepted"
    },
    {
      "id": "SPEC-022",
      "given": "code is empty string",
      "when": "validating input",
      "then": "behavior should follow optional/required rules"
    }
  ],
  "$id": "code-run-typescript-action.schema.json"
}
