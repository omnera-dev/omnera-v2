{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "languages.schema.json",
  "title": "Languages Configuration",
  "description": "Multi-language support configuration for the entire application",
  "type": "object",
  "properties": {
    "default": {
      "type": "string",
      "pattern": "^[a-z]{2}(-[A-Z]{2})?$",
      "description": "Default language code (ISO 639-1)",
      "examples": ["en-US", "fr-FR", "es-ES"]
    },
    "supported": {
      "type": "array",
      "minItems": 1,
      "items": {
        "$ref": "./language-config.schema.json"
      },
      "description": "List of supported languages"
    },
    "fallback": {
      "type": "string",
      "pattern": "^[a-z]{2}(-[A-Z]{2})?$",
      "description": "Fallback language when translation is missing (defaults to 'default' language if not specified)"
    },
    "detectBrowser": {
      "type": "boolean",
      "default": true,
      "description": "Auto-detect language from browser"
    },
    "persistSelection": {
      "type": "boolean",
      "default": true,
      "description": "Remember user's language choice in localStorage"
    },
    "translations": {
      "type": "object",
      "patternProperties": {
        "^[a-z]{2}(-[A-Z]{2})?$": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z0-9._-]+$": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "description": "Translation dictionary with flat keys (e.g., 'common.save', 'homepage.hero.title')"
        }
      },
      "additionalProperties": false,
      "description": "Centralized translation dictionaries for all supported languages. Use $t:key syntax in components to reference translations (e.g., children: ['$t:common.save']). Recommended as PRIMARY approach for better reusability and maintainability."
    }
  },
  "required": ["default", "supported"],
  "additionalProperties": false,
  "examples": [
    {
      "default": "en-US",
      "supported": [
        {
          "code": "en-US",
          "label": "English",
          "direction": "ltr"
        },
        {
          "code": "fr-FR",
          "label": "Français",
          "direction": "ltr"
        },
        {
          "code": "ar-SA",
          "label": "العربية",
          "direction": "rtl"
        }
      ],
      "detectBrowser": true,
      "persistSelection": true
    },
    {
      "default": "fr-FR",
      "supported": [
        {
          "code": "en-US",
          "label": "English",
          "direction": "ltr"
        },
        {
          "code": "fr-FR",
          "label": "Français",
          "direction": "ltr"
        }
      ],
      "fallback": "en-US",
      "detectBrowser": true,
      "persistSelection": true
    },
    {
      "default": "en-US",
      "supported": [
        {
          "code": "en-US",
          "label": "English",
          "direction": "ltr"
        },
        {
          "code": "fr-FR",
          "label": "Français",
          "direction": "ltr"
        }
      ],
      "detectBrowser": true,
      "persistSelection": true,
      "translations": {
        "en-US": {
          "common.save": "Save",
          "common.cancel": "Cancel",
          "common.delete": "Delete",
          "common.edit": "Edit",
          "common.back": "Back",
          "common.next": "Next",
          "common.previous": "Previous",
          "common.submit": "Submit",
          "nav.home": "Home",
          "nav.about": "About",
          "nav.contact": "Contact",
          "nav.login": "Login",
          "nav.logout": "Logout",
          "homepage.hero.title": "Welcome to Omnera",
          "homepage.hero.subtitle": "Build your app with configuration",
          "homepage.hero.cta": "Get Started",
          "homepage.features.title": "Features",
          "homepage.features.subtitle": "Everything you need to build amazing apps",
          "errors.404": "Page not found",
          "errors.500": "Server error",
          "errors.generic": "Something went wrong",
          "forms.email.label": "Email Address",
          "forms.email.placeholder": "Enter your email",
          "forms.password.label": "Password",
          "forms.password.placeholder": "Enter your password"
        },
        "fr-FR": {
          "common.save": "Enregistrer",
          "common.cancel": "Annuler",
          "common.delete": "Supprimer",
          "common.edit": "Modifier",
          "common.back": "Retour",
          "common.next": "Suivant",
          "common.previous": "Précédent",
          "common.submit": "Soumettre",
          "nav.home": "Accueil",
          "nav.about": "À propos",
          "nav.contact": "Contact",
          "nav.login": "Connexion",
          "nav.logout": "Déconnexion",
          "homepage.hero.title": "Bienvenue sur Omnera",
          "homepage.hero.subtitle": "Créez votre application avec configuration",
          "homepage.hero.cta": "Commencer",
          "homepage.features.title": "Fonctionnalités",
          "homepage.features.subtitle": "Tout ce dont vous avez besoin pour créer des applications incroyables",
          "errors.404": "Page non trouvée",
          "errors.500": "Erreur serveur",
          "errors.generic": "Quelque chose s'est mal passé",
          "forms.email.label": "Adresse e-mail",
          "forms.email.placeholder": "Entrez votre e-mail",
          "forms.password.label": "Mot de passe",
          "forms.password.placeholder": "Entrez votre mot de passe"
        }
      }
    }
  ],
  "x-specs": [
    {
      "id": "APP-LANGUAGES-001",
      "given": "an app with default language en-US and one supported language",
      "when": "app is configured with minimal language setup",
      "then": "it should use English as the only available language",
      "validation": {
        "setup": {
          "languages": {
            "default": "en-US",
            "supported": [
              {
                "code": "en-US",
                "label": "English"
              }
            ]
          }
        },
        "assertions": [
          "Default: 'en-US'",
          "Supported: 1 language (en-US only)",
          "Minimal valid configuration",
          "Single-language mode"
        ]
      }
    },
    {
      "id": "APP-LANGUAGES-002",
      "given": "an app with default en-US and supported languages [en-US, fr-FR, es-ES]",
      "when": "app is configured with multiple languages",
      "then": "users should be able to switch between all three languages",
      "validation": {
        "setup": {
          "languages": {
            "default": "en-US",
            "supported": [
              {
                "code": "en-US",
                "label": "English"
              },
              {
                "code": "fr-FR",
                "label": "Français"
              },
              {
                "code": "es-ES",
                "label": "Español"
              }
            ]
          }
        },
        "assertions": [
          "Default: 'en-US'",
          "Supported: 3 languages",
          "Multi-language configuration",
          "Language switcher enabled"
        ]
      },
      "application": {
        "languages": {
          "default": "en-US",
          "supported": [
            {
              "code": "en-US",
              "label": "English"
            },
            {
              "code": "fr-FR",
              "label": "Français"
            },
            {
              "code": "es-ES",
              "label": "Español"
            }
          ]
        },
        "component": "language-switcher",
        "expectedDOM": "<div data-testid=\"language-switcher\"><button data-testid=\"language-option-en-US\" class=\"active\">English</button><button data-testid=\"language-option-fr-FR\">Français</button><button data-testid=\"language-option-es-ES\">Español</button></div>",
        "assertions": [
          "3 language buttons rendered",
          "English marked as active (default)",
          "Clicking fr-FR button switches to French",
          "All supported languages accessible"
        ]
      }
    },
    {
      "id": "APP-LANGUAGES-003",
      "given": "an app with default en-US and fallback en-US",
      "when": "a translation is missing for the current language",
      "then": "it should display the English fallback text",
      "validation": {
        "setup": {
          "languages": {
            "default": "en-US",
            "fallback": "en-US",
            "supported": [
              {
                "code": "en-US",
                "label": "English"
              },
              {
                "code": "fr-FR",
                "label": "Français"
              }
            ]
          }
        },
        "assertions": [
          "Fallback: 'en-US'",
          "Missing translations fall back to English",
          "Prevents blank/missing text",
          "Graceful degradation"
        ]
      },
      "application": {
        "languages": {
          "default": "en-US",
          "fallback": "en-US",
          "currentLanguage": "fr-FR"
        },
        "translations": {
          "en-US": {
            "welcome": "Welcome",
            "goodbye": "Goodbye"
          },
          "fr-FR": {
            "welcome": "Bienvenue"
          }
        },
        "component": "text",
        "expectedDOM": "<div><p data-testid=\"welcome-text\">Bienvenue</p><p data-testid=\"goodbye-text\">Goodbye</p></div>",
        "assertions": [
          "welcome: 'Bienvenue' (French translation exists)",
          "goodbye: 'Goodbye' (falls back to English, French translation missing)",
          "Fallback prevents empty text",
          "Seamless UX with incomplete translations"
        ]
      }
    },
    {
      "id": "APP-LANGUAGES-004",
      "given": "an app with detectBrowser set to true",
      "when": "user visits the site for the first time",
      "then": "it should automatically detect and set the browser's preferred language",
      "validation": {
        "setup": {
          "languages": {
            "default": "en-US",
            "detectBrowser": true,
            "supported": [
              {
                "code": "en-US",
                "label": "English"
              },
              {
                "code": "fr-FR",
                "label": "Français"
              }
            ]
          }
        },
        "assertions": [
          "detectBrowser: true",
          "Auto-detects navigator.language",
          "Matches browser language to supported array",
          "Falls back to default if no match"
        ]
      },
      "application": {
        "languages": {
          "default": "en-US",
          "detectBrowser": true,
          "supported": ["en-US", "fr-FR"]
        },
        "browserLanguage": "fr-FR",
        "component": "app",
        "expectedDOM": "<html lang=\"fr-FR\"><body>...</body></html>",
        "localStorage": null,
        "assertions": [
          "Browser language: navigator.language = 'fr-FR'",
          "Auto-detects and sets French",
          "HTML lang=\"fr-FR\"",
          "No localStorage interaction on first visit",
          "Smart default based on user's browser"
        ]
      }
    },
    {
      "id": "APP-LANGUAGES-005",
      "given": "an app with detectBrowser set to false",
      "when": "user visits the site",
      "then": "it should use the default language without auto-detection",
      "validation": {
        "setup": {
          "languages": {
            "default": "en-US",
            "detectBrowser": false,
            "supported": [
              {
                "code": "en-US",
                "label": "English"
              },
              {
                "code": "fr-FR",
                "label": "Français"
              }
            ]
          }
        },
        "assertions": [
          "detectBrowser: false",
          "Ignores navigator.language",
          "Always uses default language",
          "Manual language selection required"
        ]
      },
      "application": {
        "languages": {
          "default": "en-US",
          "detectBrowser": false
        },
        "browserLanguage": "fr-FR",
        "component": "app",
        "expectedDOM": "<html lang=\"en-US\"><body>...</body></html>",
        "assertions": [
          "Browser language: 'fr-FR' (ignored)",
          "Uses default: 'en-US'",
          "HTML lang=\"en-US\"",
          "No auto-detection, explicit control"
        ]
      }
    },
    {
      "id": "APP-LANGUAGES-006",
      "given": "an app with persistSelection set to true",
      "when": "user manually selects a language",
      "then": "it should remember the choice in localStorage for future visits",
      "validation": {
        "setup": {
          "languages": {
            "default": "en-US",
            "persistSelection": true,
            "supported": [
              {
                "code": "en-US",
                "label": "English"
              },
              {
                "code": "fr-FR",
                "label": "Français"
              }
            ]
          }
        },
        "assertions": [
          "persistSelection: true",
          "Saves language to localStorage",
          "Remembers choice across sessions",
          "User preference persisted"
        ]
      },
      "application": {
        "languages": {
          "default": "en-US",
          "persistSelection": true
        },
        "userAction": "Click fr-FR button",
        "component": "language-switcher",
        "localStorage": {
          "key": "omnera_language",
          "value": "fr-FR"
        },
        "expectedDOM": "<html lang=\"fr-FR\"><body>...</body></html>",
        "assertions": [
          "User selects French",
          "localStorage.setItem('omnera_language', 'fr-FR')",
          "HTML updates to lang=\"fr-FR\"",
          "On next visit: reads localStorage and restores French",
          "Persistent language preference"
        ]
      }
    },
    {
      "id": "APP-LANGUAGES-007",
      "given": "an app with persistSelection set to false",
      "when": "user manually selects a language",
      "then": "it should not persist the choice and reset to default on next visit",
      "validation": {
        "setup": {
          "languages": {
            "default": "en-US",
            "persistSelection": false,
            "supported": [
              {
                "code": "en-US",
                "label": "English"
              },
              {
                "code": "fr-FR",
                "label": "Français"
              }
            ]
          }
        },
        "assertions": [
          "persistSelection: false",
          "No localStorage interaction",
          "Language selection is session-only",
          "Resets to default on reload"
        ]
      },
      "application": {
        "languages": {
          "default": "en-US",
          "persistSelection": false
        },
        "userAction": "Click fr-FR button",
        "component": "language-switcher",
        "localStorage": null,
        "expectedDOM": "<html lang=\"fr-FR\"><body>...</body></html>",
        "assertions": [
          "User selects French (session only)",
          "No localStorage write",
          "HTML updates to lang=\"fr-FR\" (current session)",
          "On page reload: resets to default 'en-US'",
          "Session-only language selection"
        ]
      }
    },
    {
      "id": "APP-LANGUAGES-008",
      "given": "an app with supported languages including RTL (ar-SA) and LTR (en-US)",
      "when": "user switches between English and Arabic",
      "then": "the entire app layout should flip between LTR and RTL direction",
      "validation": {
        "setup": {
          "languages": {
            "default": "en-US",
            "supported": [
              {
                "code": "en-US",
                "label": "English",
                "direction": "ltr"
              },
              {
                "code": "ar-SA",
                "label": "العربية",
                "direction": "rtl"
              }
            ]
          }
        },
        "assertions": [
          "English: direction='ltr'",
          "Arabic: direction='rtl'",
          "Supports bidirectional layouts",
          "RTL mirrors entire UI"
        ]
      },
      "application": {
        "languages": {
          "default": "en-US",
          "supported": [
            {
              "code": "en-US",
              "direction": "ltr"
            },
            {
              "code": "ar-SA",
              "direction": "rtl"
            }
          ]
        },
        "userAction": "Switch from en-US to ar-SA",
        "component": "app",
        "expectedDOM": "<html lang=\"ar-SA\" dir=\"rtl\"><body>...</body></html>",
        "assertions": [
          "Before: <html lang=\"en-US\" dir=\"ltr\">",
          "After: <html lang=\"ar-SA\" dir=\"rtl\">",
          "Entire layout mirrors horizontally",
          "Text flows right-to-left",
          "Menus, buttons, forms flip alignment",
          "Complete RTL support"
        ]
      }
    },
    {
      "id": "APP-LANGUAGES-009",
      "given": "an app with 5+ supported languages from different regions",
      "when": "user opens language switcher",
      "then": "all languages should be displayed with their native labels and flags",
      "validation": {
        "setup": {
          "languages": {
            "default": "en-US",
            "supported": [
              {
                "code": "en-US",
                "label": "English",
                "flag": "🇺🇸"
              },
              {
                "code": "fr-FR",
                "label": "Français",
                "flag": "🇫🇷"
              },
              {
                "code": "es-ES",
                "label": "Español",
                "flag": "🇪🇸"
              },
              {
                "code": "de-DE",
                "label": "Deutsch",
                "flag": "🇩🇪"
              },
              {
                "code": "ja-JP",
                "label": "日本語",
                "flag": "🇯🇵"
              },
              {
                "code": "ar-SA",
                "label": "العربية",
                "flag": "🇸🇦"
              }
            ]
          }
        },
        "assertions": [
          "6 supported languages",
          "Native labels for all languages",
          "Flag emojis for visual identification",
          "Global language support"
        ]
      },
      "application": {
        "languages": {
          "supported": [
            {
              "code": "en-US",
              "label": "English",
              "flag": "🇺🇸"
            },
            {
              "code": "fr-FR",
              "label": "Français",
              "flag": "🇫🇷"
            },
            {
              "code": "ja-JP",
              "label": "日本語",
              "flag": "🇯🇵"
            },
            {
              "code": "ar-SA",
              "label": "العربية",
              "flag": "🇸🇦"
            }
          ]
        },
        "component": "language-switcher",
        "expectedDOM": "<div data-testid=\"language-switcher\"><button data-testid=\"language-option-en-US\">🇺🇸 English</button><button data-testid=\"language-option-fr-FR\">🇫🇷 Français</button><button data-testid=\"language-option-ja-JP\">🇯🇵 日本語</button><button data-testid=\"language-option-ar-SA\">🇸🇦 العربية</button></div>",
        "assertions": [
          "All languages listed with flags",
          "Native labels: Français, 日本語, العربية",
          "UTF-8 support: Latin, Japanese, Arabic scripts",
          "Visual flags aid recognition",
          "International UX"
        ]
      }
    },
    {
      "id": "APP-LANGUAGES-010",
      "given": "an app with all features enabled (detectBrowser, persistSelection, fallback)",
      "when": "language configuration is fully utilized",
      "then": "it should provide seamless multi-language UX with auto-detection, persistence, and fallback",
      "validation": {
        "setup": {
          "languages": {
            "default": "en-US",
            "fallback": "en-US",
            "detectBrowser": true,
            "persistSelection": true,
            "supported": [
              {
                "code": "en-US",
                "label": "English"
              },
              {
                "code": "fr-FR",
                "label": "Français"
              }
            ]
          }
        },
        "assertions": [
          "All features enabled",
          "detectBrowser: auto-detection on first visit",
          "persistSelection: remembers user choice",
          "fallback: handles missing translations",
          "Complete multi-language system"
        ]
      }
    },
    {
      "id": "APP-LANGUAGES-011",
      "given": "an app with default language not in supported array",
      "when": "default is 'en-US' but supported array only contains fr-FR and es-ES",
      "then": "it should fail validation - default language must be in supported array",
      "validation": {
        "setup": {
          "languages": {
            "default": "en-US",
            "supported": [
              {
                "code": "fr-FR",
                "label": "Français"
              },
              {
                "code": "es-ES",
                "label": "Español"
              }
            ]
          }
        },
        "assertions": [
          "INVALID: default 'en-US' not in supported array",
          "Validation error: default must be one of supported codes",
          "Prevents configuration errors",
          "Schema constraint enforced"
        ],
        "expectValidation": "fail"
      }
    },
    {
      "id": "APP-LANGUAGES-012",
      "given": "an app with fallback not in supported array",
      "when": "fallback is 'de-DE' but supported array doesn't contain it",
      "then": "it should fail validation - fallback language must be in supported array",
      "validation": {
        "setup": {
          "languages": {
            "default": "en-US",
            "fallback": "de-DE",
            "supported": [
              {
                "code": "en-US",
                "label": "English"
              },
              {
                "code": "fr-FR",
                "label": "Français"
              }
            ]
          }
        },
        "assertions": [
          "INVALID: fallback 'de-DE' not in supported array",
          "Validation error: fallback must be one of supported codes",
          "Prevents referencing unavailable language",
          "Schema constraint enforced"
        ],
        "expectValidation": "fail"
      }
    },
    {
      "id": "APP-LANGUAGES-013",
      "given": "an app without explicit fallback",
      "when": "fallback property is omitted",
      "then": "it should automatically use default language as fallback",
      "validation": {
        "setup": {
          "languages": {
            "default": "en-US",
            "supported": [
              {
                "code": "en-US",
                "label": "English"
              },
              {
                "code": "fr-FR",
                "label": "Français"
              }
            ]
          }
        },
        "assertions": [
          "No fallback property",
          "Fallback defaults to 'default' language",
          "Fallback = 'en-US' (same as default)",
          "Simplifies configuration"
        ]
      }
    },
    {
      "id": "APP-LANGUAGES-014",
      "given": "an app with fallback different from default",
      "when": "default is 'fr-FR' and fallback is 'en-US'",
      "then": "it should show English text when French translation is missing (useful for French site with English fallback)",
      "validation": {
        "setup": {
          "languages": {
            "default": "fr-FR",
            "fallback": "en-US",
            "supported": [
              {
                "code": "en-US",
                "label": "English"
              },
              {
                "code": "fr-FR",
                "label": "Français"
              }
            ]
          }
        },
        "assertions": [
          "Default: 'fr-FR' (French by default)",
          "Fallback: 'en-US' (English fallback)",
          "Useful for non-English default sites",
          "Fallback can differ from default"
        ]
      },
      "application": {
        "languages": {
          "default": "fr-FR",
          "fallback": "en-US",
          "currentLanguage": "fr-FR"
        },
        "translations": {
          "en-US": {
            "welcome": "Welcome",
            "contact": "Contact"
          },
          "fr-FR": {
            "welcome": "Bienvenue"
          }
        },
        "component": "text",
        "expectedDOM": "<div><p data-testid=\"welcome-text\">Bienvenue</p><p data-testid=\"contact-text\">Contact</p></div>",
        "assertions": [
          "Default language: French",
          "welcome: 'Bienvenue' (French translation)",
          "contact: 'Contact' (falls back to English, no French translation)",
          "French-first site with English safety net",
          "Flexible fallback strategy"
        ]
      }
    },
    {
      "id": "APP-LANGUAGES-INTEGRATION-001",
      "given": "a multi-language app with theme integration",
      "when": "language direction affects theme spacing and layout",
      "then": "it should apply RTL-aware theme tokens for Arabic/Hebrew while maintaining LTR for English/French",
      "application": {
        "languages": {
          "default": "en-US",
          "supported": [
            {
              "code": "en-US",
              "direction": "ltr"
            },
            {
              "code": "ar-SA",
              "direction": "rtl"
            }
          ]
        },
        "theme": {
          "spacing": {
            "section": "4rem",
            "container": "max-w-7xl mx-auto px-4"
          }
        },
        "component": "page-section",
        "expectedDOM": {
          "en-US": "<html lang=\"en-US\" dir=\"ltr\"><section style=\"padding: 4rem 0;\"><div style=\"max-width: 80rem; margin-left: auto; margin-right: auto; padding-left: 1rem; padding-right: 1rem;\">Content</div></section></html>",
          "ar-SA": "<html lang=\"ar-SA\" dir=\"rtl\"><section style=\"padding: 4rem 0;\"><div style=\"max-width: 80rem; margin-left: auto; margin-right: auto; padding-left: 1rem; padding-right: 1rem;\">Content</div></section></html>"
        },
        "assertions": [
          "Language direction controls HTML dir attribute",
          "Theme spacing remains consistent across languages",
          "RTL: margin-left/right automatically flip via dir=\"rtl\"",
          "Theme + Language integration: consistent design across directions",
          "CSS logical properties (margin-inline) respect dir attribute",
          "Unified theme tokens work for both LTR and RTL"
        ]
      }
    },
    {
      "id": "APP-LANGUAGES-INTEGRATION-002",
      "given": "a multi-language app with page content",
      "when": "user switches language on a page with translated content",
      "then": "it should update page metadata, HTML attributes, and visible text while maintaining scroll position and component state",
      "application": {
        "languages": {
          "default": "en-US",
          "persistSelection": true,
          "supported": [
            {
              "code": "en-US",
              "label": "English"
            },
            {
              "code": "fr-FR",
              "label": "Français"
            }
          ]
        },
        "page": {
          "en-US": {
            "title": "Welcome to Our App",
            "description": "Discover our features"
          },
          "fr-FR": {
            "title": "Bienvenue sur Notre App",
            "description": "Découvrez nos fonctionnalités"
          }
        },
        "userAction": "Switch from en-US to fr-FR",
        "component": "page",
        "expectedDOM": {
          "before": "<html lang=\"en-US\"><head><title>Welcome to Our App</title><meta name=\"description\" content=\"Discover our features\" /></head><body><h1>Welcome to Our App</h1></body></html>",
          "after": "<html lang=\"fr-FR\"><head><title>Bienvenue sur Notre App</title><meta name=\"description\" content=\"Découvrez nos fonctionnalités\" /></head><body><h1>Bienvenue sur Notre App</h1></body></html>"
        },
        "localStorage": {
          "key": "omnera_language",
          "value": "fr-FR"
        },
        "assertions": [
          "HTML lang attribute updates: en-US → fr-FR",
          "Page title updates: 'Welcome to Our App' → 'Bienvenue sur Notre App'",
          "Meta description updates for SEO",
          "Visible text translates: heading, body content",
          "localStorage persists language choice",
          "Scroll position maintained (no page reload)",
          "Component state preserved during language switch",
          "Complete language + page integration"
        ]
      }
    },
    {
      "id": "APP-LANGUAGES-015",
      "given": "an app with centralized translations and components using $t: references",
      "when": "component content uses $t:key syntax",
      "then": "it should resolve translation keys from centralized translations dictionary",
      "validation": {
        "setup": {
          "languages": {
            "default": "en-US",
            "supported": [
              {
                "code": "en-US",
                "label": "English"
              },
              {
                "code": "fr-FR",
                "label": "Français"
              }
            ],
            "translations": {
              "en-US": {
                "common.save": "Save"
              },
              "fr-FR": {
                "common.save": "Enregistrer"
              }
            }
          }
        },
        "assertions": [
          "$t:common.save resolves to 'Save' in English",
          "$t:common.save resolves to 'Enregistrer' in French",
          "Centralized approach (PRIMARY pattern)",
          "Reusable across all components"
        ]
      },
      "application": {
        "languages": {
          "translations": {
            "en-US": {
              "common.save": "Save"
            },
            "fr-FR": {
              "common.save": "Enregistrer"
            }
          }
        },
        "page": {
          "sections": [
            {
              "type": "button",
              "children": ["$t:common.save"]
            }
          ]
        },
        "expectedDOM": {
          "en-US": "<button>Save</button>",
          "fr-FR": "<button>Enregistrer</button>"
        },
        "assertions": [
          "$t: prefix indicates centralized translation reference",
          "Key 'common.save' looked up in translations[currentLanguage]",
          "Single translation key used across multiple components",
          "DRY principle: no duplication of 'Save' translations"
        ]
      }
    },
    {
      "id": "APP-LANGUAGES-016",
      "given": "an app with centralized translations and a missing translation key",
      "when": "$t:key reference doesn't exist in current language",
      "then": "it should fall back to default language translation",
      "validation": {
        "setup": {
          "languages": {
            "default": "en-US",
            "fallback": "en-US",
            "supported": [
              {
                "code": "en-US",
                "label": "English"
              },
              {
                "code": "fr-FR",
                "label": "Français"
              }
            ],
            "translations": {
              "en-US": {
                "common.save": "Save",
                "common.cancel": "Cancel"
              },
              "fr-FR": {
                "common.save": "Enregistrer"
              }
            }
          }
        },
        "assertions": [
          "French has 'common.save' translation",
          "French missing 'common.cancel' translation",
          "Fallback to English for missing keys",
          "Graceful degradation prevents blank text"
        ]
      },
      "application": {
        "languages": {
          "currentLanguage": "fr-FR",
          "translations": {
            "en-US": {
              "common.save": "Save",
              "common.cancel": "Cancel"
            },
            "fr-FR": {
              "common.save": "Enregistrer"
            }
          }
        },
        "page": {
          "sections": [
            {
              "type": "button",
              "children": ["$t:common.save"]
            },
            {
              "type": "button",
              "children": ["$t:common.cancel"]
            }
          ]
        },
        "expectedDOM": "<div><button>Enregistrer</button><button>Cancel</button></div>",
        "assertions": [
          "common.save: French translation exists → 'Enregistrer'",
          "common.cancel: French translation missing → fallback to English 'Cancel'",
          "No blank buttons or errors",
          "Seamless UX with incomplete translations",
          "Translation coverage can be partial"
        ]
      }
    },
    {
      "id": "APP-LANGUAGES-017",
      "given": "a component with $t: reference and per-component i18n override",
      "when": "both centralized and per-component translations exist",
      "then": "per-component i18n should override centralized $t: translation",
      "validation": {
        "setup": {
          "languages": {
            "default": "en-US",
            "supported": [
              {
                "code": "en-US",
                "label": "English"
              },
              {
                "code": "fr-FR",
                "label": "Français"
              }
            ],
            "translations": {
              "en-US": {
                "common.submit": "Submit"
              },
              "fr-FR": {
                "common.submit": "Soumettre"
              }
            }
          }
        },
        "assertions": [
          "Centralized: 'common.submit' = 'Submit' / 'Soumettre'",
          "Component override: context-specific translation",
          "Hybrid approach: centralized + override",
          "Per-component wins when both exist"
        ]
      },
      "application": {
        "languages": {
          "translations": {
            "en-US": {
              "common.submit": "Submit"
            },
            "fr-FR": {
              "common.submit": "Soumettre"
            }
          }
        },
        "components": [
          {
            "type": "button",
            "children": ["$t:common.submit"]
          },
          {
            "type": "button",
            "children": ["$t:common.submit"],
            "i18n": {
              "en-US": {
                "content": "Submit Payment"
              },
              "fr-FR": {
                "content": "Soumettre Paiement"
              }
            }
          }
        ],
        "expectedDOM": {
          "en-US": "<div><button>Submit</button><button>Submit Payment</button></div>",
          "fr-FR": "<div><button>Soumettre</button><button>Soumettre Paiement</button></div>"
        },
        "assertions": [
          "First button: uses centralized $t:common.submit",
          "Second button: per-component i18n overrides centralized",
          "Hybrid flexibility: general + specific",
          "Use override for context-specific variations",
          "Fallback chain: per-component → centralized → fallback language"
        ]
      }
    },
    {
      "id": "APP-LANGUAGES-018",
      "given": "an app with organized namespace structure in centralized translations",
      "when": "translations use namespaces (common.*, nav.*, homepage.*, errors.*)",
      "then": "it should organize translations by feature and improve maintainability",
      "validation": {
        "setup": {
          "languages": {
            "default": "en-US",
            "supported": [
              {
                "code": "en-US",
                "label": "English"
              }
            ],
            "translations": {
              "en-US": {
                "common.save": "Save",
                "common.cancel": "Cancel",
                "nav.home": "Home",
                "nav.about": "About",
                "homepage.hero.title": "Welcome",
                "homepage.hero.cta": "Get Started",
                "errors.404": "Not Found",
                "errors.500": "Server Error"
              }
            }
          }
        },
        "assertions": [
          "common.*: Reusable UI strings across app",
          "nav.*: Navigation-specific translations",
          "homepage.*: Homepage-specific content",
          "errors.*: Error messages",
          "Organized by feature, not by component type",
          "Semantic naming improves maintainability"
        ]
      },
      "application": {
        "languages": {
          "translations": {
            "en-US": {
              "common.save": "Save",
              "common.cancel": "Cancel",
              "nav.home": "Home",
              "nav.about": "About",
              "homepage.hero.title": "Welcome to Omnera",
              "homepage.hero.cta": "Get Started",
              "errors.404": "Page not found",
              "errors.500": "Server error"
            }
          }
        },
        "namespaceOrganization": {
          "common.*": "Reusable UI strings (buttons, labels, actions)",
          "nav.*": "Navigation menu items",
          "[page].*": "Page-specific content (homepage.*, about.*, contact.*)",
          "errors.*": "Error messages",
          "forms.*": "Form labels, placeholders, validation",
          "auth.*": "Authentication flows"
        },
        "bestPractices": [
          "✅ Semantic keys: common.save (not button1, btn_save)",
          "✅ Feature-based: homepage.hero.title (not just hero.title)",
          "✅ Consistent prefixes: all nav items under nav.*",
          "❌ Avoid: component-type prefixes (button.save, div.content)",
          "❌ Avoid: positional names (homepage.section1.text1)",
          "Translation file can be easily audited: 'Show all homepage.* keys'",
          "Translators understand context from namespace",
          "Scale to hundreds of translations without chaos"
        ]
      }
    }
  ]
}
